<HTML>
<HEAD>
<TITLE>BBS水木清华站∶精华区</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清华站∶精华区</H1></CENTER>
<A Name="top"></a>
发信人:&nbsp;say&nbsp;(秋枫),&nbsp;信区:&nbsp;Mud_Builder&nbsp;<BR>
标&nbsp;&nbsp;题:&nbsp;关于mudlib安全性的考虑(转载)&nbsp;<BR>
发信站:&nbsp;BBS&nbsp;水木清华站&nbsp;(Fri&nbsp;Jan&nbsp;29&nbsp;19:32:13&nbsp;1999)&nbsp;WWW-POST&nbsp;<BR>
&nbsp;<BR>
发信人:&nbsp;windeye&nbsp;(风眼),&nbsp;信区:&nbsp;Mud_Builder&nbsp;<BR>
标&nbsp;&nbsp;题:&nbsp;关于mudlib安全性的考虑&nbsp;<BR>
发信站:&nbsp;逸仙时空&nbsp;Yat-sen&nbsp;Channel&nbsp;(Sat&nbsp;Oct&nbsp;17&nbsp;18:21:53&nbsp;1998),&nbsp;站内信件&nbsp;<BR>
&nbsp;<BR>
*******&nbsp;<BR>
等级安全&nbsp;<BR>
*******&nbsp;<BR>
&nbsp;<BR>
1.使用author_file来表示object的等级，也就是object等级只与其目录有关系(?)&nbsp;<BR>
2.不对this_player()做等级验证(user-&gt;save()的例子)&nbsp;<BR>
3.对previous_object_list(previous_object(-1))做等级检查，取除this_player()&nbsp;<BR>
外最低等级为previous_object的等级，再和this_object做等级检验。&nbsp;<BR>
&nbsp;<BR>
********&nbsp;<BR>
安全检查&nbsp;<BR>
********&nbsp;<BR>
涉及安全方面的包括read,write,exec,destruct,clone&nbsp;<BR>
(update&nbsp;=&nbsp;destruce&nbsp;+&nbsp;create)&nbsp;<BR>
某些object不允许被低等级者(比如/u目录)destruct和clone(见函数等级检查)&nbsp;<BR>
权限控制分为读权，写权，(函数)执行权，destruct权和create权。&nbsp;<BR>
&nbsp;<BR>
**********&nbsp;<BR>
读权的控制&nbsp;<BR>
**********&nbsp;<BR>
读权是基本权限。但读权的控制有可能导致player因其等级低而无法读取&nbsp;<BR>
他的data(因此在安全检查时要忽略this_player())。另外要防止的情形是&nbsp;<BR>
低级wiz通过写自己目录下的程序来读写高级别文件(因此安全检查是对所有&nbsp;<BR>
previous_object的list而不仅仅是previous_object)。&nbsp;<BR>
&nbsp;<BR>
基本上大部分程序是可读的，但/data/user,/data/login目录例外，player&nbsp;<BR>
的数据和passwd应该是低中级wiz不可见的。&nbsp;<BR>
&nbsp;<BR>
**********&nbsp;<BR>
写权的控制&nbsp;<BR>
**********&nbsp;<BR>
写权是最重要的安全权限，在现行mudlib里对它的控制不够严密。&nbsp;<BR>
对写权的控制体现为：&nbsp;<BR>
低级wiz只能通过roommaker写自己的workrom等&nbsp;<BR>
中级wiz可使用edit，但只能编辑自己目录下的区域(也就是可以通过限制&nbsp;<BR>
他目录下的文件的权限来实现权限控制，即写权控制执行权)&nbsp;<BR>
高级wiz可编辑/d,/std,/obj目录&nbsp;<BR>
天神级可编辑/adm和/data目录&nbsp;<BR>
（实际级别可以再细分）&nbsp;<BR>
&nbsp;<BR>
对写权的控制还有一种特例：&nbsp;<BR>
类似edemote，可允许低级wiz通过命令修改一些文件(如emoted.o)，&nbsp;<BR>
这些文件是供高级别程序读取的(如emoted.c)。这种修改不涉及函数体&nbsp;<BR>
的修改，而且容易跟踪，还是比较安全的。&nbsp;<BR>
&nbsp;<BR>
************************&nbsp;<BR>
执行权--函数中的等级检查&nbsp;<BR>
************************&nbsp;<BR>
某些涉及修改玩家属性的函数(如set,add,delete,skill_improve等)&nbsp;<BR>
将在执行前检查previous_object_list和this_object()&nbsp;<BR>
等级排列为：&nbsp;<BR>
wiz(把wiz等级排在比player还低是为了允许qc程序改变wiz属性而不能改变player)&nbsp;<BR>
player(即object级)地图&nbsp;，obj&nbsp;,&nbsp;npc....等&nbsp;<BR>
std(标准级)feature,skills等&nbsp;<BR>
master(系统级)daemons,user&nbsp;data及对user&nbsp;data进行操作的文件&nbsp;<BR>
adm(最高安全级)甚至连天神都不能修改的文件：主要是一些日志文件&nbsp;<BR>
各等级之间的读，写，执行关系待最后确定。&nbsp;<BR>
&nbsp;<BR>
************************&nbsp;<BR>
update权(destruct+create)&nbsp;<BR>
************************&nbsp;<BR>
destruct的权限可在函数执行中控制&nbsp;<BR>
至于object的生成，可在master的valid_object里控制&nbsp;<BR>
可避免较低级别wiz通过程序生成某些受控制的object(特别是宝物)&nbsp;<BR>
&nbsp;<BR>
******************&nbsp;<BR>
一些涉及安全的efun&nbsp;<BR>
******************&nbsp;<BR>
如exec,ed等都必须禁止valid_override&nbsp;<BR>
&nbsp;<BR>
*****************&nbsp;<BR>
命令级的安全控制&nbsp;<BR>
*****************&nbsp;<BR>
可考虑加入第二密码命令passlock&nbsp;<BR>
除login&nbsp;password之外还有一个第二密码passwd2&nbsp;<BR>
某些命令，如suicide,kill,abandon等，以及所有wiz命令必须通过passunlock&nbsp;<BR>
解锁才能执行。假如不希望别人使用你的机器时用你的mud窗口，可运行passlock&nbsp;<BR>
加锁。&nbsp;<BR>
第二密码可以用比较灵活的方式：例如是一个8位数字，passunlock时随机询问&nbsp;<BR>
其中三个数位数字的和，差，积等......若回答错误则会踢出系统。&nbsp;<BR>
当login时自动执行passlock(也就是每次login必须解锁才能执行特定命令)&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
※&nbsp;来源:．逸仙时空&nbsp;Yat-sen&nbsp;Channel&nbsp;bbs.zsu.edu.cn．[FROM:&nbsp;202.96.130.211]&nbsp;<BR>
&nbsp;<BR>
清华站&nbsp;(Fri&nbsp;Jan&nbsp;29&nbsp;19:32:13&nbsp;1999)&nbsp;WWW-POST&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
※&nbsp;来源:・BBS&nbsp;水木清华站&nbsp;bbs.net.tsinghua.edu.cn・[FROM:&nbsp;202.116.9.82]&nbsp;&nbsp;<BR>
<A HREF='javascript:history.go(-1)'>返回上一页</A>
<A HREF="index.htm">回到目录</A>
<A HREF="#top">回到页首</A>
<A HREF="00000001.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清华站∶精华区</H1></CENTER>
</BODY></HTML>