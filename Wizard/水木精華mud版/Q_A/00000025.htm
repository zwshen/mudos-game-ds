<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;kill300&nbsp;(劍&nbsp;雄),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
1.為什麼init裡的東西總是比主函數執行的早,比方我在一個房間的init裡&nbsp;<BR>
寫個message問候,他就出現的比房間的描述早,難看死了&nbsp;<BR>
2.在房間裡調用move命令把玩家move到另外一個房間裡的時候,總是出現&nbsp;<BR>
目標房間描敘出現兩次的情況,怎麼半?&nbsp;<BR>
3.::init是繼承的意思吧,為什麼總是見到npc裡有,room裡沒有&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;nerd&nbsp;(總以為自己已經長大),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;kill300&nbsp;(劍&nbsp;雄)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;1.為什麼init裡的東西總是比主函數執行的早,比方我在一個房間的init裡&nbsp;</I><BR>
︰<I>&nbsp;寫個message問候,他就出現的比房間的描述早,難看死了&nbsp;</I><BR>
所以xo裡有welcome_visitor之類的函數,&nbsp;<BR>
另外的解決'方案就是init裡call_out&nbsp;:)不過這煩﹒﹒還要判斷&nbsp;<BR>
是否在同一房間裡等等﹒﹒&nbsp;<BR>
︰<I>&nbsp;2.在房間裡調用move命令把玩家move到另外一個房間裡的時候,總是出現&nbsp;</I><BR>
︰<I>&nbsp;目標房間描敘出現兩次的情況,怎麼半?&nbsp;</I><BR>
不會吧??&nbsp;<BR>
︰<I>&nbsp;3.::init是繼承的意思吧,為什麼總是見到npc裡有,room裡沒有&nbsp;</I><BR>
那就是npc.c裡有,&nbsp;room裡沒有了..&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;kill300&nbsp;(劍&nbsp;雄)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;1.為什麼init裡的東西總是比主函數執行的早,比方我在一個房間的init裡&nbsp;</I><BR>
︰<I>&nbsp;寫個message問候,他就出現的比房間的描述早,難看死了&nbsp;</I><BR>
加個call_out來greeting&nbsp;<BR>
︰<I>&nbsp;2.在房間裡調用move命令把玩家move到另外一個房間裡的時候,總是出現&nbsp;</I><BR>
︰<I>&nbsp;目標房間描敘出現兩次的情況,怎麼半?&nbsp;</I><BR>
?不會啊?怎麼會這樣&nbsp;<BR>
︰<I>&nbsp;3.::init是繼承的意思吧,為什麼總是見到npc裡有,room裡沒有&nbsp;</I><BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::是重載操作符,知道什麼是重載巴&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;kill300&nbsp;(劍&nbsp;雄),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;加個call_out來greeting&nbsp;</I><BR>
︰<I>&nbsp;?不會啊?怎麼會這樣&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::是重載操作符,知道什麼是重載巴&nbsp;</I><BR>
&nbsp;<BR>
確實是目標房間的描述出現兩次,&nbsp;<BR>
ob-&gt;move(&quot;/d/city/kedian&quot;)對吧,情況總是&nbsp;<BR>
源房間描述沒有,只有init裡的message,目標房間&nbsp;<BR>
則總是兩次.&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
不好意思,什麼是重載啊?&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
重載，是指，當你用的對像中有和其繼承的對像有同名函數時&nbsp;<BR>
將會使用本地函數－－不知道這麼解釋對不對&nbsp;<BR>
但是如果在函數中使用了::操作符，則會在執行完本地函數後&nbsp;<BR>
進而去執行父類的同名函數。&nbsp;<BR>
不過，這個在lpmud中可以屏蔽（是nerd跟我說才知道的）&nbsp;<BR>
在master物件中&nbsp;&nbsp;有一個valid_overwrite函數，可以用來對&nbsp;<BR>
重載操作進行權限的限制（防止有人利用重載動手腳啊）&nbsp;<BR>
【&nbsp;在&nbsp;kill300&nbsp;(劍&nbsp;雄)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;確實是目標房間的描述出現兩次,&nbsp;</I><BR>
︰<I>&nbsp;ob-&gt;move(&quot;/d/city/kedian&quot;)對吧,情況總是&nbsp;</I><BR>
︰<I>&nbsp;源房間描述沒有,只有init裡的message,目標房間&nbsp;</I><BR>
︰<I>&nbsp;則總是兩次.&nbsp;</I><BR>
︰<I>&nbsp;不好意思,什麼是重載啊?&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;nerd&nbsp;(總以為自己已經長大),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;重載，是指，當你用的對像中有和其繼承的對像有同名函數時&nbsp;</I><BR>
︰<I>&nbsp;將會使用本地函數－－不知道這麼解釋對不對&nbsp;</I><BR>
︰<I>&nbsp;但是如果在函數中使用了::操作符，則會在執行完本地函數後&nbsp;</I><BR>
︰<I>&nbsp;進而去執行父類的同名函數。&nbsp;</I><BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不是執行完本地函數之後.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::是域運算符,&nbsp;表示後面這個函數是父類中的函數.&nbsp;<BR>
︰<I>&nbsp;不過，這個在lpmud中可以屏蔽（是nerd跟我說才知道的）&nbsp;</I><BR>
︰<I>&nbsp;在master物件中&nbsp;&nbsp;有一個valid_overwrite函數，可以用來對&nbsp;</I><BR>
︰<I>&nbsp;重載操作進行權限的限制（防止有人利用重載動手腳啊）&nbsp;</I><BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只對efun::的運算起作用,&nbsp;防止有人繞過simul&nbsp;efun.&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不是執行完本地函數之後.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::是域運算符,&nbsp;表示後面這個函數是父類中的函數.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只對efun::的運算起作用,&nbsp;防止有人繞過simul&nbsp;efun.&nbsp;</I><BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;某人啊&nbsp;hoho&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;olives&nbsp;(風),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;kill300&nbsp;(劍&nbsp;雄)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;確實是目標房間的描述出現兩次,&nbsp;</I><BR>
︰<I>&nbsp;ob-&gt;move(&quot;/d/city/kedian&quot;)對吧,情況總是&nbsp;</I><BR>
︰<I>&nbsp;源房間描述沒有,只有init裡的message,目標房間&nbsp;</I><BR>
︰<I>&nbsp;則總是兩次.&nbsp;</I><BR>
︰<I>&nbsp;不好意思,什麼是重載啊?&nbsp;</I><BR>
為什麼我move過去沒問題啊&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;yeung&nbsp;(流星雨),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;kill300&nbsp;(劍&nbsp;雄)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;1.為什麼init裡的東西總是比主函數執行的早,比方我在一個房間的init裡&nbsp;</I><BR>
︰<I>&nbsp;寫個message問候,他就出現的比房間的描述早,難看死了&nbsp;</I><BR>
&nbsp;<BR>
這個問題你可以看看es2的解決方法,是用一個call_out來處理,延時2秒.&nbsp;<BR>
典型的是/d/snow/inn的店小二&nbsp;<BR>
&nbsp;<BR>
︰<I>&nbsp;2.在房間裡調用move命令把玩家move到另外一個房間裡的時候,總是出現&nbsp;</I><BR>
︰<I>&nbsp;目標房間描敘出現兩次的情況,怎麼半?&nbsp;</I><BR>
&nbsp;<BR>
這個是你的程序問題吧,btw,可以看看/feature/move.c,有的lib支持&nbsp;<BR>
ob-&gt;move(xxx,1)來避免顯示描述.&nbsp;<BR>
&nbsp;<BR>
︰<I>&nbsp;3.::init是繼承的意思吧,為什麼總是見到npc裡有,room裡沒有&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;&nbsp;::加函數名是指調用它所重載的同名函數,沒有是因為不需要.需要&nbsp;<BR>
&nbsp;的時候自然會有的.&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;yeung&nbsp;(流星雨),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;重載，是指，當你用的對像中有和其繼承的對像有同名函數時&nbsp;</I><BR>
︰<I>&nbsp;將會使用本地函數－－不知道這麼解釋對不對&nbsp;</I><BR>
︰<I>&nbsp;但是如果在函數中使用了::操作符，則會在執行完本地函數後&nbsp;</I><BR>
︰<I>&nbsp;進而去執行父類的同名函數。&nbsp;</I><BR>
︰<I>&nbsp;不過，這個在lpmud中可以屏蔽（是nerd跟我說才知道的）&nbsp;</I><BR>
︰<I>&nbsp;在master物件中&nbsp;&nbsp;有一個valid_overwrite函數，可以用來對&nbsp;</I><BR>
︰<I>&nbsp;重載操作進行權限的限制（防止有人利用重載動手腳啊）&nbsp;</I><BR>
&nbsp;<BR>
動手腳偶比較喜歡bind一個函數過去,嘿嘿.&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;yeung&nbsp;(流星雨)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;這個問題你可以看看es2的解決方法,是用一個call_out來處理,延時2秒.&nbsp;</I><BR>
︰<I>&nbsp;典型的是/d/snow/inn的店小二&nbsp;</I><BR>
痛苦就在於有些手腳不好做了，比如踢人&nbsp;<BR>
由於call_out得原因，玩家可以徑直得闖&nbsp;<BR>
記得xkx得小二吧，踢乞丐得那個&nbsp;<BR>
︰<I>&nbsp;這個是你的程序問題吧,btw,可以看看/feature/move.c,有的lib支持&nbsp;</I><BR>
︰<I>&nbsp;ob-&gt;move(xxx,1)來避免顯示描述.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;::加函數名是指調用它所重載的同名函數,沒有是因為不需要.需要&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;的時候自然會有的.&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;ghosts&nbsp;(U-2◆水手13),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;所以xo裡有welcome_visitor之類的函數,&nbsp;</I><BR>
︰<I>&nbsp;另外的解決'方案就是init裡call_out&nbsp;:)不過這煩﹒﹒還要判斷&nbsp;</I><BR>
︰<I>&nbsp;是否在同一房間裡等等﹒﹒&nbsp;</I><BR>
︰<I>&nbsp;不會吧??&nbsp;</I><BR>
沒錯,我也遇到過(用move把人搬到一個房間的話,描述就是出兩次)&nbsp;<BR>
不知道為什麼:(((&nbsp;<BR>
&nbsp;<BR>
︰<I>&nbsp;那就是npc.c裡有,&nbsp;room裡沒有了..&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;MicroLiang&nbsp;(Micro&nbsp;Liang),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不是執行完本地函數之後.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::是域運算符,&nbsp;表示後面這個函數是父類中的函數.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只對efun::的運算起作用,&nbsp;防止有人繞過simul&nbsp;efun.&nbsp;</I><BR>
&nbsp;<BR>
nomask&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;MicroLiang&nbsp;(Micro&nbsp;Liang),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;olives&nbsp;(風)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;為什麼我move過去沒問題啊&nbsp;</I><BR>
&nbsp;<BR>
過去沒問題，說明現在有問題。&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;say&nbsp;(青蛙),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不是執行完本地函數之後.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::是域運算符,&nbsp;表示後面這個函數是父類中的函數.&nbsp;</I><BR>
︰<I>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只對efun::的運算起作用,&nbsp;防止有人繞過simul&nbsp;efun.&nbsp;</I><BR>
&nbsp;<BR>
好像只有destruct函數被禁止了重載吧？move_to函數被&nbsp;<BR>
修改為調用move函數&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;nerd&nbsp;(總以為自己已經長大),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
bind受到valid_bind的控制..&nbsp;<BR>
【&nbsp;在&nbsp;yeung&nbsp;(流星雨)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;動手腳偶比較喜歡bind一個函數過去,嘿嘿.&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;nerd&nbsp;(總以為自己已經長大),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
這個破人,也不看清楚了.&nbsp;efun怎麼給它加nomask的說明符?&nbsp;<BR>
而且nomask只是不能重載,並非不能調用.&nbsp;<BR>
【&nbsp;在&nbsp;MicroLiang&nbsp;(Micro&nbsp;Liang)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;nomask&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;nerd&nbsp;(總以為自己已經長大),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
呵呵,我要是規定snoop和shutdown禁止重載呢..&nbsp;<BR>
【&nbsp;在&nbsp;say&nbsp;(青蛙)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;好像只有destruct函數被禁止了重載吧？move_to函數被&nbsp;</I><BR>
︰<I>&nbsp;修改為調用move函數&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;yeung&nbsp;(流星雨),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;akuma&nbsp;(很不溫柔&nbsp;&nbsp;真的我)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;痛苦就在於有些手腳不好做了，比如踢人&nbsp;</I><BR>
︰<I>&nbsp;由於call_out得原因，玩家可以徑直得闖&nbsp;</I><BR>
︰<I>&nbsp;記得xkx得小二吧，踢乞丐得那個&nbsp;</I><BR>
&nbsp;<BR>
那個嘛，做在valid_leave裡面好了&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;yeung&nbsp;(流星雨),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;bind受到valid_bind的控制..&nbsp;</I><BR>
&nbsp;<BR>
問題是valid_bind控制的不嚴格的說。&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;MicroLiang&nbsp;(Micro&nbsp;Liang),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;這個破人,也不看清楚了.&nbsp;efun怎麼給它加nomask的說明符?&nbsp;</I><BR>
︰<I>&nbsp;而且nomask只是不能重載,並非不能調用.&nbsp;</I><BR>
&nbsp;<BR>
回的是前一個問題，正是想叫他不能重載函數在對像中。&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;say&nbsp;(青蛙),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;MicroLiang&nbsp;(Micro&nbsp;Liang)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;回的是前一個問題，正是想叫他不能重載函數在對像中。&nbsp;</I><BR>
說道&nbsp;nomask，我一直很不明白那些加在類型定義&nbsp;<BR>
前面的定義符是什麼意思，比如varags...，能不能詳細&nbsp;<BR>
些介紹？或者告訴我在哪裡能找到說明//thanks&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;xdie&nbsp;(小蝶),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
varargs表示後面的參數的個數是可變的。&nbsp;<BR>
在那個英文的lpc入門裡都有。主要的這類保留字有：&nbsp;<BR>
&nbsp;<BR>
nomask&nbsp;<BR>
varargs&nbsp;<BR>
public/private/protected&nbsp;<BR>
nosave/static&nbsp;<BR>
...&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;say&nbsp;(青蛙)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;說道&nbsp;nomask，我一直很不明白那些加在類型定義&nbsp;</I><BR>
︰<I>&nbsp;前面的定義符是什麼意思，比如varags...，能不能詳細&nbsp;</I><BR>
︰<I>&nbsp;些介紹？或者告訴我在哪裡能找到說明//thanks&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;yeung&nbsp;(流星雨),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;say&nbsp;(青蛙)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;說道&nbsp;nomask，我一直很不明白那些加在類型定義&nbsp;</I><BR>
︰<I>&nbsp;前面的定義符是什麼意思，比如varags...，能不能詳細&nbsp;</I><BR>
︰<I>&nbsp;些介紹？或者告訴我在哪裡能找到說明//thanks&nbsp;</I><BR>
&nbsp;<BR>
mixed&nbsp;xxxxx()&nbsp;表明該函數返回mixed類型（其實就是可能為任何類型)&nbsp;<BR>
varargs&nbsp;xxx()&nbsp;表明該函數可接受不定數目的參數，從沒有到按順序填滿聲明的參數。&nbsp;<BR>
查查lpc語法就知道了。&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;nerd&nbsp;(總以為自己已經長大),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
這兩個還不太一樣，mixed是數據類型&nbsp;<BR>
varargs則是個保留字，表示對函數的一個說明或者限定。。&nbsp;<BR>
【&nbsp;在&nbsp;yeung&nbsp;(流星雨)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;mixed&nbsp;xxxxx()&nbsp;表明該函數返回mixed類型（其實就是可能為任何類型)&nbsp;</I><BR>
︰<I>&nbsp;varargs&nbsp;xxx()&nbsp;表明該函數可接受不定數目的參數，從沒有到按順序填滿聲明的參數。&nbsp;</I><BR>
︰<I>&nbsp;查查lpc語法就知道了。&nbsp;</I><BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;yeung&nbsp;(流星雨),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;nerd&nbsp;(總以為自己已經長大)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;這兩個還不太一樣，mixed是數據類型&nbsp;</I><BR>
︰<I>&nbsp;varargs則是個保留字，表示對函數的一個說明或者限定。。&nbsp;</I><BR>
&nbsp;<BR>
nod&nbsp;nod,順便灌水一篇&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;MicroLiang&nbsp;(Micro&nbsp;Liang),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;say&nbsp;(青蛙)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;說道&nbsp;nomask，我一直很不明白那些加在類型定義&nbsp;</I><BR>
︰<I>&nbsp;前面的定義符是什麼意思，比如varags...，能不能詳細&nbsp;</I><BR>
︰<I>&nbsp;些介紹？或者告訴我在哪裡能找到說明//thanks&nbsp;</I><BR>
&nbsp;<BR>
nomask&nbsp;使用不能重載，就是說只有這一個這個名字的啦。C++&nbsp;的三大特點之一就是重載。&nbsp;<BR>
varags&nbsp;是可能省略入口參數，類似於&nbsp;c++&nbsp;的另大特性，如你可做函數效果如下：&nbsp;<BR>
a(&nbsp;int&nbsp;a,&nbsp;int&nbsp;b);&nbsp;<BR>
a(&nbsp;int&nbsp;a);&nbsp;<BR>
就是這個意思。其中只要&nbsp;undefinedp(b)&nbsp;就知了。&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
發信人:&nbsp;say&nbsp;(青蛙),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
【&nbsp;在&nbsp;xdie&nbsp;(小蝶)&nbsp;的大作中提到:&nbsp;】&nbsp;<BR>
︰<I>&nbsp;varargs表示後面的參數的個數是可變的。&nbsp;</I><BR>
︰<I>&nbsp;在那個英文的lpc入門裡都有。主要的這類保留字有：&nbsp;</I><BR>
︰<I>&nbsp;nomask&nbsp;</I><BR>
︰<I>&nbsp;varargs&nbsp;</I><BR>
︰<I>&nbsp;public/private/protected&nbsp;</I><BR>
︰<I>&nbsp;nosave/static&nbsp;</I><BR>
︰<I>&nbsp;...&nbsp;</I><BR>
oh?在MUDOS帶的資料裡好像只&nbsp;<BR>
提到有這些參數，沒有詳細解釋的哦，&nbsp;<BR>
恩，等我回去再翻翻看&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
<A HREF="00000024.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000026.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>