<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;jameson&nbsp;(阿其),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;LPC&nbsp;Manual&nbsp;-&nbsp;LPC&nbsp;basics&nbsp;(2)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Fri&nbsp;May&nbsp;23&nbsp;17:24:16&nbsp;1997)&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
Basic&nbsp;LPC&nbsp;<BR>
&nbsp;<BR>
LPC&nbsp;if&nbsp;fairly&nbsp;similar&nbsp;to&nbsp;the&nbsp;language&nbsp;C,&nbsp;although&nbsp;some&nbsp;differences&nbsp;exist.&nbsp;As&nbsp;the&nbsp;experienced&nbsp;coder&nbsp;will&nbsp;<BR>
find,&nbsp;it&nbsp;basically&nbsp;is&nbsp;a&nbsp;bit&nbsp;simplified&nbsp;with&nbsp;some&nbsp;new&nbsp;convenient&nbsp;types&nbsp;added&nbsp;and&nbsp;a&nbsp;set&nbsp;of&nbsp;functions&nbsp;to&nbsp;<BR>
handle&nbsp;those&nbsp;types.&nbsp;Some&nbsp;inconsistancies&nbsp;exist&nbsp;but&nbsp;they&nbsp;are&nbsp;not&nbsp;serious&nbsp;enough&nbsp;to&nbsp;cause&nbsp;any&nbsp;<BR>
problems&nbsp;as&nbsp;long&nbsp;as&nbsp;you&nbsp;are&nbsp;aware&nbsp;of&nbsp;them.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Comments:&nbsp;How&nbsp;to&nbsp;put&nbsp;comments&nbsp;in&nbsp;code&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;types:&nbsp;The&nbsp;LPC&nbsp;data&nbsp;types&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Variable&nbsp;declarations:&nbsp;How&nbsp;to&nbsp;declare&nbsp;variables&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Function&nbsp;declarations:&nbsp;How&nbsp;to&nbsp;declare&nbsp;functions&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Statements/Expressions:&nbsp;The&nbsp;statement&nbsp;and&nbsp;expression&nbsp;concept&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scope&nbsp;and&nbsp;prototypes:&nbsp;The&nbsp;scope&nbsp;and&nbsp;function&nbsp;prototype&nbsp;concept&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Operator&nbsp;expressions:&nbsp;Operator&nbsp;expressions&nbsp;explained&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prefix&nbsp;allocation:&nbsp;The&nbsp;special&nbsp;prefix&nbsp;allocation&nbsp;statement&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Conditionals:&nbsp;The&nbsp;conditional&nbsp;statement&nbsp;type&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Precedence:&nbsp;Precedence&nbsp;and&nbsp;order&nbsp;of&nbsp;evaluation&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loop&nbsp;statements:&nbsp;How&nbsp;to&nbsp;write&nbsp;loops&nbsp;in&nbsp;LPC&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break/continue:&nbsp;The&nbsp;break&nbsp;and&nbsp;continue&nbsp;statements&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Arrays&nbsp;and&nbsp;Mappings:&nbsp;The&nbsp;special&nbsp;LPC&nbsp;types&nbsp;explained&nbsp;in&nbsp;more&nbsp;detail&nbsp;&nbsp;<BR>
&nbsp;<BR>
Comments&nbsp;<BR>
&nbsp;<BR>
It&nbsp;might&nbsp;sound&nbsp;strange&nbsp;that&nbsp;I&nbsp;start&nbsp;off&nbsp;with&nbsp;this,&nbsp;but&nbsp;there'll&nbsp;be&nbsp;comments&nbsp;everywhere,&nbsp;so&nbsp;you&nbsp;need&nbsp;to&nbsp;<BR>
be&nbsp;able&nbsp;to&nbsp;recognize&nbsp;them&nbsp;from&nbsp;the&nbsp;very&nbsp;start.&nbsp;&nbsp;<BR>
&nbsp;<BR>
There&nbsp;are&nbsp;two&nbsp;kinds&nbsp;of&nbsp;comments:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&lt;code&gt;&nbsp;//&nbsp;This&nbsp;is&nbsp;a&nbsp;comment&nbsp;stretching&nbsp;to&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;line.&nbsp;<BR>
&nbsp;<BR>
&lt;code&gt;&nbsp;/*&nbsp;This&nbsp;is&nbsp;an&nbsp;enclosed&nbsp;comment&nbsp;*/&nbsp;&lt;code&gt;&nbsp;<BR>
&nbsp;<BR>
As&nbsp;you&nbsp;can&nbsp;see,&nbsp;the&nbsp;first&nbsp;type&nbsp;of&nbsp;comment&nbsp;starts&nbsp;off&nbsp;with&nbsp;the&nbsp;//&nbsp;characters&nbsp;and&nbsp;then&nbsp;stretches&nbsp;all&nbsp;the&nbsp;<BR>
way&nbsp;to&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;line.&nbsp;If&nbsp;you&nbsp;want&nbsp;more&nbsp;lines&nbsp;of&nbsp;comments,&nbsp;you'll&nbsp;have&nbsp;to&nbsp;start&nbsp;off&nbsp;those&nbsp;as&nbsp;well&nbsp;<BR>
with&nbsp;new&nbsp;//&nbsp;characters.&nbsp;&nbsp;<BR>
&nbsp;<BR>
The&nbsp;second&nbsp;type&nbsp;is&nbsp;a&nbsp;type&nbsp;that&nbsp;has&nbsp;a&nbsp;definite&nbsp;length.&nbsp;They&nbsp;start&nbsp;with&nbsp;/*&nbsp;and&nbsp;end&nbsp;with&nbsp;*/.&nbsp;This&nbsp;kind&nbsp;of&nbsp;<BR>
comment&nbsp;is&nbsp;useful&nbsp;when&nbsp;you&nbsp;have&nbsp;to&nbsp;write&nbsp;something&nbsp;that&nbsp;will&nbsp;stretch&nbsp;over&nbsp;several&nbsp;lines,&nbsp;as&nbsp;you&nbsp;only&nbsp;<BR>
have&nbsp;to&nbsp;write&nbsp;the&nbsp;comment&nbsp;symbol&nbsp;in&nbsp;the&nbsp;start&nbsp;and&nbsp;the&nbsp;beginning.&nbsp;&nbsp;<BR>
&nbsp;<BR>
NB!&nbsp;The&nbsp;/*&nbsp;*/&nbsp;comment&nbsp;can&nbsp;not&nbsp;be&nbsp;nested.&nbsp;I.e.&nbsp;you&nbsp;can&nbsp;not&nbsp;write&nbsp;something&nbsp;like&nbsp;this&nbsp;for&nbsp;example:&nbsp;&nbsp;<BR>
&nbsp;<BR>
/*&nbsp;A&nbsp;comment&nbsp;/*&nbsp;A&nbsp;nested&nbsp;comment&nbsp;*/&nbsp;the&nbsp;first&nbsp;continues&nbsp;*/&nbsp;<BR>
&nbsp;<BR>
What&nbsp;will&nbsp;happen&nbsp;is&nbsp;that&nbsp;the&nbsp;comment&nbsp;will&nbsp;end&nbsp;with&nbsp;the&nbsp;first&nbsp;found&nbsp;*/,&nbsp;leaving&nbsp;the&nbsp;text&nbsp;the&nbsp;first&nbsp;<BR>
continues&nbsp;*/&nbsp;to&nbsp;be&nbsp;interpreted&nbsp;as&nbsp;if&nbsp;it&nbsp;was&nbsp;LPC&nbsp;code.&nbsp;Naturally&nbsp;this&nbsp;won't&nbsp;work&nbsp;and&nbsp;instead&nbsp;you'll&nbsp;<BR>
get&nbsp;an&nbsp;error&nbsp;message.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Data&nbsp;types&nbsp;<BR>
&nbsp;<BR>
The&nbsp;object&nbsp;holds&nbsp;information&nbsp;in&nbsp;variables.&nbsp;As&nbsp;the&nbsp;name&nbsp;hints&nbsp;these&nbsp;are&nbsp;labeled&nbsp;containers&nbsp;that&nbsp;may&nbsp;<BR>
hold&nbsp;information&nbsp;that&nbsp;varies&nbsp;from&nbsp;time&nbsp;to&nbsp;time.&nbsp;It&nbsp;processes&nbsp;information&nbsp;in&nbsp;functions&nbsp;that&nbsp;both&nbsp;use&nbsp;and&nbsp;<BR>
return&nbsp;data&nbsp;of&nbsp;various&nbsp;kinds.&nbsp;&nbsp;<BR>
&nbsp;<BR>
In&nbsp;principle&nbsp;only&nbsp;one&nbsp;kind&nbsp;of&nbsp;data&nbsp;type&nbsp;is&nbsp;needed,&nbsp;a&nbsp;sort&nbsp;of&nbsp;general&nbsp;container&nbsp;that&nbsp;would&nbsp;cover&nbsp;anything&nbsp;<BR>
you&nbsp;wanted&nbsp;to&nbsp;do.&nbsp;In&nbsp;reality&nbsp;it's&nbsp;much&nbsp;preferred&nbsp;if&nbsp;you&nbsp;can&nbsp;distinguish&nbsp;between&nbsp;different&nbsp;types&nbsp;of&nbsp;<BR>
information.&nbsp;This&nbsp;might&nbsp;seem&nbsp;only&nbsp;to&nbsp;add&nbsp;to&nbsp;your&nbsp;programming&nbsp;problems,&nbsp;but&nbsp;in&nbsp;fact&nbsp;it&nbsp;reduces&nbsp;the&nbsp;risk&nbsp;<BR>
of&nbsp;faulty&nbsp;code&nbsp;and&nbsp;improves&nbsp;legibility.&nbsp;It&nbsp;much&nbsp;improves&nbsp;on&nbsp;the&nbsp;time&nbsp;it&nbsp;takes&nbsp;to&nbsp;code&nbsp;and&nbsp;debug&nbsp;an&nbsp;<BR>
object.&nbsp;&nbsp;<BR>
&nbsp;<BR>
In&nbsp;LPC&nbsp;it&nbsp;is&nbsp;possible&nbsp;to&nbsp;use&nbsp;only&nbsp;that&nbsp;'general&nbsp;purpose'&nbsp;data&nbsp;type&nbsp;I&nbsp;was&nbsp;talking&nbsp;about&nbsp;before.&nbsp;In&nbsp;the&nbsp;<BR>
first&nbsp;versions&nbsp;of&nbsp;the&nbsp;language&nbsp;it&nbsp;was&nbsp;the&nbsp;only&nbsp;kind&nbsp;available.&nbsp;However,&nbsp;with&nbsp;the&nbsp;LPC&nbsp;we&nbsp;have&nbsp;today&nbsp;it&nbsp;<BR>
is&nbsp;much&nbsp;preferrable&nbsp;if&nbsp;you&nbsp;avoid&nbsp;that&nbsp;as&nbsp;much&nbsp;as&nbsp;you&nbsp;can.&nbsp;In&nbsp;fact,&nbsp;start&nbsp;all&nbsp;your&nbsp;programs&nbsp;with&nbsp;the&nbsp;<BR>
following&nbsp;instruction&nbsp;on&nbsp;a&nbsp;single&nbsp;line:&nbsp;&nbsp;<BR>
&nbsp;<BR>
#pragma&nbsp;strict_types&nbsp;<BR>
&nbsp;<BR>
This&nbsp;is&nbsp;an&nbsp;instruction&nbsp;to&nbsp;the&nbsp;gamedriver&nbsp;to&nbsp;check&nbsp;all&nbsp;functions&nbsp;so&nbsp;that&nbsp;they&nbsp;conform&nbsp;to&nbsp;the&nbsp;situation&nbsp;<BR>
they&nbsp;are&nbsp;used&nbsp;in,&nbsp;and&nbsp;cause&nbsp;compile&nbsp;errors&nbsp;otherwise.&nbsp;This&nbsp;is&nbsp;a&nbsp;very&nbsp;great&nbsp;help&nbsp;in&nbsp;detecting&nbsp;<BR>
programming&nbsp;errors&nbsp;early&nbsp;so&nbsp;that&nbsp;you&nbsp;don't&nbsp;wonder&nbsp;what's&nbsp;going&nbsp;on&nbsp;later&nbsp;when&nbsp;things&nbsp;don't&nbsp;quite&nbsp;turn&nbsp;<BR>
out&nbsp;the&nbsp;way&nbsp;you&nbsp;wanted.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Now,&nbsp;the&nbsp;following&nbsp;types&nbsp;of&nbsp;data&nbsp;types&nbsp;are&nbsp;defined:&nbsp;&nbsp;<BR>
&nbsp;<BR>
`void'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Nothing'&nbsp;This&nbsp;data&nbsp;type&nbsp;is&nbsp;used&nbsp;exclusively&nbsp;for&nbsp;functions&nbsp;that&nbsp;don't&nbsp;return&nbsp;any&nbsp;data&nbsp;at&nbsp;all.&nbsp;&nbsp;<BR>
`int'&nbsp;`Integers'&nbsp;Whole&nbsp;numbers&nbsp;in&nbsp;the&nbsp;range&nbsp;-2147483648&nbsp;to&nbsp;2147483647.&nbsp;e.g.&nbsp;3,&nbsp;17,&nbsp;-32,&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;999.&nbsp;&nbsp;<BR>
`float'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Floating&nbsp;point&nbsp;numbers'&nbsp;Decimal&nbsp;numbers&nbsp;of&nbsp;any&nbsp;kind&nbsp;in&nbsp;the&nbsp;approximate&nbsp;range&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.17549435e-38&nbsp;to&nbsp;3.40282347e+38.&nbsp;e.g.&nbsp;1.3,&nbsp;-348.4,&nbsp;4.53e+4.&nbsp;The&nbsp;range&nbsp;values&nbsp;are&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;approximate&nbsp;since&nbsp;this&nbsp;might&nbsp;vary&nbsp;from&nbsp;mud&nbsp;to&nbsp;mud&nbsp;as&nbsp;it's&nbsp;platform&nbsp;dependant.&nbsp;If&nbsp;there&nbsp;are&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;any&nbsp;FORTRAN&nbsp;fossiles&nbsp;around&nbsp;there,&nbsp;beware&nbsp;that&nbsp;numbers&nbsp;like&nbsp;1.&nbsp;or&nbsp;.4711&nbsp;are&nbsp;not&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recognized&nbsp;as&nbsp;floats,&nbsp;you&nbsp;have&nbsp;to&nbsp;specify&nbsp;both&nbsp;an&nbsp;integer&nbsp;and&nbsp;a&nbsp;decimal&nbsp;part,&nbsp;even&nbsp;if&nbsp;they&nbsp;only&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;0.&nbsp;&nbsp;<BR>
`string'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Character&nbsp;strings'&nbsp;Strings&nbsp;are&nbsp;simply&nbsp;a&nbsp;series&nbsp;of&nbsp;printable&nbsp;characters&nbsp;within&nbsp;quotes,&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;&quot;x&quot;,&nbsp;&quot;the&nbsp;string&quot;,&nbsp;&quot;Another&nbsp;long&nbsp;string&nbsp;with&nbsp;the&nbsp;number&nbsp;5&nbsp;in&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it&quot;.&nbsp;Strings&nbsp;can&nbsp;contain&nbsp;special&nbsp;characters&nbsp;like&nbsp;newline&nbsp;(&quot;\n&quot;)&nbsp;to&nbsp;end&nbsp;a&nbsp;line.&nbsp;A&nbsp;lot&nbsp;of&nbsp;LPC&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expressions&nbsp;can&nbsp;handle&nbsp;strings&nbsp;directly,&nbsp;unlike&nbsp;usual&nbsp;C.&nbsp;This&nbsp;makes&nbsp;strings&nbsp;very&nbsp;handy&nbsp;and&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;easy&nbsp;to&nbsp;use.&nbsp;&nbsp;<BR>
`mapping'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Associated&nbsp;list'&nbsp;Mappings&nbsp;are&nbsp;another&nbsp;handy&nbsp;LPC&nbsp;invention&nbsp;(memory&nbsp;expensive,&nbsp;use&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;care!).&nbsp;A&nbsp;mapping&nbsp;is&nbsp;simply&nbsp;a&nbsp;list&nbsp;of&nbsp;associated&nbsp;values.&nbsp;Assume&nbsp;you&nbsp;want&nbsp;to&nbsp;remember&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ages&nbsp;of&nbsp;people,&nbsp;like&nbsp;Olle&nbsp;is&nbsp;23,&nbsp;Peter&nbsp;is&nbsp;54&nbsp;and&nbsp;Anna&nbsp;is&nbsp;15.&nbsp;In&nbsp;LPC&nbsp;you&nbsp;can&nbsp;write&nbsp;this&nbsp;as&nbsp;([&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Olle&quot;:23,&nbsp;&quot;Peter&quot;:54,&nbsp;&quot;Anna&quot;:15&nbsp;]).&nbsp;As&nbsp;you&nbsp;can&nbsp;see&nbsp;the&nbsp;value&nbsp;to&nbsp;the&nbsp;right&nbsp;has&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;been&nbsp;associated&nbsp;to&nbsp;the&nbsp;value&nbsp;to&nbsp;the&nbsp;left.&nbsp;You&nbsp;can&nbsp;then&nbsp;extract&nbsp;the&nbsp;associated&nbsp;value&nbsp;through&nbsp;a&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;simple&nbsp;indexing&nbsp;operation&nbsp;using&nbsp;the&nbsp;left&nbsp;hand&nbsp;value&nbsp;as&nbsp;index.&nbsp;&nbsp;<BR>
`object'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Object&nbsp;pointer'&nbsp;They&nbsp;are&nbsp;references&nbsp;to&nbsp;LPC&nbsp;programs&nbsp;that&nbsp;has&nbsp;been&nbsp;loaded&nbsp;into&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory.&nbsp;&nbsp;<BR>
`function'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`Function&nbsp;pointer'&nbsp;They&nbsp;are&nbsp;references&nbsp;to&nbsp;LPC&nbsp;functions.&nbsp;&nbsp;<BR>
`Array'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;of&nbsp;the&nbsp;above&nbsp;can&nbsp;appear&nbsp;in&nbsp;arrays,&nbsp;indicated&nbsp;by&nbsp;a&nbsp;*&nbsp;in&nbsp;front&nbsp;of&nbsp;the&nbsp;variable&nbsp;name&nbsp;in&nbsp;the&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;declaration.&nbsp;Arrays&nbsp;in&nbsp;LPC&nbsp;are&nbsp;more&nbsp;like&nbsp;lists&nbsp;than&nbsp;proper&nbsp;arrays.&nbsp;A&nbsp;number&nbsp;of&nbsp;functions&nbsp;and&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;operator&nbsp;facilites&nbsp;exist&nbsp;to&nbsp;make&nbsp;them&nbsp;easy&nbsp;and&nbsp;quick&nbsp;to&nbsp;use.&nbsp;&nbsp;<BR>
`mixed'&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This,&nbsp;finally,&nbsp;is&nbsp;a&nbsp;general&nbsp;descriptor&nbsp;covering&nbsp;all&nbsp;the&nbsp;other,&nbsp;a&nbsp;sort&nbsp;of&nbsp;jack-of-all-trades&nbsp;type.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Again,&nbsp;let&nbsp;me&nbsp;stress&nbsp;the&nbsp;fact&nbsp;that&nbsp;using&nbsp;it&nbsp;except&nbsp;when&nbsp;absolutely&nbsp;necessary&nbsp;only&nbsp;provokes&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mistakes.&nbsp;Hm,&nbsp;as&nbsp;pointed&nbsp;out&nbsp;to&nbsp;me&nbsp;this&nbsp;might&nbsp;sound&nbsp;a&nbsp;bit&nbsp;too&nbsp;strict.&nbsp;The&nbsp;mixed&nbsp;type&nbsp;is&nbsp;used&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;good&nbsp;reasons&nbsp;fairly&nbsp;often.&nbsp;What&nbsp;I&nbsp;mean&nbsp;is&nbsp;that&nbsp;when&nbsp;a&nbsp;regular&nbsp;type&nbsp;can&nbsp;be&nbsp;used,&nbsp;it&nbsp;should.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Don't&nbsp;substitute&nbsp;it&nbsp;for&nbsp;mixed&nbsp;just&nbsp;because&nbsp;you&nbsp;feel&nbsp;lazy.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Variable&nbsp;declarations&nbsp;<BR>
&nbsp;<BR>
A&nbsp;variable&nbsp;is&nbsp;a&nbsp;string&nbsp;of&nbsp;letters&nbsp;identifying&nbsp;an&nbsp;information&nbsp;'box',&nbsp;a&nbsp;place&nbsp;to&nbsp;store&nbsp;data.&nbsp;The&nbsp;box&nbsp;is&nbsp;given&nbsp;<BR>
a&nbsp;name&nbsp;consisting&nbsp;of&nbsp;&lt;&nbsp;32&nbsp;characers,&nbsp;starting&nbsp;with&nbsp;an&nbsp;alphabetic&nbsp;letter.&nbsp;Custom&nbsp;and&nbsp;common&nbsp;sense&nbsp;<BR>
dictate&nbsp;that&nbsp;all&nbsp;variables&nbsp;used&nbsp;inside&nbsp;a&nbsp;function&nbsp;consist&nbsp;of&nbsp;lowercase&nbsp;letters&nbsp;only.&nbsp;Global&nbsp;variables&nbsp;<BR>
have&nbsp;the&nbsp;first&nbsp;letter&nbsp;in&nbsp;uppercase,&nbsp;the&nbsp;rest&nbsp;lowercase.&nbsp;No&nbsp;special&nbsp;character&nbsp;other&nbsp;than&nbsp;the&nbsp;'_'&nbsp;used&nbsp;to&nbsp;<BR>
separate&nbsp;words&nbsp;is&nbsp;ever&nbsp;used.&nbsp;Variables&nbsp;should&nbsp;always&nbsp;be&nbsp;given&nbsp;names&nbsp;that&nbsp;reflect&nbsp;on&nbsp;their&nbsp;use.&nbsp;You&nbsp;<BR>
declare&nbsp;variables&nbsp;like&nbsp;this:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&lt;data&nbsp;type&gt;&nbsp;&lt;variable&nbsp;name&gt;,&nbsp;&lt;another&nbsp;variable&gt;,&nbsp;...,&nbsp;&lt;last&nbsp;variable&gt;;&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height,&nbsp;weight;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;mapping&nbsp;&nbsp;&nbsp;&nbsp;age_map;&nbsp;<BR>
&nbsp;<BR>
Variables&nbsp;must&nbsp;be&nbsp;declared&nbsp;at&nbsp;the&nbsp;beginning&nbsp;of&nbsp;a&nbsp;block&nbsp;(right&nbsp;after&nbsp;the&nbsp;first&nbsp;'{')&nbsp;and&nbsp;before&nbsp;any&nbsp;code&nbsp;<BR>
statements.&nbsp;Global&nbsp;variables,&nbsp;variables&nbsp;that&nbsp;are&nbsp;available&nbsp;in&nbsp;all&nbsp;functions&nbsp;througout&nbsp;the&nbsp;program,&nbsp;<BR>
should&nbsp;be&nbsp;declared&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;file.&nbsp;&nbsp;<BR>
&nbsp;<BR>
When&nbsp;the&nbsp;declarations&nbsp;are&nbsp;executed&nbsp;as&nbsp;the&nbsp;program&nbsp;runs,&nbsp;they&nbsp;are&nbsp;initially&nbsp;set&nbsp;to&nbsp;0,&nbsp;NOT&nbsp;to&nbsp;their&nbsp;<BR>
'null-state'&nbsp;values.&nbsp;In&nbsp;other&nbsp;words&nbsp;for&nbsp;example&nbsp;mappings,&nbsp;arrays&nbsp;and&nbsp;strings&nbsp;will&nbsp;all&nbsp;be&nbsp;set&nbsp;to&nbsp;0&nbsp;and&nbsp;<BR>
not&nbsp;to&nbsp;([]),&nbsp;({})&nbsp;and&nbsp;&quot;&quot;&nbsp;as&nbsp;you&nbsp;might&nbsp;believe.&nbsp;It&nbsp;is&nbsp;possible&nbsp;to&nbsp;initialize&nbsp;variables&nbsp;in&nbsp;the&nbsp;declaration&nbsp;<BR>
statement,&nbsp;and&nbsp;it's&nbsp;even&nbsp;a&nbsp;very&nbsp;good&nbsp;habit&nbsp;always&nbsp;to&nbsp;initialize&nbsp;arrays&nbsp;and&nbsp;mappings&nbsp;there:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&lt;data&nbsp;type&gt;&nbsp;&lt;variable&nbsp;name&gt;&nbsp;=&nbsp;&lt;value&gt;,&nbsp;etc.&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter&nbsp;=&nbsp;8;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;=&nbsp;3.0,&nbsp;weight&nbsp;=&nbsp;1.2;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;mapping&nbsp;&nbsp;&nbsp;&nbsp;age_map&nbsp;=&nbsp;([]);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*monsters&nbsp;=&nbsp;({});&nbsp;<BR>
&nbsp;<BR>
The&nbsp;reason&nbsp;why&nbsp;arrays&nbsp;and&nbsp;mappings&nbsp;should&nbsp;be&nbsp;initalized&nbsp;in&nbsp;the&nbsp;declaration&nbsp;statement&nbsp;to&nbsp;their&nbsp;<BR>
'NULL'&nbsp;values&nbsp;(({})&nbsp;and&nbsp;([])&nbsp;respectively)&nbsp;is&nbsp;that&nbsp;otherwise&nbsp;they&nbsp;are&nbsp;initialized&nbsp;to&nbsp;0,&nbsp;which&nbsp;is&nbsp;<BR>
incompatible&nbsp;with&nbsp;the&nbsp;proper&nbsp;type&nbsp;of&nbsp;the&nbsp;variable&nbsp;and&nbsp;might&nbsp;cause&nbsp;problems&nbsp;later.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Function&nbsp;declarations&nbsp;<BR>
&nbsp;<BR>
A&nbsp;function&nbsp;must&nbsp;give&nbsp;proper&nbsp;notification&nbsp;of&nbsp;what&nbsp;kind&nbsp;of&nbsp;data&nbsp;type&nbsp;it&nbsp;returns,&nbsp;if&nbsp;any.&nbsp;A&nbsp;function&nbsp;is&nbsp;a&nbsp;label&nbsp;<BR>
much&nbsp;like&nbsp;a&nbsp;variable&nbsp;name,&nbsp;consisting&nbsp;of&nbsp;&lt;&nbsp;32&nbsp;characters,&nbsp;starting&nbsp;with&nbsp;a&nbsp;letter.&nbsp;Custom&nbsp;and&nbsp;common&nbsp;<BR>
sense&nbsp;dictate&nbsp;that&nbsp;all&nbsp;function&nbsp;names&nbsp;should&nbsp;be&nbsp;lowercase&nbsp;and&nbsp;only&nbsp;contain&nbsp;the&nbsp;special&nbsp;character&nbsp;'_'&nbsp;to&nbsp;<BR>
separate&nbsp;words.&nbsp;Use&nbsp;function&nbsp;names&nbsp;that&nbsp;clearly&nbsp;reflect&nbsp;on&nbsp;what&nbsp;they&nbsp;do.&nbsp;A&nbsp;function&nbsp;declaration&nbsp;looks&nbsp;<BR>
like&nbsp;this:&nbsp;&nbsp;<BR>
&nbsp;<BR>
/*&nbsp;<BR>
&nbsp;*&nbsp;Function&nbsp;name:&nbsp;&lt;Function&nbsp;name&gt;&nbsp;<BR>
&nbsp;*&nbsp;Description:&nbsp;&nbsp;&nbsp;&lt;What&nbsp;it&nbsp;does&nbsp;&gt;&nbsp;<BR>
&nbsp;*&nbsp;Arguments:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;*&nbsp;Returns:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;What&nbsp;the&nbsp;function&nbsp;returns&gt;&nbsp;<BR>
&nbsp;*/&nbsp;<BR>
&lt;return&nbsp;type&gt;&nbsp;<BR>
&lt;function&nbsp;name&gt;(&lt;argument&nbsp;list&gt;)&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&lt;code&nbsp;expressions&gt;&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
/*&nbsp;<BR>
&nbsp;*&nbsp;Function&nbsp;name:&nbsp;compute_diam&nbsp;<BR>
&nbsp;*&nbsp;Description:&nbsp;&nbsp;&nbsp;Compute&nbsp;the&nbsp;diameter&nbsp;of&nbsp;a&nbsp;circle&nbsp;given&nbsp;the&nbsp;&nbsp;<BR>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circumference.&nbsp;<BR>
&nbsp;*&nbsp;Variables:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;surf_area&nbsp;-&nbsp;the&nbsp;surface&nbsp;area&nbsp;<BR>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;-&nbsp;the&nbsp;name&nbsp;given&nbsp;the&nbsp;circle&nbsp;<BR>
&nbsp;*&nbsp;Returns:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;circumference.&nbsp;<BR>
&nbsp;*/&nbsp;<BR>
float&nbsp;<BR>
compute_diam(float&nbsp;surf_area,&nbsp;string&nbsp;name)&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;rval;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Circumference&nbsp;=&nbsp;pie&nbsp;*&nbsp;diameter&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;rval&nbsp;=&nbsp;surf_area&nbsp;/&nbsp;3.141592643;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;write(&quot;The&nbsp;diameter&nbsp;of&nbsp;&quot;&nbsp;+&nbsp;name&nbsp;+&nbsp;&quot;&nbsp;is&nbsp;&quot;&nbsp;+&nbsp;ftoa(rval)&nbsp;+&nbsp;&quot;\n&quot;);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rval;&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
The&nbsp;argument&nbsp;list&nbsp;is&nbsp;a&nbsp;comma-separated&nbsp;list&nbsp;of&nbsp;data&nbsp;types,&nbsp;much&nbsp;like&nbsp;a&nbsp;variable&nbsp;declaration&nbsp;where&nbsp;you&nbsp;<BR>
specify&nbsp;what&nbsp;kind&nbsp;of&nbsp;data&nbsp;will&nbsp;be&nbsp;sent&nbsp;to&nbsp;the&nbsp;function&nbsp;and&nbsp;assign&nbsp;names&nbsp;to&nbsp;this&nbsp;data&nbsp;for&nbsp;later&nbsp;use&nbsp;in&nbsp;the&nbsp;<BR>
function.&nbsp;The&nbsp;data&nbsp;recieved&nbsp;will&nbsp;only&nbsp;be&nbsp;usable&nbsp;inside&nbsp;the&nbsp;function,&nbsp;unless&nbsp;you&nbsp;explicitly&nbsp;send&nbsp;it&nbsp;out&nbsp;<BR>
through&nbsp;a&nbsp;function&nbsp;call.&nbsp;&nbsp;<BR>
&nbsp;<BR>
(In&nbsp;order&nbsp;to&nbsp;save&nbsp;space&nbsp;and&nbsp;improve&nbsp;on&nbsp;legibility&nbsp;in&nbsp;the&nbsp;manual&nbsp;I&nbsp;won't&nbsp;put&nbsp;a&nbsp;header&nbsp;to&nbsp;all&nbsp;my&nbsp;short&nbsp;<BR>
example&nbsp;functions).&nbsp;&nbsp;<BR>
&nbsp;<BR>
A&nbsp;function&nbsp;that&nbsp;doesn't&nbsp;return&nbsp;anything&nbsp;should&nbsp;be&nbsp;declared&nbsp;as&nbsp;void.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;<BR>
write_all(string&nbsp;mess)&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;users()-&gt;catch_msg(mess);&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;klab.ishii.utsu]&nbsp;<BR>
<A HREF="00000005.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000007.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>