<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;jameson&nbsp;(阿其),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;LPC&nbsp;Manual&nbsp;-&nbsp;Essential&nbsp;LPC&nbsp;and&nbsp;MUDLIB(6)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Fri&nbsp;May&nbsp;23&nbsp;22:52:02&nbsp;1997)&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
Object-inherent&nbsp;command&nbsp;handling&nbsp;<BR>
&nbsp;<BR>
[init,&nbsp;add_action,&nbsp;enable_commands,&nbsp;disable_commands,&nbsp;living,&nbsp;command,&nbsp;commands,&nbsp;get_localcmd,&nbsp;query_verb,&nbsp;notify_fail,&nbsp;update_actions]&nbsp;<BR>
&nbsp;<BR>
By&nbsp;now&nbsp;you&nbsp;know&nbsp;that&nbsp;nothing&nbsp;ever&nbsp;is&nbsp;really&nbsp;simple&nbsp;in&nbsp;this&nbsp;game.&nbsp;To&nbsp;confuse&nbsp;the&nbsp;issue&nbsp;when&nbsp;dealing&nbsp;with&nbsp;commands&nbsp;we&nbsp;actually&nbsp;have&nbsp;two&nbsp;<BR>
different&nbsp;types&nbsp;of&nbsp;commands.&nbsp;One&nbsp;kind&nbsp;is&nbsp;the&nbsp;one&nbsp;that&nbsp;we&nbsp;will&nbsp;talk&nbsp;about&nbsp;here,&nbsp;commands&nbsp;that&nbsp;are&nbsp;defined&nbsp;by&nbsp;objects&nbsp;that&nbsp;you&nbsp;can&nbsp;touch&nbsp;or&nbsp;<BR>
examine.&nbsp;The&nbsp;other&nbsp;kind&nbsp;is&nbsp;so&nbsp;called&nbsp;'soul'&nbsp;commands.&nbsp;The&nbsp;soul&nbsp;commands&nbsp;is&nbsp;a&nbsp;pure&nbsp;mudlib&nbsp;convenience&nbsp;though.&nbsp;They&nbsp;are&nbsp;described&nbsp;later&nbsp;in&nbsp;<BR>
chapter&nbsp;three.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Object-added&nbsp;commands&nbsp;work&nbsp;like&nbsp;this:&nbsp;Upon&nbsp;entering&nbsp;an&nbsp;object,&nbsp;such&nbsp;as&nbsp;a&nbsp;room,&nbsp;a&nbsp;special&nbsp;lfun&nbsp;called&nbsp;init()&nbsp;is&nbsp;called&nbsp;in&nbsp;the&nbsp;room&nbsp;and&nbsp;in&nbsp;all&nbsp;<BR>
other&nbsp;objects&nbsp;in&nbsp;the&nbsp;inventory&nbsp;of&nbsp;the&nbsp;room.&nbsp;The&nbsp;init()&nbsp;function&nbsp;is&nbsp;actually&nbsp;an&nbsp;ordinary&nbsp;function&nbsp;that&nbsp;you&nbsp;could&nbsp;use&nbsp;for&nbsp;any&nbsp;purpose,&nbsp;but&nbsp;the&nbsp;<BR>
intended&nbsp;purpose&nbsp;is&nbsp;to&nbsp;have&nbsp;the&nbsp;command-adding&nbsp;efun&nbsp;add_action()&nbsp;there.&nbsp;In&nbsp;other&nbsp;words,&nbsp;when&nbsp;you&nbsp;enter&nbsp;an&nbsp;object&nbsp;of&nbsp;any&nbsp;kind,&nbsp;the&nbsp;<BR>
commands&nbsp;of&nbsp;that&nbsp;object&nbsp;as&nbsp;well&nbsp;as&nbsp;those&nbsp;of&nbsp;the&nbsp;other&nbsp;object&nbsp;in&nbsp;the&nbsp;same&nbsp;inventory&nbsp;are&nbsp;added&nbsp;to&nbsp;your&nbsp;set&nbsp;of&nbsp;commands.&nbsp;&nbsp;<BR>
&nbsp;<BR>
The&nbsp;add_action&nbsp;command&nbsp;ties&nbsp;an&nbsp;action&nbsp;word&nbsp;to&nbsp;a&nbsp;function&nbsp;in&nbsp;the&nbsp;object.&nbsp;Upon&nbsp;typing&nbsp;the&nbsp;special&nbsp;word&nbsp;as&nbsp;the&nbsp;first&nbsp;word&nbsp;on&nbsp;the&nbsp;line,&nbsp;the&nbsp;<BR>
function&nbsp;gets&nbsp;called&nbsp;with&nbsp;any&nbsp;other&nbsp;words&nbsp;you&nbsp;might&nbsp;have&nbsp;typed&nbsp;as&nbsp;arguments.&nbsp;The&nbsp;third&nbsp;argument&nbsp;can&nbsp;be&nbsp;given&nbsp;as&nbsp;'1'&nbsp;if&nbsp;you&nbsp;want&nbsp;the&nbsp;<BR>
gamedriver&nbsp;to&nbsp;trigger&nbsp;on&nbsp;just&nbsp;a&nbsp;part&nbsp;of&nbsp;the&nbsp;word.&nbsp;For&nbsp;example&nbsp;if&nbsp;you&nbsp;have&nbsp;the&nbsp;action&nbsp;word&nbsp;'examine'&nbsp;and&nbsp;want&nbsp;to&nbsp;allow&nbsp;'exa'&nbsp;or&nbsp;'ex'&nbsp;as&nbsp;well.&nbsp;&nbsp;<BR>
&nbsp;<BR>
add_action(function&nbsp;func,&nbsp;string&nbsp;action,&nbsp;void|int&nbsp;1)&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;init()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;The&nbsp;functions&nbsp;'do_bow()'&nbsp;and&nbsp;'leave_game()'&nbsp;are&nbsp;defined&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;somewhere&nbsp;in&nbsp;this&nbsp;object.&nbsp;However,&nbsp;if&nbsp;it's&nbsp;done&nbsp;later&nbsp;than&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;this&nbsp;function,&nbsp;they&nbsp;must&nbsp;exist&nbsp;as&nbsp;prototypes&nbsp;in&nbsp;the&nbsp;header.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_action(do_bow,&nbsp;&quot;bow&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Better&nbsp;get&nbsp;used&nbsp;to&nbsp;seeing&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_action(&amp;leave_game(),&nbsp;&quot;quit&quot;);&nbsp;&nbsp;//&nbsp;different&nbsp;kinds&nbsp;of&nbsp;function&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;reference&nbsp;declarations.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
Is&nbsp;this&nbsp;true&nbsp;for&nbsp;any&nbsp;kind&nbsp;of&nbsp;object&nbsp;then?&nbsp;Will&nbsp;any&nbsp;object&nbsp;receive&nbsp;this&nbsp;set&nbsp;of&nbsp;commands?&nbsp;No.&nbsp;Just&nbsp;living&nbsp;objects.&nbsp;An&nbsp;object&nbsp;is&nbsp;made&nbsp;living&nbsp;by&nbsp;the&nbsp;<BR>
efun&nbsp;enable_commands()&nbsp;and&nbsp;dead,&nbsp;or&nbsp;inert,&nbsp;with&nbsp;the&nbsp;efun&nbsp;disable_commands()&nbsp;Note&nbsp;carefully&nbsp;that&nbsp;living&nbsp;in&nbsp;the&nbsp;gamedriver&nbsp;only&nbsp;means&nbsp;<BR>
being&nbsp;able&nbsp;to&nbsp;receive&nbsp;and&nbsp;execute&nbsp;commands,&nbsp;in&nbsp;the&nbsp;mudlib&nbsp;it&nbsp;means&nbsp;a&nbsp;bit&nbsp;more.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Use&nbsp;these&nbsp;efuns&nbsp;whenever&nbsp;you&nbsp;want&nbsp;to&nbsp;switch&nbsp;on&nbsp;or&nbsp;off&nbsp;the&nbsp;command&nbsp;handling&nbsp;capabilities.&nbsp;However,&nbsp;remember&nbsp;that&nbsp;if&nbsp;the&nbsp;object&nbsp;already&nbsp;is&nbsp;<BR>
moved&nbsp;into&nbsp;a&nbsp;room&nbsp;when&nbsp;you&nbsp;turn&nbsp;on&nbsp;living&nbsp;status,&nbsp;it&nbsp;will&nbsp;have&nbsp;no&nbsp;command&nbsp;lists.&nbsp;You&nbsp;will&nbsp;have&nbsp;to&nbsp;move&nbsp;it&nbsp;out/in&nbsp;to&nbsp;the&nbsp;room&nbsp;again&nbsp;in&nbsp;order&nbsp;<BR>
for&nbsp;it&nbsp;to&nbsp;pick&nbsp;up&nbsp;all&nbsp;actions.&nbsp;&nbsp;<BR>
&nbsp;<BR>
You&nbsp;can&nbsp;check&nbsp;if&nbsp;an&nbsp;object&nbsp;is&nbsp;living&nbsp;or&nbsp;not&nbsp;with&nbsp;the&nbsp;efun&nbsp;living().&nbsp;&nbsp;<BR>
&nbsp;<BR>
enable_commands()&nbsp;<BR>
disable_commands()&nbsp;<BR>
int&nbsp;living(object&nbsp;ob)&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;toggle_living_status()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(living(this_object()))&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disable_commands();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enable_commands();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
Actions&nbsp;can&nbsp;only&nbsp;be&nbsp;added&nbsp;and&nbsp;maintained&nbsp;by&nbsp;objects&nbsp;that&nbsp;exist&nbsp;in&nbsp;the&nbsp;inventory&nbsp;or&nbsp;environment&nbsp;of&nbsp;an&nbsp;object.&nbsp;If&nbsp;the&nbsp;object&nbsp;is&nbsp;moved&nbsp;from&nbsp;the&nbsp;<BR>
action-defining&nbsp;object's&nbsp;presence,&nbsp;the&nbsp;action&nbsp;is&nbsp;removed&nbsp;as&nbsp;well.&nbsp;&nbsp;<BR>
&nbsp;<BR>
As&nbsp;you&nbsp;now&nbsp;understand,&nbsp;the&nbsp;gamedriver&nbsp;expects&nbsp;the&nbsp;function&nbsp;init()&nbsp;to&nbsp;be&nbsp;defined&nbsp;in&nbsp;any&nbsp;object&nbsp;that&nbsp;wishes&nbsp;to&nbsp;add&nbsp;actions&nbsp;to&nbsp;living&nbsp;objects.&nbsp;<BR>
Please&nbsp;be&nbsp;careful&nbsp;how&nbsp;you&nbsp;use&nbsp;the&nbsp;function&nbsp;though.&nbsp;If&nbsp;you&nbsp;for&nbsp;example&nbsp;use&nbsp;the&nbsp;init()&nbsp;function&nbsp;to&nbsp;test&nbsp;if&nbsp;an&nbsp;object&nbsp;belongs&nbsp;there&nbsp;or&nbsp;not,&nbsp;and&nbsp;<BR>
then&nbsp;move&nbsp;it&nbsp;out&nbsp;if&nbsp;it&nbsp;doesn't,&nbsp;you'll&nbsp;likely&nbsp;get&nbsp;into&nbsp;trouble.&nbsp;The&nbsp;reason&nbsp;is&nbsp;that&nbsp;if&nbsp;you&nbsp;add&nbsp;actions&nbsp;after&nbsp;having&nbsp;moved&nbsp;it,&nbsp;you&nbsp;will&nbsp;in&nbsp;fact&nbsp;be&nbsp;<BR>
adding&nbsp;actions&nbsp;to&nbsp;a&nbsp;non-present&nbsp;object.&nbsp;The&nbsp;gamedriver&nbsp;will&nbsp;notice&nbsp;this&nbsp;and&nbsp;you&nbsp;will&nbsp;have&nbsp;an&nbsp;error.&nbsp;I&nbsp;would&nbsp;like&nbsp;to&nbsp;advice&nbsp;you&nbsp;not&nbsp;to&nbsp;use&nbsp;the&nbsp;<BR>
init()&nbsp;function&nbsp;for&nbsp;any&nbsp;other&nbsp;purpose&nbsp;than&nbsp;adding&nbsp;actions.&nbsp;It's&nbsp;allowed&nbsp;to&nbsp;test&nbsp;the&nbsp;object&nbsp;that&nbsp;calls&nbsp;the&nbsp;init()&nbsp;function&nbsp;to&nbsp;determine&nbsp;if&nbsp;you&nbsp;<BR>
should&nbsp;add&nbsp;actions&nbsp;to&nbsp;it&nbsp;or&nbsp;not&nbsp;(if&nbsp;you&nbsp;limit&nbsp;access&nbsp;to&nbsp;some&nbsp;actions),&nbsp;but&nbsp;avoid&nbsp;any&nbsp;other&nbsp;kind&nbsp;of&nbsp;code.&nbsp;&nbsp;<BR>
&nbsp;<BR>
I'm&nbsp;sorry&nbsp;to&nbsp;say&nbsp;that&nbsp;the&nbsp;mudlib&nbsp;itself&nbsp;doesn't&nbsp;always&nbsp;conform&nbsp;to&nbsp;this&nbsp;rule,&nbsp;there's&nbsp;objects&nbsp;here&nbsp;and&nbsp;there&nbsp;that&nbsp;cheat.&nbsp;However,&nbsp;there's&nbsp;no&nbsp;<BR>
reason&nbsp;why&nbsp;you&nbsp;should&nbsp;code&nbsp;things&nbsp;badly&nbsp;just&nbsp;because&nbsp;we&nbsp;did.&nbsp;:)&nbsp;&nbsp;<BR>
&nbsp;<BR>
In&nbsp;most&nbsp;objects&nbsp;that&nbsp;inherit&nbsp;standard&nbsp;base&nbsp;objects&nbsp;it's&nbsp;necessary&nbsp;to&nbsp;call&nbsp;the&nbsp;parent&nbsp;init()&nbsp;as&nbsp;well,&nbsp;since&nbsp;otherwise&nbsp;you'll&nbsp;override&nbsp;it&nbsp;and&nbsp;<BR>
thereby&nbsp;miss&nbsp;lots&nbsp;of&nbsp;important&nbsp;actions.&nbsp;Just&nbsp;put&nbsp;the&nbsp;statement&nbsp;::init();&nbsp;first&nbsp;in&nbsp;your&nbsp;init,&nbsp;before&nbsp;your&nbsp;add_action()&nbsp;statements,&nbsp;and&nbsp;all&nbsp;<BR>
will&nbsp;be&nbsp;well.&nbsp;&nbsp;<BR>
&nbsp;<BR>
To&nbsp;execute&nbsp;a&nbsp;command&nbsp;in&nbsp;a&nbsp;living&nbsp;object&nbsp;you&nbsp;use&nbsp;the&nbsp;efun&nbsp;command().&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;command(string&nbsp;cmd)&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;command(&quot;sneeze&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;command(&quot;wield&nbsp;sword&nbsp;in&nbsp;left&nbsp;hand&quot;);&nbsp;<BR>
&nbsp;<BR>
If&nbsp;you're&nbsp;doing&nbsp;this&nbsp;for&nbsp;mortals&nbsp;(which&nbsp;most&nbsp;often&nbsp;is&nbsp;the&nbsp;case)&nbsp;you're&nbsp;wise&nbsp;to&nbsp;use&nbsp;this&nbsp;construction&nbsp;instead.&nbsp;The&nbsp;reason&nbsp;is&nbsp;that&nbsp;the&nbsp;dollar&nbsp;sign&nbsp;<BR>
will&nbsp;evade&nbsp;the&nbsp;internal&nbsp;alias&nbsp;mechanism&nbsp;so&nbsp;that&nbsp;it&nbsp;isn't&nbsp;fooled&nbsp;by&nbsp;an&nbsp;unfortunate&nbsp;macro.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;command(string&nbsp;cmd)&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;command(&quot;$sneeze&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;command(&quot;$wield&nbsp;sword&nbsp;in&nbsp;left&nbsp;hand&quot;);&nbsp;<BR>
&nbsp;<BR>
The&nbsp;commands&nbsp;naturally&nbsp;only&nbsp;work&nbsp;if&nbsp;they&nbsp;have&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;living&nbsp;object&nbsp;by&nbsp;other&nbsp;objects&nbsp;in&nbsp;the&nbsp;environment&nbsp;or&nbsp;inventory.&nbsp;To&nbsp;get&nbsp;a&nbsp;list&nbsp;<BR>
of&nbsp;the&nbsp;available&nbsp;commands&nbsp;you&nbsp;can&nbsp;use&nbsp;the&nbsp;efuns&nbsp;commands()&nbsp;or&nbsp;get_localcmd()&nbsp;depending&nbsp;on&nbsp;what&nbsp;kind&nbsp;of&nbsp;information&nbsp;you&nbsp;want.&nbsp;<BR>
commands()&nbsp;return&nbsp;an&nbsp;array&nbsp;of&nbsp;arrays&nbsp;with&nbsp;all&nbsp;the&nbsp;commands&nbsp;of&nbsp;a&nbsp;specified&nbsp;object,&nbsp;containing&nbsp;not&nbsp;only&nbsp;the&nbsp;command&nbsp;word,&nbsp;but&nbsp;also&nbsp;what&nbsp;<BR>
object&nbsp;defines&nbsp;it&nbsp;and&nbsp;which&nbsp;function&nbsp;is&nbsp;called.&nbsp;get_localcmd()&nbsp;is&nbsp;simpler,&nbsp;returning&nbsp;only&nbsp;an&nbsp;array&nbsp;with&nbsp;the&nbsp;command&nbsp;words.&nbsp;If&nbsp;no&nbsp;object&nbsp;is&nbsp;<BR>
specified,&nbsp;this_object()&nbsp;is&nbsp;used&nbsp;by&nbsp;default.&nbsp;See&nbsp;the&nbsp;manual&nbsp;entry&nbsp;for&nbsp;commands()&nbsp;to&nbsp;get&nbsp;the&nbsp;specification&nbsp;of&nbsp;what&nbsp;the&nbsp;command&nbsp;array&nbsp;<BR>
contains.&nbsp;&nbsp;<BR>
&nbsp;<BR>
mixed&nbsp;commands(void|object&nbsp;ob)&nbsp;<BR>
string&nbsp;*get_localcmd(void|object&nbsp;ob)&nbsp;<BR>
&nbsp;<BR>
If&nbsp;you&nbsp;use&nbsp;one&nbsp;function&nbsp;for&nbsp;several&nbsp;command&nbsp;words&nbsp;it&nbsp;becomes&nbsp;necessary&nbsp;to&nbsp;find&nbsp;out&nbsp;exactly&nbsp;what&nbsp;command&nbsp;word&nbsp;was&nbsp;used.&nbsp;You&nbsp;use&nbsp;the&nbsp;efun&nbsp;<BR>
query_verb()&nbsp;for&nbsp;that.&nbsp;&nbsp;<BR>
&nbsp;<BR>
string&nbsp;query_verb()&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;init()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::init();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_action(&amp;my_func(),&nbsp;&quot;apa&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_action(my_func,&nbsp;&quot;bepa&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_action(&amp;my_func(),&nbsp;&quot;cepa&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;my_func()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(query_verb())&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&quot;apa&quot;:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;code&nbsp;&gt;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&quot;bepa&quot;:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;code&nbsp;&gt;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&quot;cepa&quot;:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;code&nbsp;&gt;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;1;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
Action&nbsp;functions&nbsp;should&nbsp;return&nbsp;1&nbsp;if&nbsp;they&nbsp;were&nbsp;properly&nbsp;evaulated,&nbsp;i.e.&nbsp;if&nbsp;the&nbsp;function&nbsp;called&nbsp;was&nbsp;the&nbsp;right&nbsp;one&nbsp;with&nbsp;the&nbsp;right&nbsp;arguments.&nbsp;If&nbsp;you&nbsp;<BR>
return&nbsp;0,&nbsp;the&nbsp;gamedriver&nbsp;will&nbsp;look&nbsp;for&nbsp;other&nbsp;actions&nbsp;with&nbsp;the&nbsp;same&nbsp;command&nbsp;word&nbsp;and&nbsp;try&nbsp;those,&nbsp;until&nbsp;one&nbsp;of&nbsp;them&nbsp;finally&nbsp;returns&nbsp;1,&nbsp;or&nbsp;there's&nbsp;<BR>
no&nbsp;more&nbsp;to&nbsp;test.&nbsp;There's&nbsp;a&nbsp;special&nbsp;efun&nbsp;called&nbsp;notify_fail()&nbsp;that&nbsp;you&nbsp;can&nbsp;use&nbsp;for&nbsp;storing&nbsp;error&nbsp;messages&nbsp;in&nbsp;case&nbsp;no&nbsp;function&nbsp;'takes'&nbsp;the&nbsp;<BR>
command.&nbsp;Instead&nbsp;of&nbsp;giving&nbsp;the&nbsp;very&nbsp;useless&nbsp;text&nbsp;'What&nbsp;?'&nbsp;when&nbsp;the&nbsp;player&nbsp;types&nbsp;the&nbsp;command&nbsp;you&nbsp;can&nbsp;give&nbsp;him&nbsp;some&nbsp;better&nbsp;info.&nbsp;If&nbsp;there&nbsp;are&nbsp;<BR>
several&nbsp;action&nbsp;commands&nbsp;using&nbsp;the&nbsp;same&nbsp;command&nbsp;word&nbsp;who&nbsp;all&nbsp;fail,&nbsp;the&nbsp;one&nbsp;who&nbsp;last&nbsp;called&nbsp;notify_fail()&nbsp;will&nbsp;define&nbsp;the&nbsp;message&nbsp;<BR>
actually&nbsp;used.&nbsp;&nbsp;<BR>
&nbsp;<BR>
notify_fail(string&nbsp;message)&nbsp;<BR>
e.g.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;init()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::init();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_action(&amp;do_bow(),&nbsp;&quot;bow&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;do_bow(string&nbsp;who)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!present(find_player(who)),&nbsp;environment(this_player()))&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;notify_fail(&quot;There's&nbsp;no&nbsp;&quot;&nbsp;+&nbsp;who&nbsp;+&nbsp;&quot;&nbsp;here&nbsp;to&nbsp;bow&nbsp;to!\n&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;bow&nbsp;code&nbsp;&gt;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;1;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
If&nbsp;you&nbsp;are&nbsp;absolutely&nbsp;certain&nbsp;that&nbsp;the&nbsp;command&nbsp;given&nbsp;was&nbsp;directed&nbsp;only&nbsp;to&nbsp;your&nbsp;object&nbsp;and&nbsp;you&nbsp;want&nbsp;to&nbsp;stop&nbsp;execution&nbsp;there,&nbsp;even&nbsp;if&nbsp;your&nbsp;<BR>
object&nbsp;finds&nbsp;an&nbsp;error&nbsp;with&nbsp;the&nbsp;command&nbsp;(arguments&nbsp;or&nbsp;context&nbsp;or&nbsp;whatever),&nbsp;you&nbsp;can&nbsp;return&nbsp;1.&nbsp;However,&nbsp;then&nbsp;you&nbsp;must&nbsp;use&nbsp;another&nbsp;method&nbsp;to&nbsp;<BR>
display&nbsp;error&nbsp;messages.&nbsp;The&nbsp;text&nbsp;stored&nbsp;with&nbsp;notify_fail()&nbsp;is&nbsp;only&nbsp;used&nbsp;if&nbsp;you&nbsp;return&nbsp;0.&nbsp;&nbsp;<BR>
&nbsp;<BR>
If&nbsp;your&nbsp;object&nbsp;changes&nbsp;the&nbsp;available&nbsp;set&nbsp;of&nbsp;actions&nbsp;during&nbsp;execution&nbsp;and&nbsp;you&nbsp;want&nbsp;the&nbsp;surrounding&nbsp;living&nbsp;objects&nbsp;to&nbsp;update&nbsp;their&nbsp;command&nbsp;set,&nbsp;<BR>
you&nbsp;call&nbsp;the&nbsp;efun&nbsp;update_actions()&nbsp;for&nbsp;the&nbsp;object&nbsp;in&nbsp;question.&nbsp;If&nbsp;you&nbsp;don't&nbsp;specify&nbsp;any&nbsp;object&nbsp;this_object()&nbsp;is&nbsp;used&nbsp;by&nbsp;default.&nbsp;What&nbsp;<BR>
happens&nbsp;is&nbsp;that&nbsp;all&nbsp;surrounding&nbsp;objects&nbsp;discard&nbsp;their&nbsp;command&nbsp;sets&nbsp;from&nbsp;the&nbsp;specified&nbsp;object&nbsp;and&nbsp;call&nbsp;init()&nbsp;in&nbsp;it&nbsp;again&nbsp;to&nbsp;get&nbsp;the&nbsp;new&nbsp;set.&nbsp;&nbsp;<BR>
&nbsp;<BR>
update_actions(object&nbsp;ob)&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;klab.ishii.utsu]&nbsp;<BR>
<A HREF="00000014.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000016.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>