<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中文文檔(遊戲杆例程)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;20:53:07&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
遊戲杆例程&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;install_joystick&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove_joystick&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poll_joystick&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_joysticks&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;joy&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;calibrate_joystick_name&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;calibrate_joystick&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_joystick_data&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load_joystick_data&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;install_joystick(int&nbsp;type);&nbsp;<BR>
初始化遊戲杆,&nbsp;校準中間位置值.&nbsp;你必須&nbsp;在使用任何遊戲杆函數前調用這個,&nbsp;並且你必須&nbsp;<BR>
確認&nbsp;這個時候遊戲杆在中間位置.&nbsp;成功則返回&nbsp;0.&nbsp;type&nbsp;參數必須是以下值中的一個:&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_AUTODETECT&nbsp;<BR>
嘗試自動檢測遊戲杆硬件.&nbsp;它不可能&nbsp;無誤的辨認出所有可能的輸入設置,&nbsp;因此這個例程&nbsp;只&nbsp;<BR>
能選擇基本遊戲杆,&nbsp;Sidewider,&nbsp;或&nbsp;GamePad&nbsp;Pro&nbsp;驅動程序,&nbsp;但是如果有可能它將使用設置&nbsp;<BR>
文件&nbsp;中的信息&nbsp;(設置文件可以由&nbsp;setup&nbsp;工具創建或者由&nbsp;save_joystick_data()&nbsp;函數保&nbsp;<BR>
存),&nbsp;因此你&nbsp;可以總是在你的代碼裡使用&nbsp;JOY_TYPE_AUTODETECT&nbsp;選擇&nbsp;從&nbsp;setup&nbsp;程序裡得&nbsp;<BR>
到的準確的硬件類型.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_NONE&nbsp;<BR>
為沒有遊戲杆的機器設計的啞驅動程序.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_STANDARD&nbsp;<BR>
普通的兩鍵杆.這是缺省值,可以用在任何遊戲杆上.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_2PADS&nbsp;<BR>
雙遊戲杆模式&nbsp;(&nbsp;兩個遊戲杆,&nbsp;每個&nbsp;2&nbsp;按紐).&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_4BUTTON&nbsp;<BR>
使能&nbsp;4&nbsp;按紐遊戲杆上擴展的按紐.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_6BUTTON&nbsp;<BR>
使能&nbsp;6&nbsp;按紐遊戲杆上擴展的按紐.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_8BUTTON&nbsp;<BR>
使能&nbsp;8&nbsp;按紐遊戲杆上擴展的按紐.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_FSPRO&nbsp;<BR>
CH&nbsp;Flightstick&nbsp;Pro&nbsp;或其兼容遊戲杆,&nbsp;它提供了&nbsp;4&nbsp;個按紐,&nbsp;一個模擬氣管(analogue&nbsp;<BR>
throttle),&nbsp;和一個&nbsp;4&nbsp;向&nbsp;coolie&nbsp;hat.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_WINGEX&nbsp;<BR>
Logitech&nbsp;Wingman&nbsp;Extreme&nbsp;遊戲杆,&nbsp;也可以用在任何&nbsp;Thrustmaster&nbsp;Mk.I&nbsp;兼容遊戲杆上.&nbsp;<BR>
它支持&nbsp;四個按紐和冷卻帽.&nbsp;如果你將&nbsp;Wingman&nbsp;Warrior&nbsp;插在&nbsp;15&nbsp;針插頭上&nbsp;(記住&nbsp;拔掉&nbsp;9&nbsp;<BR>
針插頭!)&nbsp;然後設置一下&nbsp;&quot;H&quot;&nbsp;位置前的小開關,&nbsp;也可以工作&nbsp;(&nbsp;然而你將不能使用&nbsp;氣管或者&nbsp;<BR>
機頭罩)&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_SIDEWINDER&nbsp;<BR>
Microsoft&nbsp;Sidewinder&nbsp;數字手柄&nbsp;(支持&nbsp;4&nbsp;個控制器,&nbsp;每個&nbsp;10&nbsp;按紐和一個數字方向控制).&nbsp;<BR>
&nbsp;<BR>
JOY_TYPE_GAMEPAD_PRO&nbsp;<BR>
Gravis&nbsp;GamePad&nbsp;Pro&nbsp;(支持兩個控制器,&nbsp;每個&nbsp;10&nbsp;按紐&nbsp;和一個數字方向控制器).&nbsp;&nbsp;<BR>
&nbsp;<BR>
一當你裝載遊戲杆模塊,&nbsp;你將能&nbsp;讀取按紐狀態和數字(on/off&nbsp;狀態)方向信息,&nbsp;這些對一些&nbsp;<BR>
遊戲足夠了.&nbsp;如果你想得到全部模擬&nbsp;輸入,&nbsp;那麼,&nbsp;你需要使用&nbsp;calibrate_joystick()&nbsp;函&nbsp;<BR>
數來&nbsp;測量準確的輸入範圍:&nbsp;見下.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;remove_joystick();&nbsp;<BR>
卸載遊戲杆處理程序.&nbsp;你通常不必被調用它麻煩,&nbsp;因為&nbsp;allegro_exit()&nbsp;將為你去做.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;poll_joystick();&nbsp;<BR>
不像鼠標和鍵盤,&nbsp;遊戲杆不是用中斷驅動的,&nbsp;因此&nbsp;你需要每次重複的調用這個函數來更新&nbsp;<BR>
全局坐標變量.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;num_joysticks;&nbsp;<BR>
包含激活的遊戲杆驅動程序的數目的全局變量.&nbsp;當前的驅動程序支持最多為&nbsp;4&nbsp;個控制器.&nbsp;&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;JOYSTICK_INFO&nbsp;joy[n];&nbsp;<BR>
遊戲杆狀態信息全局變量數組,&nbsp;它由&nbsp;poll_joystick()&nbsp;函數刷新.&nbsp;僅僅只有前面&nbsp;<BR>
num_joystick&nbsp;個元素&nbsp;包含有意義的信息.&nbsp;JOYSTICK_INFO&nbsp;結構是這樣定義的:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;typedef&nbsp;struct&nbsp;JOYSTICK_INFO&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;flags;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;有個遊戲杆的狀態標誌&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;num_sticks;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;多少操縱杆輸入?&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;num_buttons;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;多少按紐?&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JOYSTICK_STICK_INFO&nbsp;stick[n];&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;操縱杆的狀態信息&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JOYSTICK_BUTTON_INFO&nbsp;button[n];&nbsp;&nbsp;-&nbsp;按紐狀態信息&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;JOYSTICK_INFO;&nbsp;<BR>
&nbsp;<BR>
按紐狀態貯存在這樣的結構中:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;typedef&nbsp;struct&nbsp;JOYSTICK_BUTTON_INFO&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;布爾&nbsp;on/off&nbsp;標誌&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*name;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;這個按紐的描述&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;JOYSTICK_BUTTON_INFO;&nbsp;<BR>
&nbsp;<BR>
你可能希望將按紐的明知做為輸入設置屏幕的一部分來顯示&nbsp;來使用戶能選擇每個按紐來操&nbsp;<BR>
縱什麼遊戲函數,&nbsp;但是更簡單的情況是你可以安全的假定&nbsp;按紐數組前兩個元素總是作為主&nbsp;<BR>
扳機控制器.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
每個遊戲杆將提供一個或更多不同類型的杆輸入.&nbsp;這些可以是瞬變方向的數字控制器&nbsp;(比&nbsp;<BR>
如:&nbsp;gamepad&nbsp;控制器,&nbsp;Flightstick&nbsp;Pro&nbsp;上的&nbsp;coolie&nbsp;hat&nbsp;或&nbsp;Wingman&nbsp;Extreme,&nbsp;或是一般&nbsp;<BR>
沒有被校準的遊戲杆),&nbsp;或他們&nbsp;可以是有平滑移動範圍的完全模擬輸入.&nbsp;操縱杆也可以&nbsp;有&nbsp;<BR>
不同數目的軸線,&nbsp;例如一個一般的方向控制器有兩個,&nbsp;但是&nbsp;Flightstick&nbsp;Pro&nbsp;氣管只有一&nbsp;<BR>
個軸線,&nbsp;並且有可能未來的系統能擴展到支持&nbsp;全&nbsp;3d&nbsp;控制器.&nbsp;一個操縱杆輸入由如下結構&nbsp;<BR>
描述:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;typedef&nbsp;struct&nbsp;JOYSTICK_STICK_INFO&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;flags;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;這個輸入設備的狀態標誌&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;num_axis;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;我們擁有幾個軸線?&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JOYSTICK_AXIS_INFO&nbsp;axis[n];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;軸線狀態信息&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*name;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;這個輸入設備的描述&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;JOYSTICK_STICK_INFO;&nbsp;<BR>
&nbsp;<BR>
單個遊戲杆可能提供幾個不同的操縱杆輸入,&nbsp;但是你可以&nbsp;安全的假定杆數組中第一個元素&nbsp;<BR>
總是&nbsp;主方向控制器.&nbsp;&nbsp;<BR>
&nbsp;<BR>
每個杆軸線信息儲存在子結構中:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;typedef&nbsp;struct&nbsp;JOYSTICK_AXIS_INFO&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;pos;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;模擬軸線位置&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;d1,&nbsp;d2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;數值軸線位置&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*name;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;這個軸線的描述&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;JOYSTICK_AXIS_INFO;&nbsp;<BR>
&nbsp;<BR>
在&nbsp;pos&nbsp;區域它提供了兩個模擬輸入&nbsp;(範圍從&nbsp;-128&nbsp;到&nbsp;128&nbsp;或從&nbsp;0&nbsp;到&nbsp;255,&nbsp;這以來於控制&nbsp;<BR>
器的類型),&nbsp;數字值&nbsp;在&nbsp;d1&nbsp;和&nbsp;d2&nbsp;區域.&nbsp;例如:&nbsp;當描述&nbsp;X&nbsp;軸位置時,&nbsp;pos&nbsp;區域將為遊戲杆&nbsp;<BR>
的水平坐標,&nbsp;如果它向左移&nbsp;d1&nbsp;將被設置,&nbsp;如果它向右移&nbsp;d2&nbsp;將被設置.&nbsp;無論使用數字或模&nbsp;<BR>
擬遊戲杆,&nbsp;Allegro&nbsp;無論如何都將填寫所有這些值,&nbsp;&nbsp;<BR>
&nbsp;<BR>
數字輸入將填入&nbsp;pos&nbsp;最小,&nbsp;中間,&nbsp;最大的位置值,&nbsp;而模擬遊戲杆則同中點比較當前坐標來&nbsp;<BR>
填入&nbsp;d1&nbsp;和&nbsp;d2&nbsp;值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
遊戲杆標誌域可以包含下面位標誌的任何組合:&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_DIGITAL&nbsp;<BR>
這個控制器當前提供了數字輸入.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_ANALOGUE&nbsp;<BR>
這個控制器當前提供了模擬輸入.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_CALIB_DIGITAL&nbsp;<BR>
這個控制器一但被校準就能夠提供數字輸入,&nbsp;但是現在還不行.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_CALIB_ANALOGUE&nbsp;<BR>
這個控制器一但被校準就能夠提供模擬輸入,&nbsp;但是現在還不行.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_CALIBRATE&nbsp;<BR>
表示這個控制器需要被校準.&nbsp;許多設備&nbsp;需要多重校準步驟,&nbsp;因此你應當用一個循環調用&nbsp;<BR>
calibrate_joystick()&nbsp;函數直到這個標誌被清掉.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_SIGNED&nbsp;<BR>
表示模擬軸線坐標是一個有符號的格式,&nbsp;範圍&nbsp;從&nbsp;-128&nbsp;到&nbsp;128.&nbsp;所有&nbsp;2d&nbsp;方向控制器都是&nbsp;<BR>
這樣.&nbsp;&nbsp;<BR>
&nbsp;<BR>
JOYFLAG_UNSIGNED&nbsp;<BR>
表示模擬軸線位置是無符號格式,&nbsp;範圍從&nbsp;0&nbsp;到&nbsp;255.&nbsp;所有的&nbsp;1d&nbsp;氣管控制器都是這樣.&nbsp;&nbsp;<BR>
&nbsp;<BR>
拼寫古怪的人注意:&nbsp;因為你不喜歡鍵入&nbsp;&quot;analogue&quot;,&nbsp;在&nbsp;allegro.h&nbsp;裡有一些&nbsp;#define&nbsp;的&nbsp;<BR>
別名,&nbsp;它們允許你&nbsp;用&nbsp;&quot;analog&quot;&nbsp;替代.&nbsp;&nbsp;<BR>
&nbsp;<BR>
char&nbsp;*calibrate_joystick_name(int&nbsp;n);&nbsp;<BR>
返回一個將在指定遊戲杆上完成的下一個校準類型的描述,&nbsp;如果沒有更多的校準需要它將返&nbsp;<BR>
回&nbsp;NULL.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;calibrate_joystick(int&nbsp;n);&nbsp;<BR>
所有的遊戲杆需要在它們可以提供完整的&nbsp;模擬輸入前校準一下.&nbsp;這個函數完成對指定遊戲&nbsp;<BR>
杆的一套校準過程的&nbsp;下一個步驟,&nbsp;假定遊戲杆已經被前一個&nbsp;calibrate_joystick_name()&nbsp;<BR>
描述的方式定位了,&nbsp;如果成功則返回零.&nbsp;例如:&nbsp;一個簡單的對所有遊戲杆完全校準的例程可&nbsp;<BR>
能是這個樣子:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(i=0;&nbsp;i&lt;;num_joysticks;&nbsp;i++)&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(joy[i].flags&nbsp;&amp;&nbsp;JOYFLAG_CALIBRATE)&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;*msg&nbsp;=&nbsp;calibrate_joystick_name(i);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%s,&nbsp;and&nbsp;press&nbsp;a&nbsp;key\n&quot;,&nbsp;msg);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readkey();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(calibrate_joystick(i)&nbsp;!=&nbsp;0)&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;oops!\n&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
int&nbsp;save_joystick_data(char&nbsp;*filename);&nbsp;<BR>
在所有頭痛的遊戲杆校準後,&nbsp;你可能不想&nbsp;迫使你可憐的用戶在每次運行你的程序時重複這&nbsp;<BR>
個過程.&nbsp;調用這個函數來將遊戲杆校準數據保存在&nbsp;指定的設置文件裡,&nbsp;以後可以用&nbsp;<BR>
load_joystick_data()&nbsp;來從文件裡讀出來.&nbsp;傳入&nbsp;NULL&nbsp;文件名則將數據寫入&nbsp;當前選擇的設&nbsp;<BR>
置文件.&nbsp;成功則返回零.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;load_joystick_data(char&nbsp;*filename);&nbsp;<BR>
恢復以前用&nbsp;save_joystick_data()&nbsp;或&nbsp;setuo&nbsp;工具保存的校準數據.&nbsp;這個設置遊戲杆代碼&nbsp;<BR>
的所有方面:&nbsp;如果使用這個函數,你&nbsp;甚至不需要調用&nbsp;initialise_joystick().&nbsp;傳入&nbsp;NULL&nbsp;<BR>
文件名則從當前選定的&nbsp;配置文件裡讀入數據.&nbsp;成功則返回零:&nbsp;如果失敗,&nbsp;遊戲杆狀態就沒&nbsp;<BR>
有定義並且你必須臨時重初始化.&nbsp;&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://www.nease.net/~cloudwu">http://www.nease.net/~cloudwu</A>&nbsp;(暫時不能更新)&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000023.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000025.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>