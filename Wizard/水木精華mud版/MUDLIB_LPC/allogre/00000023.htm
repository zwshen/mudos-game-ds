<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中文文檔(鍵盤例程)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;20:53:05&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
鍵盤例程&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;install_keyboard&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remove_keyboard&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;install_keyboard_hooks&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_shifts&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keypressed&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readkey&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;simulate_keypress&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyboard_callback&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_leds&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clear_keybuf&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;three_finger_flag&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key_led_flag&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
如果你想檢測同時按下的多個按鍵,&nbsp;BIOS&nbsp;鍵盤例程就沒什麼用了.&nbsp;Allegro&nbsp;能加載一個鍵&nbsp;<BR>
盤處理程序的替代品,&nbsp;它提供了緩衝輸入和標記集合兩種方式來儲存每個鍵的狀態.&nbsp;注意,&nbsp;<BR>
由於&nbsp;PC&nbsp;鍵盤本身的設計,它不可能正確的檢測到每種按鍵的組合,&nbsp;同時按下兩到三個鍵將&nbsp;<BR>
工作的很好,&nbsp;但是如果你同時按下更多的鍵,&nbsp;多餘的部分將被忽略&nbsp;(準確的說得到的鍵的組&nbsp;<BR>
合隨著每一個鍵盤而不同).&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;install_keyboard();&nbsp;<BR>
加載&nbsp;Allegro&nbsp;鍵盤中斷處理程序.你必須在使用&nbsp;任何鍵盤輸入例程前調用它.一旦你設置了&nbsp;<BR>
Allegro&nbsp;處理程序,就不再需要使用&nbsp;DOS/BIOS&nbsp;調用或者&nbsp;C&nbsp;庫函數&nbsp;來控制鍵盤了.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;remove_keyboard();&nbsp;<BR>
卸載鍵盤處理程序,將控制權交回&nbsp;BIOS.&nbsp;正常的情況你不必&nbsp;自己調用它,因為&nbsp;<BR>
allegro_exit()&nbsp;將為你做這些.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;install_keyboard_hooks(int&nbsp;(*keypressed)(),&nbsp;int&nbsp;(*readkey)());&nbsp;<BR>
只有在你&nbsp;*不需要*&nbsp;使用鍵盤處理程序的其它部分時才使用這個函數.&nbsp;它應該在&nbsp;<BR>
install_keyboard()&nbsp;的地方被調用,&nbsp;讓你提供一個檢測和讀取鍵盤的回調例程,&nbsp;這個例程&nbsp;<BR>
將被&nbsp;keypressed()&nbsp;和&nbsp;readkey()&nbsp;調用.&nbsp;如果你想使用&nbsp;Allegro&nbsp;的&nbsp;GUI&nbsp;代碼和自己配制&nbsp;<BR>
的鍵盤處理程序時這就很有用,&nbsp;因為它提供了用你自己代碼為&nbsp;GUI&nbsp;控制鍵盤輸入的一個方&nbsp;<BR>
案.&nbsp;如果你想使用&nbsp;BIOS&nbsp;鍵盤例程,&nbsp;libc&nbsp;函數&nbsp;_bios_keybrd(_KEYBRD_READ)&nbsp;將以正確形&nbsp;<BR>
式返回鍵擊.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;volatile&nbsp;char&nbsp;key[128];&nbsp;<BR>
以掃描碼的順序描述每個按鍵狀態的標誌數組.&nbsp;掃描碼以一串&nbsp;KEY_*&nbsp;形式的常量定義在&nbsp;<BR>
allegro.h&nbsp;裡.&nbsp;比如,你可以這樣寫:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(key[KEY_SPACE])&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Space&nbsp;is&nbsp;pressed\n&quot;);&nbsp;<BR>
&nbsp;<BR>
每個值都可以以在某些位上包含標誌&nbsp;KB_NORMAL&nbsp;和&nbsp;KB_EXTENDED,&nbsp;這使得你可以檢測出具&nbsp;<BR>
有相同掃描碼的鍵&nbsp;中具體按下的是哪一個.例如,&nbsp;你可以這樣寫:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(key[KEY_ENTER]&nbsp;&amp;&nbsp;KB_NORMAL)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter&nbsp;(next&nbsp;to&nbsp;the&nbsp;right&nbsp;shift&nbsp;key)&nbsp;is&nbsp;pressed\n&quot;);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(key[KEY_ENTER]&nbsp;&amp;&nbsp;KB_EXTENDED)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;Enter&nbsp;(on&nbsp;the&nbsp;numeric&nbsp;keypad)&nbsp;is&nbsp;pressed\n&quot;);&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;volatile&nbsp;int&nbsp;key_shifts;&nbsp;<BR>
這個位屏蔽變量包含了當前的&nbsp;shift/ctrl/alt&nbsp;狀態,&nbsp;特別的&nbsp;Windows&nbsp;鍵,和&nbsp;accent&nbsp;<BR>
escape&nbsp;字符.&nbsp;可以含有以下標誌:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
KB_SHIFT_FLAG&nbsp;<BR>
KB_CTRL_FLAG&nbsp;<BR>
KB_ALT_FLAG&nbsp;<BR>
KB_LWIN_FLAG&nbsp;<BR>
KB_RWIN_FLAG&nbsp;<BR>
KB_MENU_FLAG&nbsp;<BR>
KB_SCROLOCK_FLAG&nbsp;<BR>
KB_NUMLOCK_FLAG&nbsp;<BR>
KB_CAPSLOCK_FLAG&nbsp;<BR>
KB_INALTSEQ_FLAG&nbsp;<BR>
KB_ACCENT1_FLAG&nbsp;<BR>
KB_ACCENT1_S_FLAG&nbsp;<BR>
KB_ACCENT2_FLAG&nbsp;<BR>
KB_ACCENT2_S_FLAG&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;keypressed();&nbsp;<BR>
如果在輸入緩衝中有鍵擊則返回&nbsp;TRUE.&nbsp;相當於&nbsp;libc&nbsp;kbhit()&nbsp;函數.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;readkey();&nbsp;<BR>
返回鍵盤緩衝裡的下一個字符.如果緩衝是空的,&nbsp;則等待下一次鍵擊.返回值的低字節&nbsp;是鍵&nbsp;<BR>
的&nbsp;ASCII&nbsp;碼,高字節為掃描碼.&nbsp;掃描碼無論在何種&nbsp;shift,&nbsp;ctrl&nbsp;和&nbsp;alt&nbsp;狀態下都保持一&nbsp;<BR>
致.&nbsp;ASCII&nbsp;碼以正常的方式被&nbsp;shift&nbsp;和&nbsp;ctrl&nbsp;的狀態影響.&nbsp;(shift&nbsp;改變大小寫,&nbsp;ctrl+字&nbsp;<BR>
母則給出字母在字母表中的位置,&nbsp;即&nbsp;ctrl+A&nbsp;=&nbsp;1,&nbsp;ctrl+B&nbsp;=&nbsp;2,&nbsp;等等).&nbsp;按下&nbsp;alt+key&nbsp;只&nbsp;<BR>
返回掃描碼,&nbsp;而低字節為零.&nbsp;比如:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((readkey()&nbsp;&amp;&nbsp;0xff)&nbsp;==&nbsp;'d')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;檢查&nbsp;ASCII&nbsp;碼&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;You&nbsp;pressed&nbsp;'d'\n&quot;);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((readkey()&nbsp;&gt;&gt;&nbsp;8)&nbsp;==&nbsp;KEY_SPACE)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;檢查掃描碼&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;You&nbsp;pressed&nbsp;Space\n&quot;);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((readkey()&nbsp;&amp;&nbsp;0xff)&nbsp;==&nbsp;3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ctrl+字母&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;You&nbsp;pressed&nbsp;Control+C\n&quot;);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(readkey()&nbsp;==&nbsp;(KEY_X&nbsp;&lt;&lt;&nbsp;8))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;alt+字母&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;You&nbsp;pressed&nbsp;Alt+X\n&quot;);&nbsp;<BR>
&nbsp;<BR>
void&nbsp;simulate_keypress(int&nbsp;key);&nbsp;<BR>
向鍵盤緩衝塞入一個鍵,就像用戶親自敲過一樣.&nbsp;參數和&nbsp;readkey()&nbsp;的返回值的格式相同.&nbsp;&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;(*keyboard_callback)(int&nbsp;key);&nbsp;<BR>
如果被設置,&nbsp;鍵盤處理程序在反應每次鍵擊時都調用這個函數.&nbsp;將即將加入輸入緩衝的值傳&nbsp;<BR>
入這個函數,&nbsp;然後你可以不加改變的將這個值返回,也可以&nbsp;返回零使得按鍵被忽略,或者返&nbsp;<BR>
回一個修改的值來改變&nbsp;readkey()&nbsp;將返回的值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;set_leds(int&nbsp;leds);&nbsp;<BR>
設置鍵盤&nbsp;LED&nbsp;指示器的狀態.&nbsp;參數是一個&nbsp;可以包含&nbsp;KB_SCROLOCK_FLAG,&nbsp;<BR>
KB_NUMLOCK_FLAG,&nbsp;和&nbsp;KB_CAPSLOCK_FLAG&nbsp;這些值&nbsp;的位掩值&nbsp;(bitmask),&nbsp;或者傳入&nbsp;-1&nbsp;來恢&nbsp;<BR>
復缺省狀態.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;clear_keybuf();&nbsp;<BR>
清空鍵盤緩衝.&nbsp;&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;three_finger_flag;&nbsp;<BR>
Allegro&nbsp;鍵盤處理程序提供了一個&nbsp;'緊急出口'&nbsp;的序列,可以用來&nbsp;殺掉你的程序.&nbsp;如果你正&nbsp;<BR>
在&nbsp;DOS&nbsp;下運行,&nbsp;這是&nbsp;三個手指的活,&nbsp;ctrl+alt+del.&nbsp;所有的多任務&nbsp;OS&nbsp;都會&nbsp;在&nbsp;Allegro&nbsp;<BR>
處理之前捕捉這個組合,&nbsp;所以&nbsp;你可以使用改變的鍵組&nbsp;ctrl+alt+end.&nbsp;如果你想在&nbsp;你的程&nbsp;<BR>
序的發行版中關掉這個行為,&nbsp;將這個標誌設為&nbsp;FALSE.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;key_led_flag;&nbsp;<BR>
缺省狀態下,&nbsp;capslock,&nbsp;numlock,&nbsp;和&nbsp;scroll-lock&nbsp;鍵在它們被觸動時&nbsp;聯繫著鍵盤&nbsp;LED&nbsp;指&nbsp;<BR>
示器.&nbsp;如果你在你的遊戲中使用了這些做輸入鍵&nbsp;(比如.&nbsp;capslock&nbsp;為開火鍵)&nbsp;這個就不那&nbsp;<BR>
麼&nbsp;稱心如意了,&nbsp;因此你可以清除這個標誌來阻止&nbsp;LED&nbsp;的狀態被改變.&nbsp;&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://www.nease.net/~cloudwu">http://www.nease.net/~cloudwu</A>&nbsp;(暫時不能更新)&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000022.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000024.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>