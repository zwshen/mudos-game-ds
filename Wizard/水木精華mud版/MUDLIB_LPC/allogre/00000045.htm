<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中譯文檔(文件和壓縮例程)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;20:59:31&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
文件和壓縮例程&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get_filename&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get_extension&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put_backslash&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file_exists&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exists&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file_size&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file_time&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete_file&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for_each_file&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;packfile_password&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fopen&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fclose&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fseek&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_feof&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_ferror&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_getc&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_putc&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_igetw&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_igetl&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_iputw&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_iputl&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_mgetw&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_mgetl&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_mputw&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_mputl&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fread&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fwrite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fgets&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fputs&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fopen_chunk&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack_fclose_chunk&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
以下的例程提供了一個快速緩衝的文件&nbsp;I/O&nbsp;系統,&nbsp;它支持基於&nbsp;Haruhiko&nbsp;Okumura&nbsp;寫的&nbsp;<BR>
&nbsp;<BR>
LZSS&nbsp;壓縮器使用一個環狀緩衝互除法&nbsp;來支持讀寫壓縮文件.&nbsp;這沒有實現像&nbsp;zip&nbsp;和&nbsp;lha&nbsp;&nbsp;<BR>
程&nbsp;<BR>
序那樣好的壓縮率,&nbsp;但解壓縮非常的快而且不需要很多內存.&nbsp;壓縮文件總是由一個&nbsp;32&nbsp;位&nbsp;<BR>
的&nbsp;<BR>
值&nbsp;F_PACK_MAGIC&nbsp;開始,&nbsp;自動用值&nbsp;F_NOPACK_MAGIC&nbsp;檢測文件.&nbsp;&nbsp;<BR>
&nbsp;<BR>
char&nbsp;*get_filename(char&nbsp;*path);&nbsp;<BR>
當傳入一個完整的指定文件路徑,&nbsp;這個返回指向文件名的指針.&nbsp;'\'&nbsp;和&nbsp;'/'&nbsp;都將被看作&nbsp;<BR>
是&nbsp;<BR>
目錄分隔符.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
char&nbsp;*get_extension(char&nbsp;*filename);&nbsp;<BR>
當傳入一個完整的文件名&nbsp;(有或沒有路徑信息)&nbsp;這返回指向文件擴展名的指針.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;put_backslash(char&nbsp;*filename);&nbsp;<BR>
如果文件名的最後字符不是&nbsp;'\',&nbsp;'/',&nbsp;或&nbsp;'#',&nbsp;這個例程將接上一個&nbsp;'\'&nbsp;在上面.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;file_exists(char&nbsp;*filename,&nbsp;int&nbsp;attrib,&nbsp;int&nbsp;*aret);&nbsp;<BR>
檢查匹配給出的名字和屬性的文件是否存在,&nbsp;如果是返回非零.&nbsp;文件屬性可能包含有&nbsp;&nbsp;<BR>
dir.h&nbsp;<BR>
裡定義的&nbsp;FA_*&nbsp;中任何一個.&nbsp;如果&nbsp;aret&nbsp;不是&nbsp;NULL,&nbsp;它將被設置成匹配文件的屬性.&nbsp;如&nbsp;<BR>
果&nbsp;<BR>
錯誤發生,&nbsp;系統錯誤代碼將被儲存在&nbsp;errno&nbsp;中.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;exists(char&nbsp;*filename);&nbsp;<BR>
file_exists()&nbsp;的快捷方式版本,&nbsp;它檢查正常的文件,&nbsp;就是文檔型或者設置了只讀屬性位&nbsp;<BR>
&nbsp;<BR>
的,&nbsp;但是不檢查隱含文件,&nbsp;目錄,&nbsp;系統文件,&nbsp;等等.&nbsp;&nbsp;<BR>
&nbsp;<BR>
long&nbsp;file_size(char&nbsp;*filename);&nbsp;<BR>
以字節為單位返回文件長度.&nbsp;如果文件不存在或錯誤發生了,&nbsp;它將返回零並將系統出錯碼&nbsp;<BR>
放&nbsp;<BR>
在&nbsp;errno&nbsp;裡.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
long&nbsp;file_time(char&nbsp;*filename);&nbsp;<BR>
返回文件的更改時間.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;delete_file(char&nbsp;*filename);&nbsp;<BR>
從磁盤中刪除一個文件.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;for_each_file(char&nbsp;*name,&nbsp;int&nbsp;attrib,&nbsp;void&nbsp;(*callback)(),&nbsp;int&nbsp;param);&nbsp;<BR>
在磁盤上尋找匹配給定的統配符和文件屬性的文件,&nbsp;沒找到一個就執行一次&nbsp;&nbsp;<BR>
callback().&nbsp;<BR>
callback()&nbsp;將被傳入三個參數,&nbsp;第一個字符串包含了完整的文件名,&nbsp;第二個為文件的屬&nbsp;<BR>
性,&nbsp;<BR>
第三個是一個整數它就是&nbsp;param&nbsp;簡單的復制&nbsp;(你可以按你自己的任何想法來使用它).&nbsp;如&nbsp;<BR>
果&nbsp;<BR>
發生了錯誤,&nbsp;錯誤碼將儲存在&nbsp;errno&nbsp;裡,&nbsp;callback()&nbsp;可以由自己設置&nbsp;errno&nbsp;來導致&nbsp;<BR>
for_each_file()&nbsp;退出.&nbsp;返回成功調用&nbsp;callback()&nbsp;的次數.&nbsp;文件屬性可以包含&nbsp;dir.h&nbsp;&nbsp;<BR>
裡&nbsp;<BR>
的&nbsp;FA_*&nbsp;標誌中的任何一個.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;packfile_password(char&nbsp;*password);&nbsp;<BR>
設置密碼口令用來使用壓縮文件的所有讀寫操作.&nbsp;文件經過設置障礙口令寫入後如果不設&nbsp;<BR>
置&nbsp;<BR>
同樣的口令將不能讀,&nbsp;因此小心點:&nbsp;如果你忘掉了密碼,&nbsp;我不能恢復你的數據!&nbsp;傳入&nbsp;&nbsp;<BR>
NULL&nbsp;<BR>
或一個空串將返回到正常,&nbsp;無障礙模式.&nbsp;如果你使用這個函數來阻止人們得到你的數據文&nbsp;<BR>
件&nbsp;<BR>
的控制權,&nbsp;注意不要在你的可執行文件中儲存明顯的口令:&nbsp;如果有任何字符串像&nbsp;&quot;I'm&nbsp;&nbsp;<BR>
the&nbsp;<BR>
password&nbsp;for&nbsp;the&nbsp;datafile&quot;,&nbsp;那麼得到你的數據的控制權就相當的簡單&nbsp;:-)&nbsp;&nbsp;<BR>
&nbsp;<BR>
PACKFILE&nbsp;*pack_fopen(char&nbsp;*filename,&nbsp;char&nbsp;*mode);&nbsp;<BR>
以某個模式打開一個文件,&nbsp;模式可以包含以下標誌:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'r'&nbsp;-&nbsp;讀方式打開一個文件.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'w'&nbsp;-&nbsp;寫方式打開一個文件,&nbsp;覆蓋掉任何以存在的數據.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'p'&nbsp;-&nbsp;以壓縮方式打開文件.&nbsp;數據將在寫入文件時壓縮,&nbsp;而在讀操作時自動的解壓&nbsp;<BR>
縮.&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以這個模式創建的文件在沒有設置這個標誌而讀取時,將得到一堆垃圾.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'!'&nbsp;-&nbsp;以正常的寫方式打開文件,&nbsp;不壓縮模式,&nbsp;但是加入&nbsp;F_NOPACK_MAGIC&nbsp;到文件&nbsp;<BR>
的&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;開頭,&nbsp;這樣它在以後以壓縮模式打開&nbsp;而&nbsp;Allegro&nbsp;將自動檢測到數據不必解壓縮.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
取代這些標誌的是,&nbsp;任何常數&nbsp;F_READ,&nbsp;F_WRITE,&nbsp;F_READ_PACKED,&nbsp;F_WRITE_PACKED&nbsp;或&nbsp;<BR>
F_WRITE_NOPACK&nbsp;之一可以用作模式參數.&nbsp;成功了,&nbsp;pack_fopen()&nbsp;返回文件結構指針,&nbsp;出&nbsp;<BR>
錯&nbsp;<BR>
了,&nbsp;它返回&nbsp;NULL&nbsp;並將錯誤代碼儲存在&nbsp;errno&nbsp;裡.&nbsp;一個用壓縮模式讀取正常文件的企圖&nbsp;<BR>
將&nbsp;<BR>
導致&nbsp;errno&nbsp;被設置為&nbsp;EDOM.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
壓縮文件函數也能理解一些&nbsp;&quot;magic&quot;&nbsp;文件名用作特殊的效果.&nbsp;就是:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;#&quot;&nbsp;-&nbsp;讀取由&nbsp;exedat&nbsp;工具添加在你的可執行文件後的數據,&nbsp;就像它是個常規的獨&nbsp;<BR>
立&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;磁盤文件.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'filename.dat#object_name'&nbsp;-&nbsp;從數據文件中打開一個指定的對像,&nbsp;讀取它就好&nbsp;<BR>
像它&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是個常規的文件一樣.&nbsp;你可以將數據文件看作一個有層次的&nbsp;正常的目錄結構,&nbsp;比&nbsp;<BR>
如你&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以打開&nbsp;'filename.dat#graphics/level1/mapdata'.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'#object_name'&nbsp;-&nbsp;上面方式的組合,&nbsp;從附加在你的執行文件後的數據文件中讀入&nbsp;<BR>
一個&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;對像.&nbsp;&nbsp;<BR>
&nbsp;<BR>
由於這些特殊的文件名,&nbsp;就是指數據文件中的部分或&nbsp;加在文件後面的數據可以以和正常&nbsp;<BR>
文&nbsp;<BR>
件完全相同的方式讀取,&nbsp;因此&nbsp;Allegro&nbsp;裡的文件控制函數&nbsp;(&nbsp;比如.&nbsp;load_pax()&nbsp;和&nbsp;<BR>
set_config_file())&nbsp;可以用這些方式讀.&nbsp;注意你不能寫向這些特殊文件:&nbsp;假文件是只讀&nbsp;<BR>
的.&nbsp;<BR>
而且,如果你想將對像分開讀入的話,&nbsp;你必須將數據文件以非壓縮方式儲存或以單個對像&nbsp;<BR>
方&nbsp;<BR>
式壓縮&nbsp;(否則在讀取的時候將花去大量的時間定位).&nbsp;最後,&nbsp;要明白指定的&nbsp;Allegro&nbsp;類型&nbsp;<BR>
同&nbsp;<BR>
型的你輸入的文件的格式不同.&nbsp;當你輸入輸入位圖或採樣聲音數據到&nbsp;grabber&nbsp;的時候,&nbsp;&nbsp;<BR>
它&nbsp;<BR>
們已經被轉換成&nbsp;Allegro&nbsp;特殊的格式,&nbsp;但是&nbsp;'#'&nbsp;型的文件中讀出的文件是&nbsp;2&nbsp;進制級別&nbsp;<BR>
的.&nbsp;<BR>
就是說,&nbsp;比如,&nbsp;你想使用&nbsp;load_pcx&nbsp;來從數據文件中讀入一個圖片,&nbsp;你應當輸入一個&nbsp;2&nbsp;&nbsp;<BR>
進&nbsp;<BR>
制塊而不是&nbsp;BITMAP&nbsp;對像.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;pack_fclose(PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_fseek(PACKFILE&nbsp;*f,&nbsp;int&nbsp;offset);&nbsp;<BR>
int&nbsp;pack_feof(PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_ferror(PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_getc(PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_putc(int&nbsp;c,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_igetw(PACKFILE&nbsp;*f);&nbsp;<BR>
long&nbsp;pack_igetl(PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_iputw(int&nbsp;w,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
long&nbsp;pack_iputl(long&nbsp;l,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_mgetw(PACKFILE&nbsp;*f);&nbsp;<BR>
long&nbsp;pack_mgetl(PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_mputw(int&nbsp;w,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
long&nbsp;pack_mputl(long&nbsp;l,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
long&nbsp;pack_fread(void&nbsp;*p,&nbsp;long&nbsp;n,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
long&nbsp;pack_fwrite(void&nbsp;*p,&nbsp;long&nbsp;n,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
char&nbsp;*pack_fgets(char&nbsp;*p,&nbsp;int&nbsp;max,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
int&nbsp;pack_fputs(char&nbsp;*p,&nbsp;PACKFILE&nbsp;*f);&nbsp;<BR>
&nbsp;<BR>
這所有的都和&nbsp;stdio&nbsp;函數工作相同,&nbsp;除了&nbsp;pack_fread()&nbsp;和&nbsp;pack_fwrite()&nbsp;只需要單個&nbsp;<BR>
的&nbsp;<BR>
size&nbsp;參數以取代&nbsp;愚蠢的&nbsp;size&nbsp;和&nbsp;num_elements&nbsp;方式,&nbsp;而且定位僅支持相對當前位置的&nbsp;<BR>
前&nbsp;<BR>
移運動.&nbsp;pack_i*&nbsp;和&nbsp;pack_m*&nbsp;例程分別使用&nbsp;Intel&nbsp;和&nbsp;Motorola&nbsp;字節次序系統&nbsp;<BR>
(endianness)&nbsp;讀寫&nbsp;16&nbsp;和&nbsp;32&nbsp;位值.&nbsp;注意當讀取壓縮文件時定位操作非常的慢,&nbsp;因此當&nbsp;<BR>
你&nbsp;<BR>
不能確認文件是沒有壓縮的時應盡量避免這個操作.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
PACKFILE&nbsp;*pack_fopen_chunk(PACKFILE&nbsp;*f,&nbsp;int&nbsp;pack);&nbsp;<BR>
打開文件的子塊,&nbsp;塊主要是為數據文件使用而設計,&nbsp;但是它們也可以用在你自己的文件例&nbsp;<BR>
程&nbsp;<BR>
中.&nbsp;一個塊提供的文件的一部分的邏輯形式,&nbsp;它可以作為一個獨立實體壓縮並將自動插入&nbsp;<BR>
,&nbsp;<BR>
檢查長度記數可以阻止讀到塊外去.&nbsp;使用下面的代碼寫塊到文件&nbsp;f:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;假定&nbsp;f&nbsp;是一個&nbsp;PACKFILE&nbsp;*&nbsp;它以寫模式打開&nbsp;*/&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;pack_fopen_chunk(f,&nbsp;pack);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write&nbsp;some&nbsp;data&nbsp;to&nbsp;f&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;pack_fclose_chunk(f);&nbsp;<BR>
&nbsp;<BR>
寫入塊的數據將由兩個長度記數預處理&nbsp;(32&nbsp;位,&nbsp;big-endian).&nbsp;對不壓縮的塊這兩個將被&nbsp;<BR>
設&nbsp;<BR>
置為塊中數據的大小.&nbsp;對壓縮的塊&nbsp;(設置了&nbsp;pack&nbsp;標誌而創建的),&nbsp;第一個長度將設為實&nbsp;<BR>
際&nbsp;<BR>
的塊長度,&nbsp;第二個將設為壓縮前的數據長度的負值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
讀取快,&nbsp;使用代碼:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;假定&nbsp;f&nbsp;是一個&nbsp;PACKFILE&nbsp;*&nbsp;它被以讀模式打開&nbsp;*/&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;pack_fopen_chunk(f,&nbsp;FALSE);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read&nbsp;data&nbsp;from&nbsp;f&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;pack_fclose_chunk(f);&nbsp;<BR>
&nbsp;<BR>
順序是先讀塊建立時的長度記數,&nbsp;如果它被壓縮了就自動解壓縮.&nbsp;長度也是用來阻止讀到&nbsp;<BR>
塊&nbsp;<BR>
以外&nbsp;(如果你試圖幹這個,&nbsp;Allegro&nbsp;將返回&nbsp;EOF),&nbsp;當你調用&nbsp;pack_fclose_chunk()&nbsp;時自&nbsp;<BR>
動&nbsp;<BR>
的忽略掉任何沒有讀的塊數據.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
塊可以被重複調用&nbsp;pack_fopen_chunk()&nbsp;來遞歸處理.&nbsp;當寫向一個文件,&nbsp;壓縮狀態將從父&nbsp;<BR>
文&nbsp;<BR>
件繼承,&nbsp;因此你僅僅只需在父文件沒壓縮但你想壓縮塊數據時才需要設置&nbsp;pack&nbsp;標誌.&nbsp;如&nbsp;<BR>
果&nbsp;<BR>
父文件已經由壓縮模式打開了,&nbsp;設置&nbsp;pack&nbsp;標誌將使數據壓縮兩次:&nbsp;一次是寫向塊,&nbsp;又一&nbsp;<BR>
次&nbsp;<BR>
是在塊傳到父文件後.&nbsp;&nbsp;<BR>
&nbsp;<BR>
PACKFILE&nbsp;*pack_fclose_chunk(PACKFILE&nbsp;*f);&nbsp;<BR>
關閉前面由調用&nbsp;pack_fopen_chunk()&nbsp;打開的文件中的子塊.&nbsp;&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;(無本地文件下栽)&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;&nbsp;<BR>
<A HREF="http://www.netease.comn/~cloudwu">http://www.netease.comn/~cloudwu</A>&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000044.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000046.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>