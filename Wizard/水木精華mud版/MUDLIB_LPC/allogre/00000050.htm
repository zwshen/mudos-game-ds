<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中譯文檔(GUI&nbsp;例程下)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;21:00:03&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
GUI&nbsp;例程&nbsp;(下)&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_mouse_focus&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_fg_color&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_bg_color&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_mg_color&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_font_baseline&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_mouse_x&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_mouse_y&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_mouse_b&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_textout&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gui_strlen&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;centre_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_dialog_color&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find_dialog_focus&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialog_message&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;broadcast_dialog_message&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;popup_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;init_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shutdown_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;active_dialog&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do_menu&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;active_menu&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert3&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file_select&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gfx_mode_select&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gfx_mode_select_ex&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
對話管理程序的行為可由下列變量控制.&nbsp;&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;gui_mouse_focus;&nbsp;<BR>
設置該變量後,輸入焦點將所鼠標箭頭的移動而移動,&nbsp;否則需點擊鼠標鍵來改變輸入焦點&nbsp;<BR>
.&nbsp;&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;gui_fg_color,&nbsp;gui_bg_color;&nbsp;<BR>
標準對話的前景和後景色(警報,菜單,和文件選擇器).省缺值為&nbsp;255&nbsp;和&nbsp;0.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;gui_mg_color;&nbsp;<BR>
用來顯示灰色化的對話對像(標注了D_DISABLE標記)的顏色.省缺值為8.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;gui_font_baseline;&nbsp;<BR>
如果設置成一個非零值,則將鍵盤快捷鍵的下劃線,&nbsp;按字體的下行字母的高度進行調整.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;int&nbsp;(*gui_mouse_x)();&nbsp;<BR>
extern&nbsp;int&nbsp;(*gui_mouse_y)();&nbsp;<BR>
extern&nbsp;int&nbsp;(*gui_mouse_b)();&nbsp;<BR>
溝通函數&nbsp;,&nbsp;無論何時當&nbsp;GUI&nbsp;例程需要控制鼠標狀態時都會調用.&nbsp;缺省這些返回&nbsp;&nbsp;<BR>
mouse_x,&nbsp;<BR>
mouse_y,&nbsp;和&nbsp;mouse_b&nbsp;變量的拷貝,&nbsp;但是他們用來偏移或量取鼠標坐標,&nbsp;或者從完全不同&nbsp;<BR>
的&nbsp;<BR>
源來讀輸入.&nbsp;&nbsp;<BR>
&nbsp;<BR>
用戶可由提供改變全局的'font'指針來使GUI對像使用標注8x8字體以外的字體.&nbsp;標準對話&nbsp;<BR>
過&nbsp;<BR>
程程序和警告框可以使用任何大小的字體,&nbsp;&nbsp;<BR>
&nbsp;<BR>
但&nbsp;file_select()&nbsp;和&nbsp;gfx_mode_select()&nbsp;對話只能使用8x8的字體.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;gui_textout(BITMAP&nbsp;*bmp,&nbsp;unsigned&nbsp;char&nbsp;*s,&nbsp;int&nbsp;x,&nbsp;y,&nbsp;color,&nbsp;centre);&nbsp;<BR>
GUI&nbsp;程序所使用的幫助函數.該函數將在屏幕上顯示文本字符串,&nbsp;並將'&amp;'解釋成鍵盤快捷&nbsp;<BR>
鍵&nbsp;<BR>
的下劃線.該函數返回輸出字符串的像素寬度.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;gui_strlen(unsigned&nbsp;char&nbsp;*s);&nbsp;<BR>
幫助函數.&nbsp;返回一個字符串的像素寬度.忽略'&amp;'字符.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;centre_dialog(DIALOG&nbsp;*dialog);&nbsp;<BR>
移動一組對話對像,使其在屏幕上居中.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;set_dialog_color(DIALOG&nbsp;*dialog,&nbsp;int&nbsp;fg,&nbsp;int&nbsp;bg);&nbsp;<BR>
為一組對話對像設置前景和後景色.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;find_dialog_focus(DIALOG&nbsp;*dialog);&nbsp;<BR>
在對話中尋找擁有輸入焦點的對話對像,如果找到則返回該對像的索引值,&nbsp;否則返回-1.該&nbsp;<BR>
函&nbsp;<BR>
數對那些多次調用&nbsp;do_dialog()&nbsp;&nbsp;<BR>
&nbsp;<BR>
並且想保持輸入焦點不變的用戶十分有用.比如用戶可這樣調用該函數&nbsp;do_dialog(dlg,&nbsp;<BR>
find_dialog_focus(dlg));&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;dialog_message(DIALOG&nbsp;*dialog,&nbsp;int&nbsp;msg,&nbsp;int&nbsp;c,&nbsp;int&nbsp;*obj);&nbsp;<BR>
項一組對像發送消息.如果任何一個對話過程函數返回一個D_O_K以外的值,&nbsp;它將返回該值&nbsp;<BR>
並&nbsp;<BR>
且將obj設置成該對像的索引.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;broadcast_dialog_message(int&nbsp;msg,&nbsp;int&nbsp;c);&nbsp;<BR>
向一個活動對話中的所有對像發送一條消息.&nbsp;如果任何一個對話過程函數返回非D_O_K值,&nbsp;<BR>
則&nbsp;<BR>
它返回該值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;do_dialog(DIALOG&nbsp;*dialog,&nbsp;int&nbsp;focus_obj);&nbsp;<BR>
基本對話管理程序函數.該函數將顯示一個對話(一組對話對像,&nbsp;有其中包含NULL的對話過&nbsp;<BR>
程&nbsp;<BR>
函數結),並且將輸入焦點設置給focus_obj&nbsp;(如果用戶不想讓任何對像擁有輸入焦點則向&nbsp;<BR>
&nbsp;<BR>
focus_obj傳遞-1).&nbsp;該函數解釋用戶的輸入並向對像發送消息,&nbsp;直到其中的一個對話過程&nbsp;<BR>
函&nbsp;<BR>
數要求關閉對話,這時它將返回關閉對話的對像的索引值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;popup_dialog(DIALOG&nbsp;*dialog,&nbsp;int&nbsp;focus_obj);&nbsp;<BR>
功能與do_dialog()基本相同,不同之處在於它將保存屏幕上的數據,&nbsp;並且在對話關閉後將&nbsp;<BR>
其&nbsp;<BR>
恢復.&nbsp;被恢復的屏幕區域尺寸是根據對話中的第一個對像的大小來決定,&nbsp;所以其他對像應&nbsp;<BR>
當&nbsp;<BR>
位於該對像之中.&nbsp;&nbsp;<BR>
&nbsp;<BR>
DIALOG_PLAYER&nbsp;*init_dialog(DIALOG&nbsp;*dialog,&nbsp;int&nbsp;focus_obj);&nbsp;<BR>
該函是一個底層函數.它提供與do_dialog()像素的功能,&nbsp;並且容許用戶將一個對話框與自&nbsp;<BR>
己&nbsp;<BR>
定義的程序控制結構關聯在一起.&nbsp;該函數初始化一個對話,返回一個指向可被&nbsp;<BR>
update_dialog&nbsp;<BR>
和shutdown_dialog()使用的對像.&nbsp;有了這些函數用戶可編寫自己的do_dialog()函數.如&nbsp;<BR>
下&nbsp;<BR>
所示:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;*player&nbsp;=&nbsp;init_dialog(dialog,&nbsp;focus_obj);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(update_dialog(player))&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;shutdown_dialog(player);&nbsp;<BR>
&nbsp;<BR>
int&nbsp;update_dialog(DIALOG_PLAYER&nbsp;*player);&nbsp;<BR>
更新由init_dialog()函數返回的對像的狀態.&nbsp;如果該對話是活動的則返回TRUE,如果被關&nbsp;<BR>
閉&nbsp;<BR>
則返回FALSE,&nbsp;是調用shutdown_dialog()還是繼續執行由用戶決定.&nbsp;&nbsp;<BR>
&nbsp;<BR>
可從player-&gt;obj域判斷哪個對像請求關閉對話.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;shutdown_dialog(DIALOG_PLAYER&nbsp;*player);&nbsp;<BR>
撤銷一個由init_dialog()函數返回的使用者對像(player&nbsp;object),&nbsp;並且返回關閉對話的&nbsp;<BR>
對&nbsp;<BR>
像(與do_dialog()的返回值相同).&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;DIALOG&nbsp;*active_dialog;&nbsp;<BR>
全局指針,指向最近活動對話.這對一個要掃描其所有同胞對像的對像十分有用.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
彈出式和下拉式菜單是有一組結構來定義的.&nbsp;&nbsp;<BR>
&nbsp;<BR>
typedef&nbsp;struct&nbsp;MENU&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;char&nbsp;*text;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;菜單桑顯示的條目&nbsp;<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;(*proc)();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;當菜單項被點後調用的函數&nbsp;<BR>
&nbsp;&nbsp;&nbsp;struct&nbsp;MENU&nbsp;*child;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;子菜單組&nbsp;<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;flags;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;關閉或選擇的狀態&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;*dp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;指向你需要的任何數據&nbsp;<BR>
}&nbsp;MENU;&nbsp;<BR>
&nbsp;<BR>
任何一個菜單項都有一個文本字符串,&nbsp;用戶可用'&amp;'字符來定義一個快捷鍵或一個空字符&nbsp;<BR>
串&nbsp;<BR>
來表示一個不可選的分割條.&nbsp;如果該字符串包含一個&quot;\t&quot;制表符,則其後的文本將被右對&nbsp;<BR>
齊&nbsp;<BR>
以便用來顯示快捷鍵信息.&nbsp;proc是一個函數指針,&nbsp;該函數在菜單項選中後被調用.&nbsp;child&nbsp;<BR>
參&nbsp;<BR>
數指向另一個菜單,&nbsp;用戶可通過它創建內嵌式菜單.&nbsp;proc和child都可以為NULL.&nbsp;proc&nbsp;指&nbsp;<BR>
向&nbsp;<BR>
的函數返回一個整數值,&nbsp;如果菜單是通過do_menu()來創建的則該返回值被忽略,&nbsp;如果菜&nbsp;<BR>
單&nbsp;<BR>
是通過d_menu_proc()對像創建的則該返回值被傳給對話管理程序.&nbsp;該組菜單項將被一個&nbsp;<BR>
包&nbsp;<BR>
含&nbsp;NULL&nbsp;文本指針的項目關閉.&nbsp;菜單項可通過在flags域設置&nbsp;D_DISABLED&nbsp;標記來被禁止(&nbsp;<BR>
灰&nbsp;<BR>
色顯示).&nbsp;通過設置D_SELECTED標記可在菜單項旁邊顯示一個復選標記.&nbsp;在省缺對齊方式&nbsp;<BR>
和&nbsp;<BR>
字體下這將使復選標記和菜單文本重疊,&nbsp;所以在使用帶復選標記的菜單項時,&nbsp;最好在菜單&nbsp;<BR>
文&nbsp;<BR>
本前輸入兩個空格符以便正確顯示復選標記.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;do_menu(MENU&nbsp;*menu,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;<BR>
在指定屏幕坐標顯示並激活一個彈出菜單&nbsp;(如果菜單大小不能完全適合屏幕,該函數將會&nbsp;<BR>
對&nbsp;<BR>
其進行調整).&nbsp;返回選中菜單項的索引,或者返回-1如果該菜單項被取消.&nbsp;注意該函數不能&nbsp;<BR>
返&nbsp;<BR>
回子菜單項是否被選中.所以,&nbsp;如果用戶想使用多級菜單則必須自己調用回調函數.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;MENU&nbsp;*active_menu;&nbsp;<BR>
當一個菜單回調函數被調用時,它將被設置給選中的菜單項,&nbsp;如此用戶的程序就可以知道&nbsp;<BR>
它&nbsp;<BR>
是在何處被調用.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;alert(char&nbsp;*s1,&nbsp;*s2,&nbsp;*s3,&nbsp;char&nbsp;*b1,&nbsp;*b2,&nbsp;int&nbsp;c1,&nbsp;c2);&nbsp;<BR>
顯示一個擁有3個文本行(s1-s3),和一到兩個按鈕的彈出式報警框.&nbsp;按鈕上的文本是通過&nbsp;<BR>
b1&nbsp;<BR>
和b2參數來傳遞的(b2可為&nbsp;NULL),&nbsp;快捷鍵是通過c1和c2來定義的.返回值&nbsp;1&nbsp;或&nbsp;2&nbsp;與按下&nbsp;<BR>
那&nbsp;<BR>
個按鈕有關.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
如果通過按下ESC鍵來解除報警(這時ESC不是快捷鍵),&nbsp;與按下第二個按鈕效果一樣(這與&nbsp;<BR>
&nbsp;<BR>
&quot;OK&quot;,&quot;Cancel&quot;報警框相同).&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;alert3(char&nbsp;*s1,&nbsp;*s2,&nbsp;*s3,&nbsp;char&nbsp;*b1,&nbsp;*b2,&nbsp;*b3,&nbsp;int&nbsp;c1,&nbsp;c2,&nbsp;c3);&nbsp;<BR>
與alert()相似,但是有三個按鈕返回1,2,3三個值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;file_select(char&nbsp;*message,&nbsp;char&nbsp;*path,&nbsp;char&nbsp;*ext);&nbsp;<BR>
顯示Allegro文件選擇器,並用message所指向的字符串作為標題欄.&nbsp;path參數是初始顯示&nbsp;<BR>
的&nbsp;<BR>
文件名(它可以被用來作起始目錄,&nbsp;或為save-as操作提供省缺文件名).用戶選擇的目錄長&nbsp;<BR>
短&nbsp;<BR>
不一,&nbsp;所以至少要有80個字符的空間.&nbsp;放在文件選擇器中的文件是根據ext參數所指定的&nbsp;<BR>
文&nbsp;<BR>
件擴展名決定的,&nbsp;將&nbsp;ext&nbsp;參數設置成NULL則表明在文件選擇器中放入所有文件.&nbsp;如&nbsp;<BR>
&quot;PCX;BMP&quot;&nbsp;將只裝入&nbsp;.PCX&nbsp;和&nbsp;.BMP文件.&nbsp;如果用戶選擇取消鍵該函數返回零值,如果選擇&nbsp;<BR>
OK&nbsp;<BR>
鍵該函數返回一個非零值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;gfx_mode_select(int&nbsp;*card,&nbsp;int&nbsp;*w,&nbsp;int&nbsp;*h);&nbsp;<BR>
顯示Allegro圖像模式選擇對話,通過它用戶可以選擇屏幕模式和顯示卡.&nbsp;在3個參數中存&nbsp;<BR>
放&nbsp;<BR>
用戶的選擇.如果用戶選擇取消鍵該函數返回零值,&nbsp;如果選擇OK鍵該函數返回非零值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;gfx_mode_select_ex(int&nbsp;*card,&nbsp;int&nbsp;*w,&nbsp;int&nbsp;*h,&nbsp;int&nbsp;*color_depth);&nbsp;<BR>
圖像模式選擇對話的擴充版本.&nbsp;它准許用戶在選擇分辨率和硬件驅動程序的同時選擇顏色&nbsp;<BR>
深&nbsp;<BR>
度.&nbsp;該函數在對話被激活時將從參數中讀取初始值,所以用戶可通過參數來設置省缺值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;(無本地文件下栽)&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;&nbsp;<BR>
<A HREF="http://www.netease.comn/~cloudwu">http://www.netease.comn/~cloudwu</A>&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000049.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000051.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>