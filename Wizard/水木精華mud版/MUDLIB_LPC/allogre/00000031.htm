<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中譯文檔(塊復制和精靈)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;20:54:29&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
塊復制(Blitting)&nbsp;和精靈&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clear&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clear_to_color&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;blit&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;masked_blit&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stretch_blit&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite_v_flip&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite_h_flip&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite_vh_flip&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_trans_sprite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_lit_sprite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_gouraud_sprite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_character&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotate_sprite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotate_scaled_sprite&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stretch_sprite&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
所有的這些例程都將被目標位圖的剪裁矩形所影響.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;clear(bitmap);&nbsp;<BR>
將位圖全部清為顏色&nbsp;0.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;clear_to_color(BITMAP&nbsp;*bitmap,&nbsp;int&nbsp;color);&nbsp;<BR>
用指定的顏色清位圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;blit(BITMAP&nbsp;*source,&nbsp;BITMAP&nbsp;*dest,&nbsp;int&nbsp;source_x,&nbsp;int&nbsp;source_y,&nbsp;int&nbsp;dest_x,&nbsp;int&nbsp;dest_y,&nbsp;int&nbsp;<BR>
width,&nbsp;int&nbsp;height);&nbsp;<BR>
從源位圖復制一個矩形區域到目標位圖.&nbsp;參數&nbsp;source_x&nbsp;和&nbsp;source_y&nbsp;是將復制的源位圖上&nbsp;<BR>
的部分的左上角,&nbsp;dest_x&nbsp;和&nbsp;dest_y&nbsp;是&nbsp;目標位圖上的坐標.&nbsp;這個例程將考慮&nbsp;目標位圖的&nbsp;<BR>
剪裁矩形,&nbsp;如果你試圖復制一個源位圖外的區域同樣也將做剪裁處理.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
你可以在任兩個位圖間復制,&nbsp;甚至是兩個重疊的內存位圖&nbsp;(即,&nbsp;來源和目標是相同的,&nbsp;或者&nbsp;<BR>
一個是另一個的子位圖).&nbsp;然而,你應當注意的是,許多&nbsp;SVGA&nbsp;卡不提供&nbsp;分開的讀寫窗,&nbsp;這就&nbsp;<BR>
是說從屏幕的一個部分復制到另一部分時&nbsp;需要使用一個在內存裡的臨時位圖,&nbsp;這樣將極其&nbsp;<BR>
的慢.&nbsp;因此一個普遍的規則是&nbsp;你應當避免在&nbsp;SVGA&nbsp;模式下的屏幕本身的復制.&nbsp;&nbsp;<BR>
&nbsp;<BR>
另一方面,在&nbsp;mode-X&nbsp;下,&nbsp;從屏幕的一個部分復制到另一部分&nbsp;可以比從內存到屏幕的復制出&nbsp;<BR>
奇的快,&nbsp;只要源部分和目標部分正確的對齊.&nbsp;在重疊的屏幕矩形間復制很慢,但是如果&nbsp;區域&nbsp;<BR>
不重疊,&nbsp;而且它們有相同的面位置(plane&nbsp;alignment)&nbsp;(即:&nbsp;(source_x%4)&nbsp;==&nbsp;<BR>
(dest_x%4)),&nbsp;VGA&nbsp;門鎖(latch)寄存器可以被用來做&nbsp;很快的數據傳輸.&nbsp;為了得到這個優勢,&nbsp;<BR>
在&nbsp;mode-X&nbsp;下經常值得在&nbsp;顯存的隱藏區域儲存磚塊圖片(使用一個大的&nbsp;虛擬屏幕),&nbsp;然後再&nbsp;<BR>
將它們復制到可顯的屏幕上.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
如果&nbsp;gfx_capabilite&nbsp;標誌的&nbsp;GFX_HW_VRAM_BLIT&nbsp;位被設置,&nbsp;當前的驅動程序支持從屏幕的&nbsp;<BR>
一部分&nbsp;blit&nbsp;到另一部分的硬件加速.&nbsp;這極其的快,&nbsp;因此當這個標誌被設置了,&nbsp;將你最常用&nbsp;<BR>
的圖形放才顯存的屏幕以外的位置是很有價值的.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
不像所有的圖形例程,&nbsp;blit()&nbsp;允許源位圖和目標&nbsp;位圖有不同的顏色深度,&nbsp;所以它可以被用&nbsp;<BR>
來&nbsp;在兩種點格式之間轉換.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;masked_blit(BITMAP&nbsp;*source,&nbsp;BITMAP&nbsp;*dest,&nbsp;int&nbsp;source_x,&nbsp;int&nbsp;source_y,&nbsp;int&nbsp;dest_x,&nbsp;int&nbsp;dest_y,&nbsp;<BR>
int&nbsp;width,&nbsp;int&nbsp;height);&nbsp;<BR>
像&nbsp;blit()&nbsp;那樣,&nbsp;但是忽略透明點&nbsp;(&nbsp;在&nbsp;256&nbsp;色模式下是&nbsp;0,&nbsp;真彩數據裡是亮點).&nbsp;源圖片&nbsp;<BR>
必須是內存位圖或它的子位圖,&nbsp;並且源圖和目標圖區域絕對不能重疊.&nbsp;&nbsp;<BR>
&nbsp;<BR>
當&nbsp;gfx_capabilite&nbsp;的&nbsp;GFX_HW_VRAM_BLIT_MASKED&nbsp;位被設置,&nbsp;當前的驅動程序支持從屏幕&nbsp;<BR>
的一部分到另一部分的掩式&nbsp;blit&nbsp;硬件加速.&nbsp;這極其的快,&nbsp;因此當這個標誌被設置了,&nbsp;將你&nbsp;<BR>
最常用的圖形放才顯存的屏幕以外的位置是很有價值的.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
警告:&nbsp;如果硬件加速標誌沒有被設置,&nbsp;masked_blit()&nbsp;在源圖是顯存位圖時將工作不正常,&nbsp;<BR>
輸入圖形必須永遠是內存位圖!&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;stretch_blit(BITMAP&nbsp;*source,&nbsp;BITMAP&nbsp;*dest,&nbsp;int&nbsp;source_x,&nbsp;source_y,&nbsp;source_width,&nbsp;<BR>
source_height,&nbsp;int&nbsp;dest_x,&nbsp;dest_y,&nbsp;dest_width,&nbsp;dest_height);&nbsp;<BR>
像&nbsp;blit()&nbsp;那樣,&nbsp;不過它還可以調整圖片的比例因此源圖和目標圖&nbsp;可以有不同的大小.這個&nbsp;<BR>
例程沒有像常規的復制&nbsp;那樣做常規的安全檢查:&nbsp;你必須特別小心&nbsp;不要復制源圖以外的區&nbsp;<BR>
域,&nbsp;而且你不能&nbsp;在重疊區域間復制,&nbsp;即你必須將源圖和目標圖使用不同的位圖.&nbsp;同樣,&nbsp;源&nbsp;<BR>
圖必須是內存位圖或它的子位圖,&nbsp;不能是硬件屏幕.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;draw_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y);&nbsp;<BR>
畫一個精靈位圖到目標位圖的&nbsp;指定位置.這完全和&nbsp;blit(sprite,&nbsp;bmp,&nbsp;0,&nbsp;0,&nbsp;x,&nbsp;y,&nbsp;<BR>
sprite-&gt;w,&nbsp;sprite-&gt;h)&nbsp;相同,&nbsp;但是它使用了掩式繪圖模式,&nbsp;透明&nbsp;點被忽略,&nbsp;因此背景圖&nbsp;<BR>
片將透過精靈被顯示.&nbsp;透明點在&nbsp;256&nbsp;色模式下是&nbsp;0,&nbsp;在真彩數據中是亮粉紅點&nbsp;(紅值藍值&nbsp;<BR>
最大,&nbsp;綠值為零).&nbsp;&nbsp;<BR>
&nbsp;<BR>
如果&nbsp;gfx_capability&nbsp;標誌裡的&nbsp;GFX_HW_VRAM_BLIT_MASKED&nbsp;位被設置,&nbsp;當源圖是顯存位圖&nbsp;<BR>
或屏幕子位圖時,&nbsp;當前驅動程序支持硬件加速.&nbsp;&nbsp;<BR>
&nbsp;<BR>
這及其的快,&nbsp;因此如果這個標誌被設置,&nbsp;你才顯存中屏幕以外的位置存放些極其常用的精靈&nbsp;<BR>
將很有價值.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
警告:&nbsp;如果硬件加速標誌沒有被設置,&nbsp;draw_sprite()&nbsp;在使用顯存位圖做源位圖時將工作不&nbsp;<BR>
正常,&nbsp;輸入圖形必須總是內存位圖!&nbsp;&nbsp;<BR>
&nbsp;<BR>
雖然一般不支持混合顏色深度圖形,&nbsp;但&nbsp;由於特殊的原因,&nbsp;這個函數能用來將&nbsp;256&nbsp;色源圖畫&nbsp;<BR>
在&nbsp;真彩目標圖上,&nbsp;因此你可以在真彩程序裡的指定精靈上使用調色板效果.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;draw_sprite_v_flip(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y);&nbsp;<BR>
void&nbsp;draw_sprite_h_flip(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y);&nbsp;<BR>
void&nbsp;draw_sprite_vh_flip(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y);&nbsp;<BR>
這些像&nbsp;draw_sprite(),&nbsp;但是它們翻折圖片,可以是縱向的,&nbsp;橫向的,&nbsp;對角線的軸變換.&nbsp;這&nbsp;<BR>
個產生了精確的鏡像圖片,&nbsp;但它和&nbsp;旋轉精靈不同&nbsp;(它比旋轉例程要快的多).&nbsp;精靈必須是內&nbsp;<BR>
存位圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;draw_trans_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y);&nbsp;<BR>
使用一個全局色彩映射表或真彩色混合函數來將一個&nbsp;精靈覆蓋在存在的圖片上面.&nbsp;這個必&nbsp;<BR>
須在你&nbsp;已經設置了顏色映射表&nbsp;(&nbsp;256&nbsp;色模式)&nbsp;或混合映射表&nbsp;(真彩模式)&nbsp;後才能使用.&nbsp;因&nbsp;<BR>
為它在寫圖時還牽扯了讀操作,&nbsp;如果你直接向顯存畫半透明效果,將非常的慢,&nbsp;因此無論何&nbsp;<BR>
地有可能的話你都應當使用內存位圖來代替屏幕位圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;draw_lit_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color);&nbsp;<BR>
使用全局色彩映射表向指定色彩或亮度級過度精靈圖片,&nbsp;將算出的圖片畫到目標位圖上.&nbsp;這&nbsp;<BR>
個必須在你設置了顏色映射表&nbsp;(256&nbsp;色模式)&nbsp;或&nbsp;混合映射表(真彩模式)&nbsp;後才能使用.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;draw_gouraud_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;c1,&nbsp;int&nbsp;c2,&nbsp;int&nbsp;c3,&nbsp;int&nbsp;c4);&nbsp;<BR>
將精靈向指定的顏色或光度過度,&nbsp;從四角顏色添入圖形的表面.&nbsp;這必須在&nbsp;你已經設置了顏&nbsp;<BR>
色映射表&nbsp;(&nbsp;256&nbsp;色模式)&nbsp;或混合映射表&nbsp;(真彩模式)&nbsp;後才能使用.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;draw_character(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color);&nbsp;<BR>
將精靈位圖畫在位圖的指定&nbsp;位置上,&nbsp;將透明點以當前文字模式畫&nbsp;(如果文字模式是&nbsp;-1&nbsp;則&nbsp;<BR>
忽略,&nbsp;否則以文字背景顏色畫),&nbsp;並且將所有其它的點畫成指定的顏色.&nbsp;透明點為&nbsp;256&nbsp;色模&nbsp;<BR>
式下的零或&nbsp;真彩數據中的亮粉紅&nbsp;(&nbsp;紅藍值最大,&nbsp;綠值為零).&nbsp;精靈必須是&nbsp;8&nbsp;位圖片,&nbsp;即使&nbsp;<BR>
目標位圖是真彩位圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;rotate_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;fixed&nbsp;angle);&nbsp;<BR>
旋轉位圖一個指定的角度,將它畫在位圖的指定位置.&nbsp;角度是一個&nbsp;16.16&nbsp;的定點數.&nbsp;這個定&nbsp;<BR>
點數和&nbsp;定點數三角例程中的一樣,&nbsp;256&nbsp;等於&nbsp;整圈,&nbsp;64&nbsp;是直角,&nbsp;等等.&nbsp;精靈必須是內存位&nbsp;<BR>
圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;rotate_scaled_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;fixed&nbsp;angle,&nbsp;fixed&nbsp;scale);&nbsp;<BR>
像&nbsp;rotate_sprite()&nbsp;相同,&nbsp;但是在旋轉的同時還做拉扯或壓縮的操作.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;stretch_sprite(BITMAP&nbsp;*bmp,&nbsp;BITMAP&nbsp;*sprite,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h);&nbsp;<BR>
將精靈圖片畫在位圖的指定位置,&nbsp;拉扯它到指定的寬度和高度.&nbsp;stretch_sprite()&nbsp;和&nbsp;<BR>
stretch_blit()&nbsp;的不同之處在於&nbsp;stretch_sprite()&nbsp;去掉&nbsp;了透明點,&nbsp;在&nbsp;256&nbsp;色模式下是&nbsp;<BR>
0,&nbsp;真彩數據中的亮粉紅色&nbsp;(紅和藍值為最大,&nbsp;綠值為&nbsp;0).&nbsp;&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://www.nease.net/~cloudwu">http://www.nease.net/~cloudwu</A>&nbsp;(暫時不能更新)&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000030.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000032.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>