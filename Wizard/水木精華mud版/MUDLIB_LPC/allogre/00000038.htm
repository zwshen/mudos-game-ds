<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中譯文檔(直接控制顯存)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;20:55:39&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
直接控制顯存&nbsp;<BR>
&nbsp;<BR>
位圖結構看起來是這樣的:&nbsp;&nbsp;<BR>
&nbsp;<BR>
typedef&nbsp;struct&nbsp;BITMAP&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;w,&nbsp;h;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;以點為單位的位圖大小&nbsp;<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;clip;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;如果剪裁打開了,它為一非零值&nbsp;<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;cl,&nbsp;cr,&nbsp;ct,&nbsp;cb;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;剪裁矩形左,右,上,下&nbsp;<BR>
&nbsp;&nbsp;&nbsp;int&nbsp;seg;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;行指針用到的段&nbsp;<BR>
&nbsp;&nbsp;&nbsp;unsigned&nbsp;char&nbsp;*line[];&nbsp;&nbsp;-&nbsp;每一行的開始指針數組&nbsp;<BR>
}&nbsp;BITMAP;&nbsp;<BR>
&nbsp;<BR>
結構裡還有些其它的東東,&nbsp;但是不能隨便的改變,&nbsp;你不能使用除上面外的任何東東.&nbsp;剪裁&nbsp;<BR>
矩&nbsp;<BR>
形&nbsp;包括了上和左邊界&nbsp;(0&nbsp;允許畫到位置&nbsp;0)&nbsp;但是排除了下和右邊界(10&nbsp;允許畫到位置&nbsp;&nbsp;<BR>
9,&nbsp;<BR>
不是&nbsp;10).&nbsp;注意它和你傳入&nbsp;set_clip()&nbsp;的格式不同,&nbsp;那個包括了所有四個邊界.&nbsp;&nbsp;<BR>
&nbsp;<BR>
有好幾種方法來控制位圖的用到的內存,&nbsp;根據你使用的位圖類型而有很大的不同.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
最容易的是只工作在內存位圖上&nbsp;(從&nbsp;create_bitmap(),&nbsp;grabber&nbsp;的&nbsp;數據文件,&nbsp;和圖片&nbsp;<BR>
文&nbsp;<BR>
件得到的)&nbsp;和內存位圖的&nbsp;子位圖.&nbsp;這個使用了一個&nbsp;char&nbsp;指針的表,&nbsp;被稱做&nbsp;'line',&nbsp;它&nbsp;<BR>
是&nbsp;<BR>
位圖結構的一部分,&nbsp;包含了圖片每一行的開始指針.&nbsp;例如,&nbsp;一個簡單的內存位圖的&nbsp;<BR>
putpixel&nbsp;函數是:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;memory_putpixel(BITMAP&nbsp;*bmp,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bmp-&gt;line[y][x]&nbsp;=&nbsp;color;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
真彩模式下你將&nbsp;line&nbsp;指針設置成合適的類型,&nbsp;例如:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;memory_putpixel_15_or_16_bpp(BITMAP&nbsp;*bmp,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((short&nbsp;*)bmp-&gt;line[y])[x]&nbsp;=&nbsp;color;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;memory_putpixel_32(BITMAP&nbsp;*bmp,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((long&nbsp;*)bmp-&gt;line[y])[x]&nbsp;=&nbsp;color;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
如果你想像操作內存位圖那樣寫向屏幕,&nbsp;就需要使用&nbsp;far&nbsp;指針.&nbsp;用&nbsp;sys/farptr.h&nbsp;裡的&nbsp;<BR>
例&nbsp;<BR>
程重寫上面的函數&nbsp;將是得它能使用在屏幕位圖,&nbsp;但是先決條件是不需要塊切換&nbsp;(就是指&nbsp;<BR>
&nbsp;<BR>
13h&nbsp;模式屏幕和線形頁緩衝的&nbsp;SVGA&nbsp;屏幕).&nbsp;使用&nbsp;far&nbsp;指針的&nbsp;putpixel&nbsp;位:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;sys/farptr.h&gt;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;farptr_putpixel(BITMAP&nbsp;*bmp,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_farpokeb(bmp-&gt;seg,&nbsp;(unsigned&nbsp;long)bmp-&gt;line[y]+x,&nbsp;color);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
對於真彩模式,顯而易見的是,你將&nbsp;_farpokeb()&nbsp;換成&nbsp;_farpokew()&nbsp;或&nbsp;_farpokel(),&nbsp;並&nbsp;<BR>
將&nbsp;<BR>
x&nbsp;偏移量乘上每個點的字節數.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
然而這還不能在分塊的&nbsp;SVGA&nbsp;模式下使用.&nbsp;為了繞道控制位圖內存,&nbsp;你需要調用塊切換函&nbsp;<BR>
&nbsp;<BR>
數:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
unsigned&nbsp;long&nbsp;bmp_write_line(BITMAP&nbsp;*bmp,&nbsp;int&nbsp;line);&nbsp;<BR>
選擇你將作圖的位圖行.&nbsp;&nbsp;<BR>
&nbsp;<BR>
unsigned&nbsp;long&nbsp;bmp_read_line(BITMAP&nbsp;*bmp,&nbsp;int&nbsp;line);&nbsp;<BR>
選擇你將讀取的位圖行.&nbsp;&nbsp;<BR>
&nbsp;<BR>
這些是在線彙編寫的例程,&nbsp;因此它們並不像他們看起來的那麼低效率.&nbsp;如果位圖不需要塊&nbsp;<BR>
切&nbsp;<BR>
換,&nbsp;(即:&nbsp;它是一個內存位圖,&nbsp;13h&nbsp;模式屏幕,&nbsp;等等),&nbsp;這些函數只是返回&nbsp;<BR>
bmp-&gt;line[line].&nbsp;&nbsp;<BR>
&nbsp;<BR>
雖然&nbsp;SVGA&nbsp;位圖是分塊的,&nbsp;Allegro&nbsp;提供了每個掃描行的線形控制,&nbsp;因此你僅僅需要將&nbsp;&nbsp;<BR>
y&nbsp;<BR>
軸傳入這些函數.&nbsp;x&nbsp;位置變量可以簡單的將&nbsp;x&nbsp;坐標簡單的加上返回地址得到.&nbsp;返回值是&nbsp;<BR>
一&nbsp;<BR>
個無符號長整形&nbsp;而不是一個字符指針,這是因為位圖內存不一定在你的數據段內,&nbsp;而你需&nbsp;<BR>
要&nbsp;<BR>
用&nbsp;far&nbsp;指針來控制它.&nbsp;例如:&nbsp;使用塊切換的&nbsp;putpixel&nbsp;函數為:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;sys/farptr.h&gt;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;banked_putpixel(BITMAP&nbsp;*b,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned&nbsp;long&nbsp;address&nbsp;=&nbsp;bmp_write_line(bmp,&nbsp;y);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_farpokeb(bmp-&gt;seg,&nbsp;address+x,&nbsp;color);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
你將注意到&nbsp;Allegro&nbsp;提供了分開的讀寫塊的函數.&nbsp;辨認它們對你很重要,&nbsp;因為一些圖形&nbsp;<BR>
卡&nbsp;<BR>
可以分別設置讀寫塊,&nbsp;而在不同的地址讀寫顯存.&nbsp;然而生活從來不像我們希望的那樣簡單&nbsp;<BR>
&nbsp;&nbsp;<BR>
(這可是真理,&nbsp;即使我們&nbsp;_不_&nbsp;去談論圖形編程&nbsp;:-)&nbsp;一些卡僅僅提供單一的塊.&nbsp;在這些卡&nbsp;<BR>
上&nbsp;<BR>
讀寫塊函數&nbsp;將做同樣的時,&nbsp;因此你不能假定你可以&nbsp;從顯存的一部分讀而在同時向另一部&nbsp;<BR>
分&nbsp;<BR>
寫.&nbsp;你可以調用&nbsp;bmp_read_line(),&nbsp;讀你想在這一行讀的任何東東,&nbsp;然後&nbsp;以相同或不同&nbsp;<BR>
的&nbsp;<BR>
行數字調用&nbsp;bmp_write_line()&nbsp;,&nbsp;寫你想在這第二個行上想寫的任何東東,&nbsp;但是你絕對不&nbsp;<BR>
能&nbsp;<BR>
同時調用&nbsp;bmp_read_line()&nbsp;和&nbsp;bmp_write_line()&nbsp;來是你從一行讀而同時寫向另一行.&nbsp;&nbsp;<BR>
如&nbsp;<BR>
果這有可能,很漂亮,&nbsp;但如果你這樣做了,&nbsp;你的代碼就只能工作在單一塊的&nbsp;SVGA&nbsp;卡上了&nbsp;<BR>
.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
下面是&nbsp;mode-X.&nbsp;如果你從來沒有對任何的&nbsp;mode-X&nbsp;圖形編程過,&nbsp;可能你並不理解它,&nbsp;但&nbsp;<BR>
是&nbsp;<BR>
這兒有為&nbsp;想了解&nbsp;Allegro&nbsp;怎樣設置&nbsp;mode-X&nbsp;屏幕位圖的你寫的東東,&nbsp;從這兒開始...&nbsp;&nbsp;<BR>
&nbsp;<BR>
line&nbsp;指針依然有,&nbsp;它們包含了平面地址,&nbsp;即:&nbsp;你控制的行的第一點的實際地址.&nbsp;這些地&nbsp;<BR>
址&nbsp;<BR>
被保證為&nbsp;4&nbsp;對齊,&nbsp;因此你可以將&nbsp;x&nbsp;坐標除以四,&nbsp;加在行指針上,&nbsp;設置為寫平面.&nbsp;例如&nbsp;<BR>
︰<I>&nbsp;</I><BR>
mode-X&nbsp;的&nbsp;putpixel&nbsp;為:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;pc.h&gt;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;sys/farptr.h&gt;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;modex_putpixel(BITMAP&nbsp;*b,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outportw(0x3C4,&nbsp;(0x100&lt;&lt;(x&amp;3))|2);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_farpokeb(bmp-&gt;seg,&nbsp;(unsigned&nbsp;long)bmp-&gt;line[y]+(x&gt;&gt;2),&nbsp;color);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
Oh&nbsp;對了:&nbsp;用&nbsp;nearptr.&nbsp;我個人不是很喜歡這種方式,&nbsp;但是許多人發誓要用它&nbsp;因為它是你&nbsp;<BR>
可&nbsp;<BR>
以通過正規&nbsp;C&nbsp;指針來控制屏幕內存.&nbsp;警告:這個方法只能工作於&nbsp;VGA&nbsp;13h&nbsp;模式和線形頁&nbsp;<BR>
緩&nbsp;<BR>
衝模式!&nbsp;&nbsp;<BR>
&nbsp;<BR>
用你設置的代碼:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;sys/nearptr.h&gt;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;unsigned&nbsp;char&nbsp;*screenmemory;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;unsigned&nbsp;long&nbsp;screen_base_addr;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;__djgpp_nearptr_enable();&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;__dpmi_get_segment_base_address(screen-&gt;seg,&nbsp;&amp;screen_base_addr);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;screenmemory&nbsp;=&nbsp;(unsigned&nbsp;char&nbsp;*)(screen_base_addr&nbsp;+&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;screen-&gt;line[0]&nbsp;-&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__djgpp_base_address);&nbsp;<BR>
&nbsp;<BR>
然後:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;void&nbsp;nearptr_putpixel(int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;color)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;screenmemory[x&nbsp;+&nbsp;y*SCREEN_W]&nbsp;=&nbsp;color;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://www.nease.net/~cloudwu">http://www.nease.net/~cloudwu</A>&nbsp;(暫時不能更新)&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000037.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000039.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>