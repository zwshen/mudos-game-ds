<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;sorceress&nbsp;(李大善人~~~以德服人),&nbsp;信區:&nbsp;Mud_Builder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Allegro&nbsp;中譯文檔(位圖對像)&nbsp;(轉載)&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Jun&nbsp;12&nbsp;20:53:24&nbsp;2000)&nbsp;<BR>
&nbsp;<BR>
【&nbsp;以下文字轉載自&nbsp;GAME_Designer&nbsp;討論區&nbsp;】&nbsp;<BR>
【&nbsp;原文由&nbsp;cloudwu&nbsp;所發表&nbsp;】&nbsp;<BR>
位圖對像&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;screen&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create_bitmap_ex&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create_sub_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create_video_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroy_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bitmap_color_depth&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bitmap_mask_color&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_same_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_linear_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_planar_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_memory_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_screen_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_sub_bitmap&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_clip&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
一旦你選擇了一個圖形模式,你就可以經過位圖&nbsp;'screen'&nbsp;來畫些東西顯示出來.&nbsp;所有的&nbsp;<BR>
Allegro&nbsp;圖形例程都是向&nbsp;BITBMP&nbsp;結構來作畫的,&nbsp;這個結構是一塊包含了一個矩形圖片的內&nbsp;<BR>
存,&nbsp;以&nbsp;連續字節分配形式&nbsp;(&nbsp;每點&nbsp;8&nbsp;位)&nbsp;儲存.&nbsp;你在系統內存中可以創建和使用位圖,&nbsp;也&nbsp;<BR>
可以直接寫向特別的&nbsp;'screen'&nbsp;位圖,&nbsp;這個位圖&nbsp;代表了你的圖形卡上的顯存.&nbsp;&nbsp;<BR>
&nbsp;<BR>
舉個例子,&nbsp;要向屏幕畫一個點,你可以這樣寫:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;putpixel(screen,&nbsp;x,&nbsp;y,&nbsp;color);&nbsp;<BR>
&nbsp;<BR>
或者使用一個雙緩衝實現程序:&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;BITMAP&nbsp;*bmp&nbsp;=&nbsp;create_bitmap(320,&nbsp;200);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;在系統內存中創建一個位圖&nbsp;<BR>
&nbsp;&nbsp;&nbsp;clear(bmp);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;將內存位圖清空&nbsp;<BR>
&nbsp;&nbsp;&nbsp;putpixel(bmp,&nbsp;x,&nbsp;y,&nbsp;color);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;畫在內存位圖上&nbsp;<BR>
&nbsp;&nbsp;&nbsp;blit(bmp,&nbsp;screen,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;320,&nbsp;200);&nbsp;&nbsp;//&nbsp;將其復制到屏幕上&nbsp;<BR>
&nbsp;<BR>
見下面來了解如何在一個位圖中直接控制圖像所在的內存.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
Allegro&nbsp;支持幾種不同類型的位圖:&nbsp;&nbsp;<BR>
&nbsp;<BR>
-&nbsp;屏幕位圖,&nbsp;代表了硬件顯存&nbsp;最終你必須畫在它上面來使得你的圖片可以顯示.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
-&nbsp;內存位圖,&nbsp;它存在於系統內存中,可以用來&nbsp;儲存圖像或者作為雙緩衝系統的臨時作畫的位&nbsp;<BR>
置.&nbsp;這些能夠由調用&nbsp;create_bitmap(),&nbsp;load_pcx(),&nbsp;或是從&nbsp;grabber&nbsp;數據文件裡載入而&nbsp;<BR>
得到.&nbsp;&nbsp;<BR>
&nbsp;<BR>
-&nbsp;子位圖.&nbsp;它共享父位圖的存儲器空間&nbsp;(父位圖可以是&nbsp;屏幕,&nbsp;一個內存位圖,&nbsp;或是另一個&nbsp;<BR>
子位圖),&nbsp;因此在它們上面作畫&nbsp;也將同時改變它們的父位圖.&nbsp;它們是任何大小並可以定義在&nbsp;<BR>
父位圖上的任何位置,&nbsp;也可以有它們自己的&nbsp;剪裁矩形,&nbsp;因此這是將一個位圖分成幾個小部&nbsp;<BR>
分的很有用的途徑,&nbsp;比如,&nbsp;將一個大的虛擬屏幕分割成兩個部分來&nbsp;實現頁切換&nbsp;(見&nbsp;<BR>
examples/ex9.c).&nbsp;&nbsp;<BR>
&nbsp;<BR>
-&nbsp;顯存位圖.&nbsp;這些由&nbsp;create_video_bitmap()&nbsp;函數創建,&nbsp;通常起屏幕對像子位圖的相同功&nbsp;<BR>
能.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
extern&nbsp;BITMAP&nbsp;*screen;&nbsp;<BR>
一個位圖的全局指針,&nbsp;大小為&nbsp;VIRTUAL_W&nbsp;x&nbsp;VIRTUAL_H.&nbsp;這個由&nbsp;set_gfx_mode()&nbsp;創建,&nbsp;映&nbsp;<BR>
射到硬件顯存上.&nbsp;只有一部分&nbsp;大小為&nbsp;SCREEN_W&nbsp;x&nbsp;SCREEN_H&nbsp;的位圖被顯示.&nbsp;通常這個部分&nbsp;<BR>
在大的虛擬屏幕的左上角,&nbsp;因此你如果沒有興趣去做&nbsp;硬件滾屏或頁切換時可以忽略虛擬屏&nbsp;<BR>
幕的不可顯部分.&nbsp;要移動顯示窗口到&nbsp;屏幕位圖的其它部分,&nbsp;調用&nbsp;scroll_screen().&nbsp;初試&nbsp;<BR>
化時剪裁矩形將限制在物理屏幕的大小,&nbsp;因此如果你想在大的虛擬屏幕上超出這個矩形的部&nbsp;<BR>
分作畫,&nbsp;則需要調整剪裁空間.&nbsp;&nbsp;<BR>
&nbsp;<BR>
BITMAP&nbsp;*create_bitmap(int&nbsp;width,&nbsp;int&nbsp;height);&nbsp;<BR>
創建一個大小為&nbsp;width&nbsp;x&nbsp;height&nbsp;的內存位圖,&nbsp;並且返回指向它的指針.&nbsp;這個位圖將打開剪&nbsp;<BR>
裁功能,&nbsp;剪裁矩形&nbsp;被設置為整個位圖.&nbsp;圖像內存不會為你清空,&nbsp;因此上面可能有寫垃圾:&nbsp;<BR>
你必須在使用前清空位圖.&nbsp;這個例程總是使用全局的點格式,&nbsp;由&nbsp;調用&nbsp;set_color_depth()&nbsp;<BR>
來指定.&nbsp;&nbsp;<BR>
&nbsp;<BR>
BITMAP&nbsp;*create_bitmap_ex(int&nbsp;color_depth,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height);&nbsp;<BR>
以指定的顏色深度(8,&nbsp;15,&nbsp;16,&nbsp;24&nbsp;或&nbsp;32位每點)來創建位圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
BITMAP&nbsp;*create_sub_bitmap(BITMAP&nbsp;*parent,&nbsp;int&nbsp;x,&nbsp;y,&nbsp;width,&nbsp;height);&nbsp;<BR>
創建一個子位圖.&nbsp;即,讓一個位圖共享另一個&nbsp;已經存在的位圖的空間,&nbsp;但是可能有不同的大&nbsp;<BR>
小和剪裁設定.&nbsp;當在&nbsp;mode-X&nbsp;屏幕上創建子位圖時,&nbsp;x&nbsp;坐標必須是&nbsp;4&nbsp;的倍數.&nbsp;子位圖的寬&nbsp;<BR>
度和高度可以擴展到&nbsp;父位圖的右邊界和下邊界以外&nbsp;(它們將被剪裁掉),&nbsp;但是起點必須在父&nbsp;<BR>
位圖的區域.&nbsp;&nbsp;<BR>
&nbsp;<BR>
BITMAP&nbsp;*create_video_bitmap(int&nbsp;width,&nbsp;int&nbsp;height);&nbsp;<BR>
以指定大小分配顯存位圖,&nbsp;如果成功則返回&nbsp;一個指針,&nbsp;失敗則返回&nbsp;NULL&nbsp;(即:&nbsp;如果你超出&nbsp;<BR>
了&nbsp;vram).&nbsp;這可以用來在分配屏幕以外的顯存儲存&nbsp;原始圖像為硬件加速的&nbsp;blit&nbsp;操作作準&nbsp;<BR>
備,&nbsp;或是創建多重顯示內存頁,&nbsp;它能夠以調用&nbsp;show_video_bitmap()&nbsp;來顯示.&nbsp;顯存位圖通&nbsp;<BR>
常和&nbsp;屏幕位圖分配相同的空間,&nbsp;因此它們可以重疊:&nbsp;所以使用和這個函數返回的任何表面&nbsp;<BR>
同時使用整個屏幕不是個好主意.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
void&nbsp;destroy_bitmap(BITMAP&nbsp;*bitmap);&nbsp;<BR>
當你使用完一個內存位圖,子位圖或顯存位圖後銷毀它.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;bitmap_color_depth(BITMAP&nbsp;*bmp);&nbsp;<BR>
返回指定位圖的顏色深度&nbsp;(8,&nbsp;15,&nbsp;16,&nbsp;24,&nbsp;或&nbsp;32).&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;bitmap_mask_color(BITMAP&nbsp;*bmp);&nbsp;<BR>
返回指定位圖的掩色&nbsp;(這個色彩值將在畫精靈時被忽略).&nbsp;在&nbsp;256&nbsp;色位圖裡是零,&nbsp;在真彩位&nbsp;<BR>
圖裡是亮粉紅色&nbsp;(紅和藍值最大,&nbsp;綠值為零).&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;is_same_bitmap(BITMAP&nbsp;*bmp1,&nbsp;BITMAP&nbsp;*bmp2);&nbsp;<BR>
如果兩個位圖描述了同樣一個繪圖表面將返回&nbsp;TRUE,&nbsp;即,&nbsp;指針相等,&nbsp;或一個是另一個的子&nbsp;<BR>
位圖,&nbsp;或&nbsp;它們是&nbsp;同一位圖的子位圖.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;is_linear_bitmap(BITMAP&nbsp;*bmp);&nbsp;<BR>
當位圖是線形位圖時返回&nbsp;TRUE.&nbsp;即,是一內存位圖,&nbsp;或&nbsp;13h&nbsp;模式的屏幕,&nbsp;或&nbsp;SVGA&nbsp;屏幕.&nbsp;<BR>
線形位圖可以被&nbsp;_putpixel(),&nbsp;_getpixel(),&nbsp;bmp_write_line(),&nbsp;和&nbsp;bmp_read_line()&nbsp;函&nbsp;<BR>
數使用.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;is_planar_bitmap(BITMAP&nbsp;*bmp);&nbsp;<BR>
當位圖是分屏&nbsp;(planar)&nbsp;(mode-X&nbsp;或&nbsp;Xtended&nbsp;模式)&nbsp;屏幕位圖時返回&nbsp;TRUE.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;is_memory_bitmap(BITMAP&nbsp;*bmp);&nbsp;<BR>
當位圖是內存位圖時返回&nbsp;TRUE,&nbsp;即,&nbsp;它是由調用&nbsp;create_bitmap()&nbsp;創建或從&nbsp;grabber&nbsp;數&nbsp;<BR>
據文件或&nbsp;PCX&nbsp;文件裡載入的.&nbsp;內存位圖可以經位圖結構中的行指針來直接控制,&nbsp;比如:&nbsp;<BR>
bmp-&gt;line[y][x]&nbsp;=&nbsp;color.&nbsp;&nbsp;<BR>
&nbsp;<BR>
int&nbsp;is_screen_bitmap(BITMAP&nbsp;*bmp);&nbsp;<BR>
如果位圖是屏幕位圖,顯存位圖或是它們之一的子位圖時返回&nbsp;TRUE.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
int&nbsp;is_sub_bitmap(BITMAP&nbsp;*bmp);&nbsp;<BR>
如果位圖是子位圖則返回&nbsp;TRUE.&nbsp;&nbsp;<BR>
&nbsp;<BR>
void&nbsp;set_clip(BITMAP&nbsp;*bitmap,&nbsp;int&nbsp;x1,&nbsp;int&nbsp;y1,&nbsp;int&nbsp;x2,&nbsp;int&nbsp;y2);&nbsp;<BR>
每個位圖有一個伴隨的剪裁矩形,&nbsp;它是一個&nbsp;能夠將圖畫上去的區域.&nbsp;在這塊空間以外,&nbsp;什&nbsp;<BR>
麼也畫不上去.&nbsp;參數為剪裁矩形的兩個角的坐標:&nbsp;這些點被包括在內.&nbsp;比如&nbsp;<BR>
set_clip(bitmap,&nbsp;16,&nbsp;16,&nbsp;32,&nbsp;32)&nbsp;將&nbsp;允許畫到&nbsp;(16,&nbsp;16)&nbsp;和&nbsp;(32,&nbsp;32)&nbsp;上,&nbsp;但是不能畫&nbsp;<BR>
到&nbsp;(15,&nbsp;15)&nbsp;和&nbsp;(33,&nbsp;33).&nbsp;如果&nbsp;x1,&nbsp;y1,&nbsp;x2,&nbsp;和&nbsp;y2&nbsp;都為零,&nbsp;剪裁就關掉了,&nbsp;這可以輕微&nbsp;<BR>
的提高一些繪圖操作&nbsp;(通常只有微不足道的&nbsp;區別,&nbsp;然而有點幫助)&nbsp;但是後果是當你試圖&nbsp;向&nbsp;<BR>
位圖以外的空間作畫時,&nbsp;你的程序會狠慘的死掉.&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
<A HREF="http://www.cfido.net/cloud">http://www.cfido.net/cloud</A>&nbsp;<BR>
<A HREF="http://computer.igd.edu.cn/~cloud">http://computer.igd.edu.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://linux.cqi.com.cn/~cloud">http://linux.cqi.com.cn/~cloud</A>&nbsp;<BR>
<A HREF="http://www.nease.net/~cloudwu">http://www.nease.net/~cloudwu</A>&nbsp;(暫時不能更新)&nbsp;<BR>
E-mail:&nbsp;<A HREF="mailto:cloudwu@263.net">cloudwu@263.net</A>&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;202.197.71.16]&nbsp;&nbsp;<BR>
<A HREF="00000025.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000027.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>