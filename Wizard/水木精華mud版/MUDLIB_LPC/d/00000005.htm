<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;Ranma&nbsp;(亂馬~~~~~~~無聊中),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Lpc&nbsp;basics&nbsp;(4)--Functions&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Oct&nbsp;20&nbsp;09:06:13&nbsp;1997)&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC&nbsp;Basics&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Written&nbsp;by&nbsp;Descartes&nbsp;of&nbsp;Borg&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;edition:&nbsp;23&nbsp;april&nbsp;1993&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;second&nbsp;edition:&nbsp;22&nbsp;june&nbsp;1993&nbsp;<BR>
&nbsp;<BR>
CHAPTER&nbsp;4:&nbsp;Functions&nbsp;<BR>
&nbsp;<BR>
4.1&nbsp;Review&nbsp;<BR>
By&nbsp;this&nbsp;point,&nbsp;you&nbsp;should&nbsp;be&nbsp;aware&nbsp;that&nbsp;LPC&nbsp;objects&nbsp;consist&nbsp;of&nbsp;functions&nbsp;<BR>
which&nbsp;manipulate&nbsp;variables.&nbsp;&nbsp;The&nbsp;functions&nbsp;manipulate&nbsp;variables&nbsp;when&nbsp;they&nbsp;<BR>
are&nbsp;executed,&nbsp;and&nbsp;they&nbsp;get&nbsp;executed&nbsp;through&nbsp;*calls*&nbsp;to&nbsp;those&nbsp;functions.&nbsp;<BR>
The&nbsp;order&nbsp;in&nbsp;which&nbsp;the&nbsp;functions&nbsp;are&nbsp;placed&nbsp;in&nbsp;a&nbsp;file&nbsp;does&nbsp;not&nbsp;matter.&nbsp;<BR>
Inside&nbsp;a&nbsp;function,&nbsp;the&nbsp;variables&nbsp;get&nbsp;manipulated.&nbsp;&nbsp;They&nbsp;are&nbsp;stored&nbsp;in&nbsp;<BR>
computer&nbsp;memory&nbsp;and&nbsp;used&nbsp;by&nbsp;the&nbsp;computer&nbsp;as&nbsp;0's&nbsp;and&nbsp;1's&nbsp;which&nbsp;<BR>
get&nbsp;translated&nbsp;to&nbsp;and&nbsp;from&nbsp;useable&nbsp;output&nbsp;and&nbsp;input&nbsp;through&nbsp;a&nbsp;device&nbsp;<BR>
called&nbsp;data&nbsp;typing.&nbsp;&nbsp;String&nbsp;data&nbsp;types&nbsp;tell&nbsp;the&nbsp;driver&nbsp;that&nbsp;the&nbsp;<BR>
data&nbsp;should&nbsp;appear&nbsp;to&nbsp;you&nbsp;and&nbsp;come&nbsp;from&nbsp;you&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;alphanumeric&nbsp;<BR>
characters.&nbsp;&nbsp;Variables&nbsp;of&nbsp;type&nbsp;int&nbsp;are&nbsp;represented&nbsp;to&nbsp;you&nbsp;as&nbsp;whole&nbsp;<BR>
number&nbsp;values.&nbsp;&nbsp;Type&nbsp;status&nbsp;is&nbsp;represented&nbsp;to&nbsp;you&nbsp;as&nbsp;either&nbsp;1&nbsp;or&nbsp;0.&nbsp;<BR>
And&nbsp;finally&nbsp;type&nbsp;void&nbsp;has&nbsp;no&nbsp;value&nbsp;to&nbsp;you&nbsp;or&nbsp;the&nbsp;machine,&nbsp;and&nbsp;is&nbsp;not&nbsp;<BR>
really&nbsp;used&nbsp;with&nbsp;variable&nbsp;data&nbsp;types.&nbsp;<BR>
&nbsp;<BR>
4.2&nbsp;What&nbsp;is&nbsp;a&nbsp;function?&nbsp;<BR>
Like&nbsp;math&nbsp;functions,&nbsp;LPC&nbsp;functions&nbsp;take&nbsp;input&nbsp;and&nbsp;return&nbsp;output.&nbsp;<BR>
Languages&nbsp;like&nbsp;Pascal&nbsp;distinguish&nbsp;between&nbsp;the&nbsp;concept&nbsp;of&nbsp;proceedure&nbsp;abd&nbsp;<BR>
the&nbsp;concept&nbsp;of&nbsp;function.&nbsp;&nbsp;LPC&nbsp;does&nbsp;not,&nbsp;however,&nbsp;it&nbsp;is&nbsp;useful&nbsp;to&nbsp;<BR>
understand&nbsp;this&nbsp;distinction.&nbsp;&nbsp;What&nbsp;Pascal&nbsp;calls&nbsp;a&nbsp;proceedure,&nbsp;LPC&nbsp;<BR>
calls&nbsp;a&nbsp;function&nbsp;of&nbsp;type&nbsp;void.&nbsp;&nbsp;In&nbsp;other&nbsp;words,&nbsp;a&nbsp;proceedure,&nbsp;or&nbsp;function&nbsp;<BR>
of&nbsp;type&nbsp;void&nbsp;returns&nbsp;no&nbsp;output.&nbsp;&nbsp;What&nbsp;Pascal&nbsp;calls&nbsp;a&nbsp;function&nbsp;differs&nbsp;<BR>
in&nbsp;that&nbsp;it&nbsp;does&nbsp;return&nbsp;output.&nbsp;&nbsp;In&nbsp;LPC,&nbsp;the&nbsp;most&nbsp;trivial,&nbsp;correct&nbsp;<BR>
function&nbsp;is:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
void&nbsp;do_nothing()&nbsp;{&nbsp;}&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
This&nbsp;function&nbsp;accepts&nbsp;no&nbsp;input,&nbsp;performs&nbsp;no&nbsp;instructions,&nbsp;and&nbsp;returns&nbsp;no&nbsp;<BR>
value.&nbsp;<BR>
&nbsp;<BR>
There&nbsp;are&nbsp;three&nbsp;parts&nbsp;to&nbsp;every&nbsp;properly&nbsp;written&nbsp;LPC&nbsp;function:&nbsp;<BR>
1)&nbsp;The&nbsp;declaration&nbsp;<BR>
2)&nbsp;The&nbsp;definition&nbsp;<BR>
3)&nbsp;The&nbsp;call&nbsp;<BR>
&nbsp;<BR>
Like&nbsp;with&nbsp;variables,&nbsp;functions&nbsp;must&nbsp;be&nbsp;declared.&nbsp;&nbsp;This&nbsp;will&nbsp;allow&nbsp;the&nbsp;<BR>
driver&nbsp;to&nbsp;know&nbsp;1)&nbsp;what&nbsp;type&nbsp;of&nbsp;data&nbsp;the&nbsp;function&nbsp;is&nbsp;returning&nbsp;as&nbsp;output,&nbsp;<BR>
and&nbsp;2)&nbsp;how&nbsp;many&nbsp;input(s)&nbsp;and&nbsp;of&nbsp;what&nbsp;type&nbsp;those&nbsp;input(s)&nbsp;are.&nbsp;&nbsp;The&nbsp;<BR>
more&nbsp;common&nbsp;word&nbsp;for&nbsp;input&nbsp;is&nbsp;parameters.&nbsp;<BR>
A&nbsp;function&nbsp;declaration&nbsp;therefore&nbsp;consists&nbsp;of:&nbsp;<BR>
type&nbsp;name(parameter1,&nbsp;parameter2,&nbsp;...,&nbsp;parameterN);&nbsp;<BR>
The&nbsp;declaration&nbsp;of&nbsp;a&nbsp;function&nbsp;called&nbsp;drink_water()&nbsp;which&nbsp;accepts&nbsp;a&nbsp;string&nbsp;as&nbsp;<BR>
input&nbsp;and&nbsp;an&nbsp;int&nbsp;as&nbsp;output&nbsp;would&nbsp;thus&nbsp;look&nbsp;like&nbsp;this:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
int&nbsp;drink_water(string&nbsp;str);&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
where&nbsp;str&nbsp;is&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;input&nbsp;as&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;inside&nbsp;the&nbsp;function.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;function&nbsp;definition&nbsp;is&nbsp;the&nbsp;code&nbsp;which&nbsp;describes&nbsp;what&nbsp;the&nbsp;function&nbsp;actually&nbsp;<BR>
does&nbsp;with&nbsp;the&nbsp;input&nbsp;sent&nbsp;to&nbsp;it.&nbsp;&nbsp;&nbsp;<BR>
The&nbsp;call&nbsp;is&nbsp;any&nbsp;place&nbsp;in&nbsp;other&nbsp;functions&nbsp;which&nbsp;invokes&nbsp;the&nbsp;execution&nbsp;of&nbsp;the&nbsp;<BR>
function&nbsp;in&nbsp;question.&nbsp;&nbsp;For&nbsp;two&nbsp;functions&nbsp;write_vals()&nbsp;and&nbsp;add(),&nbsp;you&nbsp;thus&nbsp;<BR>
might&nbsp;have&nbsp;the&nbsp;following&nbsp;bit&nbsp;of&nbsp;code:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
/*&nbsp;First,&nbsp;function&nbsp;declarations.&nbsp;&nbsp;They&nbsp;usually&nbsp;appear&nbsp;at&nbsp;the&nbsp;beginning&nbsp;<BR>
&nbsp;&nbsp;&nbsp;of&nbsp;object&nbsp;code.&nbsp;&nbsp;<BR>
*/&nbsp;<BR>
void&nbsp;write_vals();&nbsp;<BR>
int&nbsp;add(int&nbsp;x,&nbsp;int&nbsp;y);&nbsp;<BR>
&nbsp;<BR>
/*&nbsp;Next,&nbsp;the&nbsp;definition&nbsp;of&nbsp;the&nbsp;function&nbsp;write_vals().&nbsp;&nbsp;We&nbsp;assume&nbsp;that&nbsp;<BR>
&nbsp;&nbsp;&nbsp;this&nbsp;function&nbsp;is&nbsp;going&nbsp;to&nbsp;be&nbsp;called&nbsp;from&nbsp;outside&nbsp;the&nbsp;object&nbsp;<BR>
*/&nbsp;<BR>
void&nbsp;write_vals()&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;/*N&nbsp;Now&nbsp;we&nbsp;assign&nbsp;x&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;output&nbsp;of&nbsp;add()&nbsp;through&nbsp;a&nbsp;call&nbsp;*/&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;add(2,&nbsp;2);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;write(x+&quot;\n&quot;);&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
/*&nbsp;Finally,&nbsp;the&nbsp;definition&nbsp;of&nbsp;add()&nbsp;*/&nbsp;<BR>
int&nbsp;add(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(x&nbsp;+&nbsp;y);&nbsp;<BR>
}&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
Remember,&nbsp;it&nbsp;does&nbsp;not&nbsp;matter&nbsp;which&nbsp;function&nbsp;definition&nbsp;appears&nbsp;first&nbsp;in&nbsp;the&nbsp;<BR>
code.&nbsp;&nbsp;This&nbsp;is&nbsp;because&nbsp;functions&nbsp;are&nbsp;not&nbsp;executed&nbsp;consecutively.&nbsp;&nbsp;Instead,&nbsp;<BR>
functions&nbsp;are&nbsp;executed&nbsp;as&nbsp;called.&nbsp;&nbsp;The&nbsp;only&nbsp;requirement&nbsp;is&nbsp;that&nbsp;the&nbsp;<BR>
declaration&nbsp;of&nbsp;a&nbsp;function&nbsp;appear&nbsp;before&nbsp;its&nbsp;definition&nbsp;and&nbsp;before&nbsp;the&nbsp;<BR>
definition&nbsp;of&nbsp;any&nbsp;function&nbsp;which&nbsp;makes&nbsp;a&nbsp;call&nbsp;to&nbsp;it.&nbsp;<BR>
&nbsp;<BR>
4.3&nbsp;Efuns&nbsp;<BR>
Perhaps&nbsp;you&nbsp;have&nbsp;heard&nbsp;people&nbsp;refer&nbsp;to&nbsp;efuns.&nbsp;&nbsp;They&nbsp;are&nbsp;externally&nbsp;defined&nbsp;<BR>
functions.&nbsp;&nbsp;Namely,&nbsp;they&nbsp;are&nbsp;defined&nbsp;by&nbsp;the&nbsp;mud&nbsp;driver.&nbsp;&nbsp;If&nbsp;you&nbsp;have&nbsp;<BR>
played&nbsp;around&nbsp;at&nbsp;all&nbsp;with&nbsp;coding&nbsp;in&nbsp;LPC,&nbsp;you&nbsp;have&nbsp;probably&nbsp;found&nbsp;some&nbsp;<BR>
expressions&nbsp;you&nbsp;were&nbsp;told&nbsp;to&nbsp;use&nbsp;like&nbsp;this_player(),&nbsp;write(),&nbsp;say(),&nbsp;<BR>
this_object(),&nbsp;etc.&nbsp;look&nbsp;a&nbsp;lot&nbsp;like&nbsp;functions.&nbsp;&nbsp;That&nbsp;is&nbsp;because&nbsp;they&nbsp;are&nbsp;<BR>
efuns.&nbsp;&nbsp;The&nbsp;value&nbsp;of&nbsp;efuns&nbsp;is&nbsp;that&nbsp;they&nbsp;are&nbsp;much&nbsp;faster&nbsp;than&nbsp;LPC&nbsp;functions,&nbsp;<BR>
since&nbsp;they&nbsp;already&nbsp;exist&nbsp;in&nbsp;the&nbsp;binary&nbsp;form&nbsp;the&nbsp;computer&nbsp;understands.&nbsp;<BR>
&nbsp;<BR>
In&nbsp;the&nbsp;function&nbsp;write_vals()&nbsp;above,&nbsp;two&nbsp;functions&nbsp;calls&nbsp;were&nbsp;made.&nbsp;&nbsp;The&nbsp;first&nbsp;was&nbsp;to&nbsp;<BR>
the&nbsp;functions&nbsp;add(),&nbsp;which&nbsp;you&nbsp;declared&nbsp;and&nbsp;defined.&nbsp;&nbsp;The&nbsp;second&nbsp;call,&nbsp;however,&nbsp;<BR>
was&nbsp;to&nbsp;a&nbsp;function&nbsp;called&nbsp;write(),&nbsp;and&nbsp;efun.&nbsp;&nbsp;The&nbsp;driver&nbsp;has&nbsp;already&nbsp;declared&nbsp;<BR>
and&nbsp;defined&nbsp;this&nbsp;function&nbsp;for&nbsp;you.&nbsp;&nbsp;You&nbsp;needs&nbsp;only&nbsp;to&nbsp;make&nbsp;calls&nbsp;to&nbsp;it.&nbsp;<BR>
&nbsp;<BR>
Efuns&nbsp;are&nbsp;created&nbsp;to&nbsp;hanldle&nbsp;common,&nbsp;every&nbsp;day&nbsp;function&nbsp;calls,&nbsp;to&nbsp;handle&nbsp;<BR>
input/output&nbsp;to&nbsp;the&nbsp;internet&nbsp;sockets,&nbsp;and&nbsp;other&nbsp;matters&nbsp;difficult&nbsp;to&nbsp;be&nbsp;<BR>
dealt&nbsp;with&nbsp;in&nbsp;LPC.&nbsp;&nbsp;They&nbsp;are&nbsp;written&nbsp;in&nbsp;C&nbsp;in&nbsp;the&nbsp;game&nbsp;driver&nbsp;and&nbsp;compiled&nbsp;<BR>
along&nbsp;with&nbsp;the&nbsp;driver&nbsp;before&nbsp;the&nbsp;mud&nbsp;comes&nbsp;up,&nbsp;making&nbsp;them&nbsp;much&nbsp;faster&nbsp;<BR>
in&nbsp;execution.&nbsp;&nbsp;But&nbsp;for&nbsp;your&nbsp;purposes,&nbsp;efun&nbsp;calls&nbsp;are&nbsp;just&nbsp;like&nbsp;calls&nbsp;<BR>
made&nbsp;to&nbsp;your&nbsp;functions.&nbsp;&nbsp;Still,&nbsp;it&nbsp;is&nbsp;important&nbsp;to&nbsp;know&nbsp;two&nbsp;things&nbsp;of&nbsp;any&nbsp;<BR>
efun:&nbsp;1)&nbsp;what&nbsp;return&nbsp;type&nbsp;does&nbsp;it&nbsp;have,&nbsp;and&nbsp;2)&nbsp;what&nbsp;parameters&nbsp;of&nbsp;what&nbsp;<BR>
types&nbsp;does&nbsp;it&nbsp;take.&nbsp;<BR>
&nbsp;<BR>
Information&nbsp;on&nbsp;efuns&nbsp;such&nbsp;as&nbsp;input&nbsp;parameters&nbsp;and&nbsp;return&nbsp;types&nbsp;is&nbsp;often&nbsp;<BR>
found&nbsp;in&nbsp;a&nbsp;directory&nbsp;called&nbsp;/doc/efun&nbsp;on&nbsp;your&nbsp;mud.&nbsp;&nbsp;I&nbsp;cannot&nbsp;<BR>
detail&nbsp;efuns&nbsp;here,&nbsp;because&nbsp;efuns&nbsp;vary&nbsp;from&nbsp;driver&nbsp;to&nbsp;driver.&nbsp;&nbsp;However,&nbsp;<BR>
you&nbsp;can&nbsp;often&nbsp;access&nbsp;this&nbsp;information&nbsp;using&nbsp;the&nbsp;commands&nbsp;&quot;man&quot;&nbsp;or&nbsp;&quot;help&quot;&nbsp;<BR>
depending&nbsp;on&nbsp;your&nbsp;mudlib.&nbsp;&nbsp;For&nbsp;instance,&nbsp;the&nbsp;command&nbsp;&quot;man&nbsp;write&quot;&nbsp;would&nbsp;<BR>
give&nbsp;you&nbsp;information&nbsp;on&nbsp;the&nbsp;write&nbsp;efun.&nbsp;&nbsp;But&nbsp;if&nbsp;all&nbsp;else&nbsp;fails,&nbsp;<BR>
&quot;more&nbsp;/doc/efun/write&quot;&nbsp;should&nbsp;work.&nbsp;<BR>
&nbsp;<BR>
By&nbsp;looking&nbsp;it&nbsp;up,&nbsp;you&nbsp;will&nbsp;find&nbsp;write&nbsp;is&nbsp;declared&nbsp;as&nbsp;follows:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
void&nbsp;write(string);&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
This&nbsp;tells&nbsp;you&nbsp;an&nbsp;appropriate&nbsp;call&nbsp;to&nbsp;write&nbsp;expects&nbsp;no&nbsp;return&nbsp;value&nbsp;and&nbsp;<BR>
passes&nbsp;a&nbsp;single&nbsp;parameter&nbsp;of&nbsp;type&nbsp;string.&nbsp;<BR>
&nbsp;<BR>
4.4&nbsp;Defining&nbsp;your&nbsp;own&nbsp;functions&nbsp;<BR>
Although&nbsp;ordering&nbsp;your&nbsp;functions&nbsp;within&nbsp;the&nbsp;file&nbsp;does&nbsp;not&nbsp;matter,&nbsp;ordering&nbsp;<BR>
the&nbsp;code&nbsp;which&nbsp;defines&nbsp;a&nbsp;function&nbsp;is&nbsp;most&nbsp;important.&nbsp;&nbsp;Once&nbsp;a&nbsp;function&nbsp;<BR>
has&nbsp;been&nbsp;called,&nbsp;function&nbsp;code&nbsp;is&nbsp;executed&nbsp;in&nbsp;the&nbsp;order&nbsp;it&nbsp;appears&nbsp;<BR>
in&nbsp;the&nbsp;function&nbsp;definition.&nbsp;&nbsp;In&nbsp;write_vals()&nbsp;above,&nbsp;the&nbsp;instruction:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
-----&nbsp;<BR>
x&nbsp;=&nbsp;add(2,&nbsp;2);&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
Must&nbsp;come&nbsp;before&nbsp;the&nbsp;write()&nbsp;efun&nbsp;call&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;see&nbsp;the&nbsp;appropriate&nbsp;<BR>
value&nbsp;of&nbsp;x&nbsp;used&nbsp;in&nbsp;write().&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
With&nbsp;respect&nbsp;to&nbsp;values&nbsp;returned&nbsp;by&nbsp;function,&nbsp;this&nbsp;is&nbsp;done&nbsp;through&nbsp;the&nbsp;&quot;return&quot;&nbsp;<BR>
instruction&nbsp;followed&nbsp;by&nbsp;a&nbsp;value&nbsp;of&nbsp;the&nbsp;same&nbsp;data&nbsp;type&nbsp;as&nbsp;the&nbsp;function.&nbsp;&nbsp;In&nbsp;<BR>
add()&nbsp;above,&nbsp;the&nbsp;instruction&nbsp;is&nbsp;&quot;return&nbsp;(x+y);&quot;,&nbsp;where&nbsp;the&nbsp;value&nbsp;of&nbsp;(x+y)&nbsp;<BR>
is&nbsp;the&nbsp;value&nbsp;returned&nbsp;to&nbsp;write_vals()&nbsp;and&nbsp;assigned&nbsp;to&nbsp;x.&nbsp;&nbsp;On&nbsp;a&nbsp;more&nbsp;<BR>
general&nbsp;level,&nbsp;&quot;return&quot;&nbsp;halts&nbsp;the&nbsp;execution&nbsp;of&nbsp;a&nbsp;function&nbsp;and&nbsp;returns&nbsp;<BR>
code&nbsp;execution&nbsp;to&nbsp;the&nbsp;function&nbsp;which&nbsp;called&nbsp;that&nbsp;function.&nbsp;&nbsp;In&nbsp;addition,&nbsp;<BR>
it&nbsp;returns&nbsp;to&nbsp;the&nbsp;calling&nbsp;function&nbsp;the&nbsp;value&nbsp;of&nbsp;any&nbsp;expression&nbsp;that&nbsp;follows.&nbsp;<BR>
To&nbsp;stop&nbsp;the&nbsp;execution&nbsp;of&nbsp;a&nbsp;function&nbsp;of&nbsp;type&nbsp;void&nbsp;out&nbsp;of&nbsp;order,&nbsp;use&nbsp;<BR>
&quot;return&quot;;&nbsp;without&nbsp;any&nbsp;value&nbsp;following.&nbsp;&nbsp;Once&nbsp;again,&nbsp;remember,&nbsp;the&nbsp;data&nbsp;<BR>
type&nbsp;of&nbsp;the&nbsp;value&nbsp;of&nbsp;any&nbsp;expression&nbsp;returned&nbsp;using&nbsp;&quot;return&quot;&nbsp;MUST&nbsp;be&nbsp;the&nbsp;<BR>
same&nbsp;as&nbsp;the&nbsp;data&nbsp;type&nbsp;of&nbsp;the&nbsp;function&nbsp;itself.&nbsp;<BR>
&nbsp;<BR>
4.5&nbsp;Chapter&nbsp;Summary&nbsp;<BR>
The&nbsp;files&nbsp;which&nbsp;define&nbsp;LPC&nbsp;objects&nbsp;are&nbsp;made&nbsp;of&nbsp;of&nbsp;functions.&nbsp;&nbsp;Functions,&nbsp;in&nbsp;<BR>
turn,&nbsp;are&nbsp;made&nbsp;up&nbsp;of&nbsp;three&nbsp;parts:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;1)&nbsp;The&nbsp;declaration&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;2)&nbsp;The&nbsp;definition&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;3)&nbsp;The&nbsp;call&nbsp;<BR>
Function&nbsp;declarations&nbsp;generally&nbsp;appear&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;file&nbsp;before&nbsp;any&nbsp;<BR>
defintions,&nbsp;although&nbsp;the&nbsp;requirement&nbsp;is&nbsp;that&nbsp;the&nbsp;declaration&nbsp;must&nbsp;appear&nbsp;<BR>
before&nbsp;the&nbsp;function&nbsp;definition&nbsp;and&nbsp;before&nbsp;the&nbsp;definition&nbsp;of&nbsp;any&nbsp;function&nbsp;<BR>
which&nbsp;calls&nbsp;it.&nbsp;<BR>
Function&nbsp;definitions&nbsp;may&nbsp;appear&nbsp;in&nbsp;the&nbsp;file&nbsp;in&nbsp;any&nbsp;order&nbsp;so&nbsp;long&nbsp;as&nbsp;they&nbsp;<BR>
come&nbsp;after&nbsp;their&nbsp;declaration.&nbsp;&nbsp;In&nbsp;addition,&nbsp;you&nbsp;may&nbsp;not&nbsp;define&nbsp;one&nbsp;function&nbsp;<BR>
inside&nbsp;another&nbsp;function.&nbsp;<BR>
Function&nbsp;calls&nbsp;appear&nbsp;inside&nbsp;the&nbsp;definition&nbsp;of&nbsp;other&nbsp;functions&nbsp;where&nbsp;you&nbsp;<BR>
want&nbsp;the&nbsp;code&nbsp;to&nbsp;begin&nbsp;execution&nbsp;of&nbsp;your&nbsp;function.&nbsp;&nbsp;They&nbsp;may&nbsp;also&nbsp;appear&nbsp;<BR>
within&nbsp;the&nbsp;definition&nbsp;of&nbsp;the&nbsp;function&nbsp;itself,&nbsp;but&nbsp;this&nbsp;is&nbsp;not&nbsp;recommended&nbsp;<BR>
for&nbsp;new&nbsp;coders,&nbsp;as&nbsp;it&nbsp;can&nbsp;easily&nbsp;lead&nbsp;to&nbsp;infinite&nbsp;loops.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;function&nbsp;definition&nbsp;consists&nbsp;of&nbsp;the&nbsp;following&nbsp;in&nbsp;this&nbsp;order:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;1)&nbsp;function&nbsp;return&nbsp;type&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;2)&nbsp;function&nbsp;name&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;3)&nbsp;opening&nbsp;(&nbsp;followed&nbsp;by&nbsp;a&nbsp;parameter&nbsp;list&nbsp;and&nbsp;a&nbsp;closing&nbsp;)&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;4)&nbsp;an&nbsp;opening&nbsp;{&nbsp;instructing&nbsp;the&nbsp;driver&nbsp;that&nbsp;execution&nbsp;begins&nbsp;here&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;5)&nbsp;declarations&nbsp;of&nbsp;any&nbsp;variables&nbsp;to&nbsp;be&nbsp;used&nbsp;only&nbsp;in&nbsp;that&nbsp;function&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;6)&nbsp;instructions,&nbsp;expressions,&nbsp;and&nbsp;calls&nbsp;to&nbsp;other&nbsp;functions&nbsp;as&nbsp;needed&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;7)&nbsp;a&nbsp;closing&nbsp;}&nbsp;stating&nbsp;that&nbsp;the&nbsp;function&nbsp;code&nbsp;ends&nbsp;here&nbsp;and,&nbsp;if&nbsp;no&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;return&quot;&nbsp;instruction&nbsp;has&nbsp;been&nbsp;given&nbsp;at&nbsp;this&nbsp;point&nbsp;(type&nbsp;void&nbsp;functions&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;only),&nbsp;execution&nbsp;returns&nbsp;to&nbsp;the&nbsp;calling&nbsp;function&nbsp;as&nbsp;if&nbsp;a&nbsp;r&quot;return&quot;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instruction&nbsp;was&nbsp;given&nbsp;<BR>
&nbsp;<BR>
The&nbsp;trivial&nbsp;function&nbsp;would&nbsp;thus&nbsp;be:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
void&nbsp;do_nothing()&nbsp;{}&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
since&nbsp;this&nbsp;function&nbsp;does&nbsp;not&nbsp;accept&nbsp;any&nbsp;input,&nbsp;perform&nbsp;any&nbsp;instructions,&nbsp;or&nbsp;<BR>
return&nbsp;any&nbsp;output.&nbsp;<BR>
&nbsp;<BR>
Any&nbsp;function&nbsp;which&nbsp;is&nbsp;not&nbsp;of&nbsp;type&nbsp;void&nbsp;MUST&nbsp;return&nbsp;a&nbsp;value&nbsp;of&nbsp;a&nbsp;data&nbsp;type&nbsp;<BR>
matching&nbsp;the&nbsp;function's&nbsp;data&nbsp;type.&nbsp;<BR>
&nbsp;<BR>
Each&nbsp;driver&nbsp;has&nbsp;a&nbsp;set&nbsp;of&nbsp;functions&nbsp;already&nbsp;defined&nbsp;for&nbsp;you&nbsp;called&nbsp;efuns&nbsp;<BR>
These&nbsp;you&nbsp;need&nbsp;neither&nbsp;need&nbsp;to&nbsp;declare&nbsp;nor&nbsp;define&nbsp;since&nbsp;it&nbsp;has&nbsp;already&nbsp;<BR>
been&nbsp;done&nbsp;for&nbsp;you.&nbsp;&nbsp;Furthermore,&nbsp;execution&nbsp;of&nbsp;these&nbsp;functions&nbsp;is&nbsp;faster&nbsp;<BR>
than&nbsp;the&nbsp;execution&nbsp;of&nbsp;your&nbsp;functions&nbsp;since&nbsp;efuns&nbsp;are&nbsp;in&nbsp;the&nbsp;driver.&nbsp;<BR>
In&nbsp;addition,&nbsp;each&nbsp;mudlib&nbsp;has&nbsp;special&nbsp;functions&nbsp;like&nbsp;efuns&nbsp;in&nbsp;that&nbsp;they&nbsp;<BR>
are&nbsp;already&nbsp;defined&nbsp;and&nbsp;declared&nbsp;for&nbsp;you,&nbsp;but&nbsp;different&nbsp;in&nbsp;that&nbsp;they&nbsp;<BR>
are&nbsp;defined&nbsp;in&nbsp;the&nbsp;mudlib&nbsp;and&nbsp;in&nbsp;LPC.&nbsp;&nbsp;They&nbsp;are&nbsp;called&nbsp;simul_efuns,&nbsp;or&nbsp;<BR>
simulated&nbsp;efuns.&nbsp;&nbsp;You&nbsp;can&nbsp;find&nbsp;out&nbsp;all&nbsp;about&nbsp;each&nbsp;of&nbsp;these&nbsp;as&nbsp;they&nbsp;are&nbsp;<BR>
listed&nbsp;in&nbsp;the&nbsp;/doc/efun&nbsp;directory&nbsp;on&nbsp;most&nbsp;muds.&nbsp;&nbsp;In&nbsp;addition&nbsp;many&nbsp;<BR>
muds&nbsp;have&nbsp;a&nbsp;command&nbsp;called&nbsp;&quot;man&quot;&nbsp;or&nbsp;a&nbsp;&quot;help&quot;&nbsp;command&nbsp;which&nbsp;allows&nbsp;you&nbsp;<BR>
simply&nbsp;to&nbsp;call&nbsp;up&nbsp;the&nbsp;info&nbsp;files&nbsp;on&nbsp;them.&nbsp;<BR>
&nbsp;<BR>
Note&nbsp;on&nbsp;style:&nbsp;<BR>
Some&nbsp;drivers&nbsp;may&nbsp;not&nbsp;require&nbsp;you&nbsp;to&nbsp;declare&nbsp;your&nbsp;functions,&nbsp;and&nbsp;some&nbsp;<BR>
may&nbsp;not&nbsp;require&nbsp;you&nbsp;to&nbsp;specify&nbsp;the&nbsp;return&nbsp;type&nbsp;of&nbsp;the&nbsp;function&nbsp;in&nbsp;its&nbsp;<BR>
definition.&nbsp;&nbsp;Regardless&nbsp;of&nbsp;this&nbsp;fact,&nbsp;you&nbsp;should&nbsp;never&nbsp;omit&nbsp;this&nbsp;information&nbsp;<BR>
for&nbsp;the&nbsp;following&nbsp;reasons:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;1)&nbsp;It&nbsp;is&nbsp;easier&nbsp;for&nbsp;other&nbsp;people&nbsp;(and&nbsp;you&nbsp;at&nbsp;later&nbsp;dates)&nbsp;to&nbsp;read&nbsp;your&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code&nbsp;and&nbsp;understand&nbsp;what&nbsp;is&nbsp;meant.&nbsp;&nbsp;This&nbsp;is&nbsp;particularly&nbsp;useful&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;debugging,&nbsp;where&nbsp;a&nbsp;large&nbsp;portion&nbsp;of&nbsp;errors&nbsp;(outside&nbsp;of&nbsp;misplaced&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentheses&nbsp;and&nbsp;brackets)&nbsp;involve&nbsp;problems&nbsp;with&nbsp;data&nbsp;types&nbsp;(Ever&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotten&nbsp;&quot;Bad&nbsp;arg&nbsp;1&nbsp;to&nbsp;foo()&nbsp;line&nbsp;32&quot;?).&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;2)&nbsp;It&nbsp;is&nbsp;simply&nbsp;considered&nbsp;good&nbsp;coding&nbsp;form.&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
小樓一夜聽秋雨&nbsp;<BR>
--&nbsp;<BR>
佇倚危樓風細細&nbsp;望極春愁&nbsp;黯黯生天際&nbsp;&nbsp;草色煙光殘照裡&nbsp;無言誰會憑欄意[0&nbsp;<BR>
擬把疏狂圖一醉&nbsp;對酒當歌&nbsp;強樂還無味&nbsp;&nbsp;衣帶漸寬終不悔&nbsp;為伊消得人憔悴&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;166.111.5.25]&nbsp;<BR>
<A HREF="00000004.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000006.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>