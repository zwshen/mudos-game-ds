<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;Ranma&nbsp;(亂馬~~~~~~~無聊中),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Lpc&nbsp;intermediate&nbsp;(2)--The&nbsp;LPMud&nbsp;Driver&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Oct&nbsp;20&nbsp;09:13:40&nbsp;1997)&nbsp;<BR>
&nbsp;<BR>
Intermediate&nbsp;LPC&nbsp;<BR>
Descartes&nbsp;of&nbsp;Borg&nbsp;<BR>
Novermber&nbsp;1993&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Chapter&nbsp;2:&nbsp;The&nbsp;LPMud&nbsp;Driver&nbsp;<BR>
&nbsp;<BR>
2.1&nbsp;Review&nbsp;of&nbsp;Basic&nbsp;Driver/Mudlib&nbsp;Interaction&nbsp;<BR>
In&nbsp;the&nbsp;LPC&nbsp;Basics&nbsp;textbook,&nbsp;you&nbsp;learned&nbsp;a&nbsp;lot&nbsp;about&nbsp;the&nbsp;way&nbsp;the&nbsp;mudlib&nbsp;<BR>
works,&nbsp;specifically&nbsp;in&nbsp;relation&nbsp;to&nbsp;objects&nbsp;you&nbsp;code&nbsp;in&nbsp;order&nbsp;to&nbsp;build&nbsp;your&nbsp;<BR>
realm.&nbsp;&nbsp;Not&nbsp;much&nbsp;was&nbsp;discussed&nbsp;about&nbsp;the&nbsp;interaction&nbsp;between&nbsp;the&nbsp;<BR>
mudlib&nbsp;and&nbsp;the&nbsp;driver.&nbsp;&nbsp;You&nbsp;should&nbsp;know,&nbsp;however,&nbsp;that&nbsp;the&nbsp;driver&nbsp;<BR>
does&nbsp;the&nbsp;following:&nbsp;<BR>
1)&nbsp;When&nbsp;an&nbsp;object&nbsp;is&nbsp;first&nbsp;loaded&nbsp;into&nbsp;memory,&nbsp;the&nbsp;driver&nbsp;will&nbsp;call&nbsp;<BR>
create()&nbsp;in&nbsp;native&nbsp;muds&nbsp;and&nbsp;reset()&nbsp;in&nbsp;compat&nbsp;muds.&nbsp;&nbsp;A&nbsp;creator&nbsp;<BR>
uses&nbsp;create()&nbsp;or&nbsp;reset()&nbsp;to&nbsp;give&nbsp;initial&nbsp;values&nbsp;to&nbsp;the&nbsp;object.&nbsp;<BR>
2)&nbsp;At&nbsp;an&nbsp;interval&nbsp;setup&nbsp;by&nbsp;the&nbsp;game&nbsp;administrator,&nbsp;the&nbsp;driver&nbsp;calls&nbsp;the&nbsp;<BR>
function&nbsp;reset().&nbsp;&nbsp;This&nbsp;allows&nbsp;the&nbsp;object&nbsp;to&nbsp;regenerate&nbsp;monsters&nbsp;and&nbsp;<BR>
such.&nbsp;&nbsp;Notice&nbsp;that&nbsp;in&nbsp;a&nbsp;compat&nbsp;mud,&nbsp;the&nbsp;same&nbsp;function&nbsp;is&nbsp;used&nbsp;to&nbsp;set&nbsp;up&nbsp;<BR>
initial&nbsp;values&nbsp;as&nbsp;is&nbsp;used&nbsp;to&nbsp;reset&nbsp;the&nbsp;room.&nbsp;<BR>
3)&nbsp;Any&nbsp;time&nbsp;a&nbsp;living&nbsp;object&nbsp;comes&nbsp;in&nbsp;contact&nbsp;with&nbsp;an&nbsp;object&nbsp;of&nbsp;any&nbsp;sort,&nbsp;<BR>
the&nbsp;driver&nbsp;calls&nbsp;init()&nbsp;in&nbsp;the&nbsp;newly&nbsp;encountered&nbsp;object.&nbsp;&nbsp;This&nbsp;allows&nbsp;<BR>
newly&nbsp;encountered&nbsp;objects&nbsp;to&nbsp;give&nbsp;living&nbsp;objects&nbsp;commands&nbsp;to&nbsp;execute&nbsp;<BR>
through&nbsp;the&nbsp;add_action()&nbsp;efun,&nbsp;as&nbsp;well&nbsp;as&nbsp;perform&nbsp;other&nbsp;actions&nbsp;which&nbsp;<BR>
should&nbsp;happen&nbsp;whenever&nbsp;a&nbsp;living&nbsp;thing&nbsp;encounters&nbsp;a&nbsp;given&nbsp;object.&nbsp;<BR>
4)&nbsp;The&nbsp;driver&nbsp;defines&nbsp;a&nbsp;set&nbsp;of&nbsp;functions&nbsp;known&nbsp;as&nbsp;efuns&nbsp;which&nbsp;are&nbsp;<BR>
available&nbsp;to&nbsp;all&nbsp;objects&nbsp;in&nbsp;the&nbsp;game.&nbsp;&nbsp;Examples&nbsp;of&nbsp;commonly&nbsp;used&nbsp;efuns&nbsp;<BR>
are:&nbsp;this_player(),&nbsp;this_object(),&nbsp;write(),&nbsp;say(),&nbsp;etc.&nbsp;<BR>
&nbsp;<BR>
2.2&nbsp;The&nbsp;Driver&nbsp;Cycle&nbsp;<BR>
The&nbsp;driver&nbsp;is&nbsp;a&nbsp;C&nbsp;program&nbsp;which&nbsp;runs&nbsp;the&nbsp;game.&nbsp;&nbsp;Its&nbsp;basic&nbsp;functions&nbsp;are&nbsp;<BR>
to&nbsp;accept&nbsp;connections&nbsp;from&nbsp;the&nbsp;outside&nbsp;world&nbsp;so&nbsp;people&nbsp;can&nbsp;login,&nbsp;<BR>
interpret&nbsp;the&nbsp;LPC&nbsp;code&nbsp;which&nbsp;defines&nbsp;LPC&nbsp;objects&nbsp;and&nbsp;how&nbsp;they&nbsp;<BR>
function&nbsp;in&nbsp;the&nbsp;game,&nbsp;and&nbsp;accept&nbsp;user&nbsp;input&nbsp;and&nbsp;call&nbsp;the&nbsp;appropriate&nbsp;LPC&nbsp;<BR>
functions&nbsp;which&nbsp;match&nbsp;the&nbsp;event.&nbsp;&nbsp;In&nbsp;its&nbsp;most&nbsp;simplest&nbsp;essence,&nbsp;it&nbsp;is&nbsp;an&nbsp;<BR>
unending&nbsp;loop.&nbsp;<BR>
&nbsp;<BR>
Once&nbsp;the&nbsp;game&nbsp;has&nbsp;booted&nbsp;up&nbsp;and&nbsp;is&nbsp;properly&nbsp;functioning&nbsp;(the&nbsp;boot&nbsp;up&nbsp;<BR>
process&nbsp;will&nbsp;be&nbsp;discussed&nbsp;in&nbsp;a&nbsp;future,&nbsp;advanced&nbsp;LPC&nbsp;textbook),&nbsp;the&nbsp;<BR>
driver&nbsp;enters&nbsp;a&nbsp;loop&nbsp;which&nbsp;does&nbsp;not&nbsp;terminate&nbsp;until&nbsp;the&nbsp;shutdown()&nbsp;efun&nbsp;<BR>
is&nbsp;legally&nbsp;called&nbsp;or&nbsp;a&nbsp;bug&nbsp;causes&nbsp;the&nbsp;driver&nbsp;program&nbsp;to&nbsp;crash.&nbsp;&nbsp;First&nbsp;off,&nbsp;<BR>
the&nbsp;driver&nbsp;handles&nbsp;any&nbsp;new&nbsp;incoming&nbsp;connections&nbsp;and&nbsp;passes&nbsp;control&nbsp;of&nbsp;<BR>
the&nbsp;connection&nbsp;to&nbsp;a&nbsp;login&nbsp;object.&nbsp;&nbsp;After&nbsp;that,&nbsp;the&nbsp;driver&nbsp;puts&nbsp;together&nbsp;a&nbsp;<BR>
table&nbsp;of&nbsp;commands&nbsp;which&nbsp;have&nbsp;been&nbsp;entered&nbsp;by&nbsp;users&nbsp;since&nbsp;the&nbsp;last&nbsp;cycle&nbsp;<BR>
of&nbsp;the&nbsp;driver.&nbsp;&nbsp;After&nbsp;the&nbsp;command&nbsp;table&nbsp;is&nbsp;assembled,&nbsp;all&nbsp;messages&nbsp;<BR>
scheduled&nbsp;to&nbsp;be&nbsp;sent&nbsp;to&nbsp;the&nbsp;connection&nbsp;from&nbsp;the&nbsp;last&nbsp;driver&nbsp;cycle&nbsp;are&nbsp;sent&nbsp;<BR>
out&nbsp;to&nbsp;the&nbsp;user.&nbsp;&nbsp;At&nbsp;this&nbsp;point,&nbsp;the&nbsp;driver&nbsp;goes&nbsp;through&nbsp;the&nbsp;table&nbsp;of&nbsp;<BR>
commands&nbsp;to&nbsp;be&nbsp;executed&nbsp;and&nbsp;executes&nbsp;each&nbsp;set&nbsp;of&nbsp;commands&nbsp;each&nbsp;<BR>
object&nbsp;has&nbsp;stored&nbsp;there.&nbsp;&nbsp;The&nbsp;driver&nbsp;ends&nbsp;its&nbsp;cycle&nbsp;by&nbsp;calling&nbsp;the&nbsp;function&nbsp;<BR>
heart_beat()&nbsp;in&nbsp;every&nbsp;object&nbsp;with&nbsp;a&nbsp;heart_beat()&nbsp;set&nbsp;and&nbsp;finally&nbsp;<BR>
performing&nbsp;all&nbsp;pending&nbsp;call&nbsp;outs.&nbsp;&nbsp;This&nbsp;chapter&nbsp;will&nbsp;not&nbsp;deal&nbsp;with&nbsp;the&nbsp;<BR>
handling&nbsp;of&nbsp;connections,&nbsp;but&nbsp;instead&nbsp;will&nbsp;focus&nbsp;on&nbsp;how&nbsp;the&nbsp;driver&nbsp;<BR>
handles&nbsp;user&nbsp;commands&nbsp;and&nbsp;heartbeats&nbsp;and&nbsp;call&nbsp;outs.&nbsp;<BR>
&nbsp;<BR>
2.3&nbsp;User&nbsp;Commands&nbsp;<BR>
As&nbsp;noted&nbsp;in&nbsp;section&nbsp;1.2,&nbsp;the&nbsp;driver&nbsp;stores&nbsp;a&nbsp;list&nbsp;of&nbsp;commands&nbsp;for&nbsp;each&nbsp;<BR>
user&nbsp;to&nbsp;be&nbsp;executed&nbsp;each&nbsp;cycle.&nbsp;&nbsp;The&nbsp;commands&nbsp;list&nbsp;has&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;<BR>
living&nbsp;object&nbsp;performing&nbsp;the&nbsp;command,&nbsp;the&nbsp;object&nbsp;which&nbsp;gave&nbsp;the&nbsp;living&nbsp;<BR>
object&nbsp;that&nbsp;command,&nbsp;and&nbsp;the&nbsp;function&nbsp;which&nbsp;is&nbsp;to&nbsp;be&nbsp;executed&nbsp;in&nbsp;order&nbsp;<BR>
to&nbsp;perform&nbsp;the&nbsp;command.&nbsp;&nbsp;The&nbsp;driver&nbsp;refers&nbsp;to&nbsp;the&nbsp;object&nbsp;which&nbsp;typed&nbsp;in&nbsp;<BR>
the&nbsp;command&nbsp;as&nbsp;the&nbsp;command&nbsp;giver.&nbsp;&nbsp;It&nbsp;is&nbsp;the&nbsp;command&nbsp;giver&nbsp;which&nbsp;<BR>
gets&nbsp;returned&nbsp;as&nbsp;this_player()&nbsp;in&nbsp;most&nbsp;cases.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;driver&nbsp;starts&nbsp;at&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;list&nbsp;of&nbsp;living&nbsp;objects&nbsp;with&nbsp;pending&nbsp;<BR>
commands,&nbsp;and&nbsp;successively&nbsp;performs&nbsp;each&nbsp;command&nbsp;it&nbsp;typed&nbsp;by&nbsp;calling&nbsp;<BR>
the&nbsp;function&nbsp;associated&nbsp;with&nbsp;the&nbsp;command&nbsp;and&nbsp;passing&nbsp;any&nbsp;arguments&nbsp;<BR>
the&nbsp;command&nbsp;giver&nbsp;gave&nbsp;as&nbsp;arguments&nbsp;to&nbsp;the&nbsp;function.&nbsp;&nbsp;As&nbsp;the&nbsp;driver&nbsp;<BR>
starts&nbsp;with&nbsp;the&nbsp;commands&nbsp;issued&nbsp;by&nbsp;a&nbsp;new&nbsp;living&nbsp;object,&nbsp;the&nbsp;command&nbsp;<BR>
giver&nbsp;variable&nbsp;is&nbsp;changed&nbsp;to&nbsp;be&nbsp;equal&nbsp;to&nbsp;the&nbsp;new&nbsp;living&nbsp;object,&nbsp;so&nbsp;that&nbsp;<BR>
during&nbsp;the&nbsp;sequence&nbsp;of&nbsp;functions&nbsp;initiated&nbsp;by&nbsp;that&nbsp;command,&nbsp;the&nbsp;efun&nbsp;<BR>
this_player()&nbsp;returns&nbsp;the&nbsp;object&nbsp;which&nbsp;issued&nbsp;the&nbsp;command.&nbsp;<BR>
&nbsp;<BR>
Let's&nbsp;look&nbsp;at&nbsp;the&nbsp;command&nbsp;buffer&nbsp;for&nbsp;an&nbsp;example&nbsp;player.&nbsp;&nbsp;Since&nbsp;the&nbsp;<BR>
execution&nbsp;of&nbsp;his&nbsp;last&nbsp;command,&nbsp;Bozo&nbsp;has&nbsp;typed&nbsp;&quot;north&quot;&nbsp;and&nbsp;&quot;tell&nbsp;<BR>
descartes&nbsp;when&nbsp;is&nbsp;the&nbsp;next&nbsp;reboot&quot;.&nbsp;&nbsp;The&nbsp;command&nbsp;&quot;north&quot;&nbsp;is&nbsp;associated&nbsp;<BR>
with&nbsp;the&nbsp;function&nbsp;&quot;Do_Move()&quot;&nbsp;in&nbsp;the&nbsp;room&nbsp;Bozo&nbsp;is&nbsp;in&nbsp;(the&nbsp;command&nbsp;<BR>
&quot;north&quot;&nbsp;is&nbsp;automatically&nbsp;setup&nbsp;by&nbsp;the&nbsp;set_exits()&nbsp;efun&nbsp;in&nbsp;that&nbsp;room).&nbsp;&nbsp;The&nbsp;<BR>
command&nbsp;&quot;tell&quot;&nbsp;is&nbsp;not&nbsp;specifically&nbsp;listed&nbsp;as&nbsp;a&nbsp;command&nbsp;for&nbsp;the&nbsp;player,&nbsp;<BR>
however,&nbsp;in&nbsp;the&nbsp;player&nbsp;object&nbsp;there&nbsp;is&nbsp;a&nbsp;function&nbsp;called&nbsp;&quot;cmd_hook()&quot;&nbsp;<BR>
which&nbsp;is&nbsp;associated&nbsp;with&nbsp;the&nbsp;command&nbsp;&quot;&quot;,&nbsp;which&nbsp;matches&nbsp;any&nbsp;possible&nbsp;<BR>
user&nbsp;input.&nbsp;<BR>
&nbsp;<BR>
Once&nbsp;the&nbsp;driver&nbsp;gets&nbsp;down&nbsp;to&nbsp;Bozo,&nbsp;the&nbsp;command&nbsp;giver&nbsp;variable&nbsp;is&nbsp;set&nbsp;to&nbsp;<BR>
the&nbsp;object&nbsp;which&nbsp;is&nbsp;Bozo.&nbsp;&nbsp;Then,&nbsp;seeing&nbsp;Bozo&nbsp;typed&nbsp;&quot;north&quot;&nbsp;and&nbsp;the&nbsp;<BR>
function&nbsp;&quot;north&quot;&nbsp;is&nbsp;associated&nbsp;with,&nbsp;the&nbsp;driver&nbsp;calls&nbsp;Bozo's_Room-&nbsp;<BR>
＞<I>Do_Move(0).&nbsp;&nbsp;An&nbsp;argument&nbsp;of&nbsp;0&nbsp;is&nbsp;passed&nbsp;to&nbsp;the&nbsp;function&nbsp;since&nbsp;Bozo&nbsp;</I><BR>
only&nbsp;typed&nbsp;the&nbsp;command&nbsp;&quot;north&quot;&nbsp;with&nbsp;no&nbsp;arguments.&nbsp;&nbsp;The&nbsp;room&nbsp;<BR>
naturally&nbsp;calls&nbsp;some&nbsp;functions&nbsp;it&nbsp;needs,&nbsp;all&nbsp;the&nbsp;while&nbsp;such&nbsp;that&nbsp;the&nbsp;efun&nbsp;<BR>
this_player()&nbsp;returns&nbsp;the&nbsp;object&nbsp;which&nbsp;is&nbsp;Bozo.&nbsp;&nbsp;Eventually,&nbsp;the&nbsp;room&nbsp;<BR>
object&nbsp;will&nbsp;call&nbsp;move_player()&nbsp;in&nbsp;Bozo,&nbsp;which&nbsp;in&nbsp;turn&nbsp;calls&nbsp;the&nbsp;<BR>
move_object()&nbsp;efun.&nbsp;&nbsp;This&nbsp;efun&nbsp;is&nbsp;responsible&nbsp;for&nbsp;changing&nbsp;an&nbsp;object's&nbsp;<BR>
environment.&nbsp;<BR>
&nbsp;<BR>
When&nbsp;the&nbsp;environment&nbsp;of&nbsp;an&nbsp;object&nbsp;changes,&nbsp;the&nbsp;commands&nbsp;available&nbsp;to&nbsp;<BR>
it&nbsp;from&nbsp;objects&nbsp;in&nbsp;its&nbsp;previous&nbsp;environment&nbsp;as&nbsp;well&nbsp;as&nbsp;from&nbsp;its&nbsp;previous&nbsp;<BR>
environment&nbsp;are&nbsp;removed&nbsp;from&nbsp;the&nbsp;object.&nbsp;&nbsp;Once&nbsp;that&nbsp;is&nbsp;done,&nbsp;the&nbsp;driver&nbsp;<BR>
calls&nbsp;the&nbsp;efun&nbsp;init()&nbsp;in&nbsp;the&nbsp;new&nbsp;environment&nbsp;as&nbsp;well&nbsp;as&nbsp;in&nbsp;each&nbsp;object&nbsp;in&nbsp;<BR>
the&nbsp;new&nbsp;environment.&nbsp;&nbsp;During&nbsp;each&nbsp;of&nbsp;these&nbsp;calls&nbsp;to&nbsp;init(),&nbsp;the&nbsp;object&nbsp;<BR>
Bozo&nbsp;is&nbsp;still&nbsp;the&nbsp;command&nbsp;giver.&nbsp;&nbsp;Thus&nbsp;all&nbsp;add_action()&nbsp;efuns&nbsp;from&nbsp;this&nbsp;<BR>
move&nbsp;will&nbsp;apply&nbsp;to&nbsp;Bozo.&nbsp;&nbsp;Once&nbsp;all&nbsp;those&nbsp;calls&nbsp;are&nbsp;done,&nbsp;control&nbsp;passes&nbsp;<BR>
back&nbsp;from&nbsp;the&nbsp;move_object()&nbsp;efun&nbsp;to&nbsp;the&nbsp;move_player()&nbsp;lfun&nbsp;in&nbsp;Bozo.&nbsp;&nbsp;<BR>
move_player()&nbsp;returns&nbsp;control&nbsp;back&nbsp;to&nbsp;Do_Move()&nbsp;in&nbsp;the&nbsp;old&nbsp;room,&nbsp;<BR>
which&nbsp;returns&nbsp;1&nbsp;to&nbsp;signify&nbsp;to&nbsp;the&nbsp;driver&nbsp;that&nbsp;the&nbsp;command&nbsp;action&nbsp;was&nbsp;<BR>
successful.&nbsp;&nbsp;If&nbsp;the&nbsp;Do_Move()&nbsp;function&nbsp;had&nbsp;returned&nbsp;0&nbsp;for&nbsp;some&nbsp;reason,&nbsp;<BR>
the&nbsp;driver&nbsp;would&nbsp;have&nbsp;written&nbsp;&quot;What?&quot;&nbsp;(or&nbsp;whatever&nbsp;your&nbsp;driver's&nbsp;<BR>
default&nbsp;bad&nbsp;command&nbsp;message&nbsp;is)&nbsp;to&nbsp;Bozo.&nbsp;<BR>
&nbsp;<BR>
Once&nbsp;the&nbsp;first&nbsp;command&nbsp;returns&nbsp;1,&nbsp;the&nbsp;driver&nbsp;proceeds&nbsp;on&nbsp;to&nbsp;Bozo's&nbsp;<BR>
second&nbsp;command,&nbsp;following&nbsp;much&nbsp;the&nbsp;same&nbsp;structure.&nbsp;&nbsp;Note&nbsp;that&nbsp;with&nbsp;<BR>
&quot;tell&nbsp;descartes&nbsp;when&nbsp;is&nbsp;the&nbsp;next&nbsp;reboot&quot;,&nbsp;the&nbsp;driver&nbsp;passes&nbsp;&quot;descartes&nbsp;<BR>
when&nbsp;is&nbsp;the&nbsp;next&nbsp;reboot&quot;&nbsp;to&nbsp;the&nbsp;function&nbsp;associated&nbsp;with&nbsp;tell.&nbsp;&nbsp;That&nbsp;<BR>
function&nbsp;in&nbsp;turn&nbsp;has&nbsp;to&nbsp;decide&nbsp;what&nbsp;to&nbsp;do&nbsp;with&nbsp;that&nbsp;argument.&nbsp;&nbsp;After&nbsp;that&nbsp;<BR>
command&nbsp;returns&nbsp;either&nbsp;1&nbsp;or&nbsp;0,&nbsp;the&nbsp;driver&nbsp;then&nbsp;proceeds&nbsp;on&nbsp;to&nbsp;the&nbsp;next&nbsp;<BR>
living&nbsp;object&nbsp;with&nbsp;commands&nbsp;pending,&nbsp;and&nbsp;so&nbsp;on&nbsp;until&nbsp;all&nbsp;living&nbsp;objects&nbsp;<BR>
with&nbsp;pending&nbsp;commands&nbsp;have&nbsp;had&nbsp;their&nbsp;commands&nbsp;performed.&nbsp;<BR>
&nbsp;<BR>
2.4&nbsp;The&nbsp;Efuns&nbsp;set_heart_beat()&nbsp;and&nbsp;call_out()&nbsp;<BR>
Once&nbsp;all&nbsp;commands&nbsp;are&nbsp;performed&nbsp;for&nbsp;objects&nbsp;with&nbsp;commands&nbsp;pending,&nbsp;<BR>
the&nbsp;driver&nbsp;then&nbsp;proceeds&nbsp;to&nbsp;call&nbsp;the&nbsp;heart_beat()&nbsp;function&nbsp;in&nbsp;all&nbsp;objects&nbsp;<BR>
listed&nbsp;with&nbsp;the&nbsp;driver&nbsp;as&nbsp;having&nbsp;heartbeats.&nbsp;&nbsp;Whenever&nbsp;an&nbsp;object&nbsp;calls&nbsp;the&nbsp;<BR>
efun&nbsp;set_heart_beat()&nbsp;with&nbsp;a&nbsp;non-zero&nbsp;argument&nbsp;(depending&nbsp;on&nbsp;your&nbsp;<BR>
driver,&nbsp;what&nbsp;non-zero&nbsp;number&nbsp;may&nbsp;be&nbsp;important,&nbsp;but&nbsp;in&nbsp;most&nbsp;cases&nbsp;you&nbsp;<BR>
call&nbsp;it&nbsp;with&nbsp;the&nbsp;int&nbsp;1).&nbsp;&nbsp;The&nbsp;efun&nbsp;set_heart_beat()&nbsp;adds&nbsp;the&nbsp;object&nbsp;which&nbsp;<BR>
calls&nbsp;set_heart_beat()&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;objects&nbsp;with&nbsp;heartbeats.&nbsp;&nbsp;If&nbsp;you&nbsp;call&nbsp;it&nbsp;<BR>
with&nbsp;an&nbsp;argument&nbsp;of&nbsp;0,&nbsp;then&nbsp;it&nbsp;removes&nbsp;the&nbsp;object&nbsp;from&nbsp;the&nbsp;list&nbsp;of&nbsp;objects&nbsp;<BR>
with&nbsp;heartbeats.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;most&nbsp;common&nbsp;use&nbsp;for&nbsp;heartbeats&nbsp;in&nbsp;the&nbsp;mudlib&nbsp;is&nbsp;to&nbsp;heal&nbsp;players&nbsp;and&nbsp;<BR>
monsters&nbsp;and&nbsp;perform&nbsp;combat.&nbsp;&nbsp;Once&nbsp;the&nbsp;driver&nbsp;has&nbsp;finished&nbsp;dealing&nbsp;with&nbsp;<BR>
the&nbsp;command&nbsp;list,&nbsp;it&nbsp;goes&nbsp;through&nbsp;the&nbsp;heartbeat&nbsp;list&nbsp;calling&nbsp;heart_beat()&nbsp;in&nbsp;<BR>
each&nbsp;object&nbsp;in&nbsp;the&nbsp;list.&nbsp;&nbsp;So&nbsp;for&nbsp;a&nbsp;player,&nbsp;for&nbsp;example,&nbsp;the&nbsp;driver&nbsp;will&nbsp;call&nbsp;<BR>
heart_beat()&nbsp;in&nbsp;the&nbsp;player&nbsp;which&nbsp;will:&nbsp;<BR>
1)&nbsp;age&nbsp;the&nbsp;player&nbsp;<BR>
2)&nbsp;heal&nbsp;the&nbsp;player&nbsp;according&nbsp;to&nbsp;a&nbsp;heal&nbsp;rate&nbsp;<BR>
3)&nbsp;check&nbsp;to&nbsp;see&nbsp;if&nbsp;there&nbsp;are&nbsp;any&nbsp;hunted,&nbsp;hunting,&nbsp;or&nbsp;attacking&nbsp;objects&nbsp;<BR>
around&nbsp;<BR>
4)&nbsp;perform&nbsp;an&nbsp;attack&nbsp;if&nbsp;step&nbsp;3&nbsp;returns&nbsp;true.&nbsp;<BR>
5)&nbsp;any&nbsp;other&nbsp;things&nbsp;which&nbsp;need&nbsp;to&nbsp;happen&nbsp;automatically&nbsp;roughly&nbsp;every&nbsp;<BR>
second&nbsp;<BR>
&nbsp;<BR>
Note&nbsp;that&nbsp;the&nbsp;more&nbsp;objects&nbsp;which&nbsp;have&nbsp;heartbeats,&nbsp;the&nbsp;more&nbsp;processing&nbsp;<BR>
which&nbsp;has&nbsp;to&nbsp;happen&nbsp;every&nbsp;cycle&nbsp;the&nbsp;mud&nbsp;is&nbsp;up.&nbsp;&nbsp;Objects&nbsp;with&nbsp;heartbeats&nbsp;<BR>
are&nbsp;thus&nbsp;known&nbsp;as&nbsp;the&nbsp;major&nbsp;hog&nbsp;of&nbsp;CPU&nbsp;time&nbsp;on&nbsp;muds.&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
The&nbsp;call_out()&nbsp;efun&nbsp;is&nbsp;used&nbsp;to&nbsp;perform&nbsp;timed&nbsp;function&nbsp;calls&nbsp;which&nbsp;do&nbsp;not&nbsp;<BR>
need&nbsp;to&nbsp;happen&nbsp;as&nbsp;often&nbsp;as&nbsp;heartbeats,&nbsp;or&nbsp;which&nbsp;just&nbsp;happen&nbsp;once.&nbsp;&nbsp;Call&nbsp;<BR>
outs&nbsp;let&nbsp;you&nbsp;specify&nbsp;the&nbsp;function&nbsp;in&nbsp;an&nbsp;object&nbsp;you&nbsp;want&nbsp;called.&nbsp;&nbsp;The&nbsp;<BR>
general&nbsp;formula&nbsp;for&nbsp;call&nbsp;outs&nbsp;is:&nbsp;<BR>
call_out(func,&nbsp;time,&nbsp;args);&nbsp;<BR>
The&nbsp;third&nbsp;argument&nbsp;specifying&nbsp;arguments&nbsp;is&nbsp;optional.&nbsp;&nbsp;The&nbsp;first&nbsp;argument&nbsp;<BR>
is&nbsp;a&nbsp;string&nbsp;representing&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;function&nbsp;to&nbsp;be&nbsp;called.&nbsp;&nbsp;The&nbsp;second&nbsp;<BR>
argument&nbsp;is&nbsp;how&nbsp;many&nbsp;seconds&nbsp;should&nbsp;pass&nbsp;before&nbsp;the&nbsp;function&nbsp;gets&nbsp;<BR>
called.&nbsp;<BR>
&nbsp;<BR>
Practically&nbsp;speaking,&nbsp;when&nbsp;an&nbsp;object&nbsp;calls&nbsp;call_out(),&nbsp;it&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;list&nbsp;<BR>
of&nbsp;objects&nbsp;with&nbsp;pending&nbsp;call&nbsp;outs&nbsp;with&nbsp;the&nbsp;amount&nbsp;of&nbsp;time&nbsp;of&nbsp;the&nbsp;call&nbsp;out&nbsp;<BR>
and&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;function&nbsp;to&nbsp;be&nbsp;called.&nbsp;&nbsp;Each&nbsp;cycle&nbsp;of&nbsp;the&nbsp;driver,&nbsp;the&nbsp;<BR>
time&nbsp;is&nbsp;counted&nbsp;down&nbsp;until&nbsp;it&nbsp;becomes&nbsp;time&nbsp;for&nbsp;the&nbsp;function&nbsp;to&nbsp;be&nbsp;called.&nbsp;&nbsp;<BR>
When&nbsp;the&nbsp;time&nbsp;comes,&nbsp;the&nbsp;driver&nbsp;removes&nbsp;the&nbsp;object&nbsp;from&nbsp;the&nbsp;list&nbsp;of&nbsp;<BR>
objects&nbsp;with&nbsp;pending&nbsp;call&nbsp;outs&nbsp;and&nbsp;performs&nbsp;the&nbsp;call&nbsp;to&nbsp;the&nbsp;call&nbsp;out&nbsp;<BR>
function,&nbsp;passing&nbsp;any&nbsp;special&nbsp;args&nbsp;originally&nbsp;specified&nbsp;by&nbsp;the&nbsp;call&nbsp;out&nbsp;<BR>
function.&nbsp;<BR>
&nbsp;<BR>
If&nbsp;you&nbsp;want&nbsp;a&nbsp;to&nbsp;remove&nbsp;a&nbsp;pending&nbsp;call&nbsp;before&nbsp;it&nbsp;occurs,&nbsp;you&nbsp;need&nbsp;to&nbsp;use&nbsp;<BR>
the&nbsp;remove_call_out()&nbsp;efun,&nbsp;passing&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;function&nbsp;being&nbsp;<BR>
called&nbsp;out.&nbsp;&nbsp;The&nbsp;driver&nbsp;will&nbsp;remove&nbsp;the&nbsp;next&nbsp;pending&nbsp;call&nbsp;out&nbsp;to&nbsp;that&nbsp;<BR>
function.&nbsp;&nbsp;This&nbsp;means&nbsp;you&nbsp;may&nbsp;have&nbsp;some&nbsp;ambiguity&nbsp;if&nbsp;more&nbsp;than&nbsp;one&nbsp;<BR>
call&nbsp;out&nbsp;is&nbsp;pending&nbsp;for&nbsp;the&nbsp;same&nbsp;function.&nbsp;<BR>
&nbsp;<BR>
In&nbsp;order&nbsp;to&nbsp;make&nbsp;a&nbsp;call&nbsp;out&nbsp;cyclical,&nbsp;you&nbsp;must&nbsp;reissue&nbsp;the&nbsp;call_out()&nbsp;efun&nbsp;<BR>
in&nbsp;the&nbsp;function&nbsp;you&nbsp;called&nbsp;out,&nbsp;since&nbsp;the&nbsp;driver&nbsp;automatically&nbsp;removes&nbsp;the&nbsp;<BR>
function&nbsp;from&nbsp;the&nbsp;call&nbsp;out&nbsp;table&nbsp;when&nbsp;a&nbsp;call&nbsp;out&nbsp;is&nbsp;performed.&nbsp;&nbsp;Example:&nbsp;<BR>
&nbsp;<BR>
void&nbsp;foo()&nbsp;{&nbsp;call_out(&quot;hello&quot;,&nbsp;10);&nbsp;}&nbsp;<BR>
&nbsp;<BR>
void&nbsp;hello()&nbsp;{&nbsp;call_out(&quot;hello&quot;,&nbsp;10);&nbsp;}&nbsp;<BR>
&nbsp;<BR>
will&nbsp;set&nbsp;up&nbsp;hello()&nbsp;to&nbsp;be&nbsp;called&nbsp;every&nbsp;10&nbsp;seconds&nbsp;after&nbsp;foo()&nbsp;is&nbsp;first&nbsp;called.&nbsp;&nbsp;<BR>
There&nbsp;are&nbsp;several&nbsp;things&nbsp;to&nbsp;be&nbsp;careful&nbsp;about&nbsp;here.&nbsp;&nbsp;First,&nbsp;you&nbsp;must&nbsp;watch&nbsp;<BR>
to&nbsp;make&nbsp;sure&nbsp;you&nbsp;do&nbsp;not&nbsp;structure&nbsp;your&nbsp;call&nbsp;outs&nbsp;to&nbsp;be&nbsp;recursive&nbsp;in&nbsp;any&nbsp;<BR>
unintended&nbsp;fashion.&nbsp;&nbsp;Second,&nbsp;compare&nbsp;what&nbsp;a&nbsp;set_heart_beat()&nbsp;does&nbsp;<BR>
when&nbsp;compared&nbsp;directly&nbsp;to&nbsp;what&nbsp;call_out()&nbsp;does.&nbsp;<BR>
&nbsp;<BR>
set_heart_beat():&nbsp;<BR>
a)&nbsp;Adds&nbsp;this_object()&nbsp;to&nbsp;a&nbsp;table&nbsp;listing&nbsp;objects&nbsp;with&nbsp;heartbeats.&nbsp;<BR>
b)&nbsp;The&nbsp;function&nbsp;heart_beat()&nbsp;in&nbsp;this_object()&nbsp;gets&nbsp;called&nbsp;every&nbsp;single&nbsp;<BR>
driver&nbsp;cycle.&nbsp;<BR>
&nbsp;<BR>
call_out():&nbsp;<BR>
a)&nbsp;Adds&nbsp;this_object(),&nbsp;the&nbsp;name&nbsp;of&nbsp;a&nbsp;function&nbsp;in&nbsp;this_object(),&nbsp;a&nbsp;time&nbsp;<BR>
delay,&nbsp;and&nbsp;a&nbsp;set&nbsp;of&nbsp;arguments&nbsp;to&nbsp;a&nbsp;table&nbsp;listing&nbsp;functions&nbsp;with&nbsp;pending&nbsp;<BR>
call&nbsp;outs.&nbsp;&nbsp;&nbsp;<BR>
b)&nbsp;The&nbsp;function&nbsp;named&nbsp;is&nbsp;called&nbsp;only&nbsp;once,&nbsp;and&nbsp;that&nbsp;call&nbsp;comes&nbsp;after&nbsp;the&nbsp;<BR>
specified&nbsp;delay.&nbsp;<BR>
&nbsp;<BR>
As&nbsp;you&nbsp;can&nbsp;see,&nbsp;there&nbsp;is&nbsp;a&nbsp;much&nbsp;greater&nbsp;memory&nbsp;overhead&nbsp;associated&nbsp;<BR>
with&nbsp;call&nbsp;outs&nbsp;for&nbsp;part&nbsp;(a),&nbsp;yet&nbsp;that&nbsp;there&nbsp;is&nbsp;a&nbsp;much&nbsp;greater&nbsp;CPU&nbsp;overhead&nbsp;<BR>
associated&nbsp;with&nbsp;heartbeats&nbsp;as&nbsp;shown&nbsp;in&nbsp;part&nbsp;(b),&nbsp;assuming&nbsp;that&nbsp;the&nbsp;delay&nbsp;<BR>
for&nbsp;the&nbsp;call&nbsp;out&nbsp;is&nbsp;greater&nbsp;than&nbsp;a&nbsp;single&nbsp;driver&nbsp;cycle.&nbsp;&nbsp;<BR>
&nbsp;<BR>
Clearly,&nbsp;you&nbsp;do&nbsp;not&nbsp;want&nbsp;to&nbsp;be&nbsp;issuing&nbsp;1&nbsp;second&nbsp;call&nbsp;outs,&nbsp;for&nbsp;then&nbsp;you&nbsp;<BR>
get&nbsp;the&nbsp;worst&nbsp;of&nbsp;both&nbsp;worlds.&nbsp;&nbsp;Similarly,&nbsp;you&nbsp;do&nbsp;not&nbsp;want&nbsp;to&nbsp;be&nbsp;having&nbsp;<BR>
heart&nbsp;beats&nbsp;in&nbsp;objects&nbsp;that&nbsp;can&nbsp;perform&nbsp;the&nbsp;same&nbsp;functions&nbsp;with&nbsp;call&nbsp;outs&nbsp;<BR>
of&nbsp;a&nbsp;greater&nbsp;duration&nbsp;than&nbsp;1&nbsp;second.&nbsp;&nbsp;I&nbsp;personally&nbsp;have&nbsp;heard&nbsp;much&nbsp;talk&nbsp;<BR>
about&nbsp;at&nbsp;what&nbsp;point&nbsp;you&nbsp;should&nbsp;use&nbsp;a&nbsp;call&nbsp;out&nbsp;over&nbsp;a&nbsp;heartbeat.&nbsp;&nbsp;What&nbsp;I&nbsp;<BR>
have&nbsp;mostly&nbsp;heard&nbsp;is&nbsp;that&nbsp;for&nbsp;single&nbsp;calls&nbsp;or&nbsp;for&nbsp;cycles&nbsp;of&nbsp;a&nbsp;duration&nbsp;<BR>
greater&nbsp;than&nbsp;10&nbsp;seconds,&nbsp;it&nbsp;is&nbsp;best&nbsp;to&nbsp;use&nbsp;a&nbsp;call&nbsp;out.&nbsp;&nbsp;For&nbsp;repetitive&nbsp;calls&nbsp;of&nbsp;<BR>
durations&nbsp;less&nbsp;than&nbsp;10&nbsp;seconds,&nbsp;you&nbsp;are&nbsp;better&nbsp;off&nbsp;using&nbsp;heartbeats.&nbsp;&nbsp;I&nbsp;do&nbsp;<BR>
not&nbsp;know&nbsp;if&nbsp;this&nbsp;is&nbsp;true,&nbsp;but&nbsp;I&nbsp;do&nbsp;not&nbsp;think&nbsp;following&nbsp;this&nbsp;can&nbsp;do&nbsp;any&nbsp;<BR>
harm.&nbsp;<BR>
&nbsp;<BR>
2.5&nbsp;Summary&nbsp;<BR>
Basic&nbsp;to&nbsp;a&nbsp;more&nbsp;in&nbsp;depth&nbsp;understanding&nbsp;of&nbsp;LPC&nbsp;is&nbsp;and&nbsp;understanding&nbsp;of&nbsp;<BR>
the&nbsp;way&nbsp;in&nbsp;which&nbsp;the&nbsp;driver&nbsp;interacts&nbsp;with&nbsp;the&nbsp;mudlib.&nbsp;&nbsp;You&nbsp;should&nbsp;now&nbsp;<BR>
understand&nbsp;the&nbsp;order&nbsp;in&nbsp;which&nbsp;the&nbsp;driver&nbsp;performs&nbsp;functions,&nbsp;as&nbsp;well&nbsp;as&nbsp;a&nbsp;<BR>
more&nbsp;detailed&nbsp;knowledge&nbsp;of&nbsp;the&nbsp;efuns&nbsp;this_player(),&nbsp;add_action(),&nbsp;and&nbsp;<BR>
move_object()&nbsp;and&nbsp;the&nbsp;lfun&nbsp;init().&nbsp;&nbsp;In&nbsp;addition&nbsp;to&nbsp;this&nbsp;building&nbsp;upon&nbsp;<BR>
knowledge&nbsp;you&nbsp;got&nbsp;from&nbsp;the&nbsp;LPC&nbsp;Basics&nbsp;textbook,&nbsp;this&nbsp;chapter&nbsp;has&nbsp;<BR>
introduced&nbsp;call&nbsp;outs&nbsp;and&nbsp;heartbeats&nbsp;and&nbsp;the&nbsp;manner&nbsp;in&nbsp;which&nbsp;the&nbsp;driver&nbsp;<BR>
handles&nbsp;them.&nbsp;&nbsp;You&nbsp;should&nbsp;now&nbsp;have&nbsp;a&nbsp;basic&nbsp;understanding&nbsp;of&nbsp;call&nbsp;outs&nbsp;<BR>
and&nbsp;heartbeats&nbsp;such&nbsp;that&nbsp;you&nbsp;can&nbsp;experiment&nbsp;with&nbsp;them&nbsp;in&nbsp;your&nbsp;realm&nbsp;<BR>
code.&nbsp;<BR>
&nbsp;<BR>
Copyright&nbsp;(c)&nbsp;George&nbsp;Reese&nbsp;1993&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
小樓一夜聽秋雨&nbsp;<BR>
--&nbsp;<BR>
佇倚危樓風細細&nbsp;望極春愁&nbsp;黯黯生天際&nbsp;&nbsp;草色煙光殘照裡&nbsp;無言誰會憑欄意[0&nbsp;<BR>
擬把疏狂圖一醉&nbsp;對酒當歌&nbsp;強樂還無味&nbsp;&nbsp;衣帶漸寬終不悔&nbsp;為伊消得人憔悴&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;166.111.5.25]&nbsp;<BR>
<A HREF="00000012.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000014.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>