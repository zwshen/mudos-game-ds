<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;Ranma&nbsp;(亂馬~~~~~~~無聊中),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Lpc&nbsp;basics&nbsp;(2)--The&nbsp;LPC&nbsp;Program&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Oct&nbsp;20&nbsp;09:04:53&nbsp;1997)&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC&nbsp;Basics&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Written&nbsp;by&nbsp;Descartes&nbsp;of&nbsp;Borg&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;edition:&nbsp;23&nbsp;april&nbsp;1993&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;second&nbsp;edition:&nbsp;16&nbsp;june&nbsp;1993&nbsp;<BR>
&nbsp;<BR>
CHAPTER&nbsp;2:&nbsp;The&nbsp;LPC&nbsp;Program&nbsp;<BR>
&nbsp;<BR>
2.1&nbsp;About&nbsp;programs&nbsp;<BR>
The&nbsp;title&nbsp;of&nbsp;this&nbsp;chapter&nbsp;of&nbsp;the&nbsp;textbook&nbsp;is&nbsp;actually&nbsp;poorly&nbsp;named,&nbsp;since&nbsp;<BR>
one&nbsp;does&nbsp;not&nbsp;write&nbsp;programs&nbsp;in&nbsp;LPC.&nbsp;&nbsp;An&nbsp;LPC&nbsp;coder&nbsp;instead&nbsp;writes&nbsp;*objects*.&nbsp;<BR>
What&nbsp;is&nbsp;the&nbsp;difference?&nbsp;&nbsp;Well,&nbsp;for&nbsp;our&nbsp;purposes&nbsp;now,&nbsp;the&nbsp;difference&nbsp;is&nbsp;<BR>
in&nbsp;the&nbsp;way&nbsp;the&nbsp;file&nbsp;is&nbsp;executed.&nbsp;&nbsp;When&nbsp;you&nbsp;&quot;run&quot;&nbsp;a&nbsp;program,&nbsp;execution&nbsp;<BR>
begins&nbsp;at&nbsp;a&nbsp;definite&nbsp;place&nbsp;in&nbsp;the&nbsp;program.&nbsp;&nbsp;In&nbsp;other&nbsp;words,&nbsp;there&nbsp;<BR>
is&nbsp;a&nbsp;place&nbsp;in&nbsp;all&nbsp;programs&nbsp;that&nbsp;is&nbsp;noted&nbsp;as&nbsp;the&nbsp;beginning&nbsp;where&nbsp;program&nbsp;<BR>
execution&nbsp;starts.&nbsp;&nbsp;In&nbsp;addition,&nbsp;programs&nbsp;have&nbsp;definite&nbsp;end&nbsp;points,&nbsp;<BR>
so&nbsp;that&nbsp;when&nbsp;execution&nbsp;reaches&nbsp;that&nbsp;point,&nbsp;the&nbsp;execution&nbsp;of&nbsp;the&nbsp;program&nbsp;<BR>
terminates.&nbsp;&nbsp;So,&nbsp;in&nbsp;short,&nbsp;execution&nbsp;of&nbsp;a&nbsp;program&nbsp;runs&nbsp;from&nbsp;a&nbsp;definite&nbsp;<BR>
beginning&nbsp;point&nbsp;through&nbsp;to&nbsp;a&nbsp;definite&nbsp;end&nbsp;point.&nbsp;&nbsp;This&nbsp;is&nbsp;not&nbsp;so&nbsp;with&nbsp;<BR>
LPC&nbsp;objects.&nbsp;<BR>
&nbsp;<BR>
With&nbsp;muds,&nbsp;LPC&nbsp;objects&nbsp;are&nbsp;simply&nbsp;distinct&nbsp;parts&nbsp;of&nbsp;the&nbsp;C&nbsp;program&nbsp;which&nbsp;<BR>
is&nbsp;running&nbsp;the&nbsp;game&nbsp;(the&nbsp;driver).&nbsp;&nbsp;In&nbsp;other&nbsp;words,&nbsp;execution&nbsp;of&nbsp;the&nbsp;mud&nbsp;<BR>
program&nbsp;begins&nbsp;and&nbsp;ends&nbsp;in&nbsp;the&nbsp;driver.&nbsp;&nbsp;But&nbsp;the&nbsp;driver&nbsp;in&nbsp;fact&nbsp;does&nbsp;<BR>
very&nbsp;little&nbsp;in&nbsp;the&nbsp;way&nbsp;of&nbsp;creating&nbsp;the&nbsp;world&nbsp;you&nbsp;know&nbsp;when&nbsp;you&nbsp;play&nbsp;<BR>
a&nbsp;mud.&nbsp;&nbsp;Instead,&nbsp;the&nbsp;driver&nbsp;relies&nbsp;heavily&nbsp;on&nbsp;the&nbsp;code&nbsp;created&nbsp;in&nbsp;LPC,&nbsp;<BR>
executing&nbsp;lines&nbsp;of&nbsp;the&nbsp;objects&nbsp;in&nbsp;the&nbsp;mud&nbsp;as&nbsp;needed.&nbsp;&nbsp;LPC&nbsp;objects&nbsp;thus&nbsp;<BR>
have&nbsp;no&nbsp;place&nbsp;that&nbsp;is&nbsp;necessarily&nbsp;the&nbsp;beginning&nbsp;point,&nbsp;nor&nbsp;do&nbsp;they&nbsp;<BR>
have&nbsp;a&nbsp;definite&nbsp;ending&nbsp;point.&nbsp;<BR>
&nbsp;<BR>
Like&nbsp;other&nbsp;programming&nbsp;languages,&nbsp;an&nbsp;LPC&nbsp;&quot;program&quot;&nbsp;may&nbsp;be&nbsp;made&nbsp;up&nbsp;of&nbsp;<BR>
one&nbsp;or&nbsp;more&nbsp;files.&nbsp;&nbsp;For&nbsp;an&nbsp;LPC&nbsp;object&nbsp;to&nbsp;get&nbsp;executed,&nbsp;it&nbsp;simple&nbsp;<BR>
needs&nbsp;to&nbsp;be&nbsp;loaded&nbsp;into&nbsp;the&nbsp;driver's&nbsp;memory.&nbsp;&nbsp;The&nbsp;driver&nbsp;will&nbsp;call&nbsp;lines&nbsp;<BR>
from&nbsp;the&nbsp;object&nbsp;as&nbsp;it&nbsp;needs&nbsp;according&nbsp;to&nbsp;a&nbsp;structure&nbsp;which&nbsp;will&nbsp;be&nbsp;<BR>
defined&nbsp;throughout&nbsp;this&nbsp;textbook.&nbsp;&nbsp;The&nbsp;important&nbsp;thing&nbsp;you&nbsp;need&nbsp;to&nbsp;<BR>
understand&nbsp;at&nbsp;this&nbsp;point&nbsp;is&nbsp;that&nbsp;there&nbsp;is&nbsp;no&nbsp;&quot;beginning&quot;&nbsp;to&nbsp;an&nbsp;LPC&nbsp;<BR>
object&nbsp;in&nbsp;terms&nbsp;of&nbsp;execution,&nbsp;and&nbsp;there&nbsp;is&nbsp;no&nbsp;&quot;end&quot;.&nbsp;<BR>
&nbsp;<BR>
2.2&nbsp;Driver-mudlib&nbsp;interaction&nbsp;<BR>
As&nbsp;I&nbsp;have&nbsp;mentioned&nbsp;earlier,&nbsp;the&nbsp;driver&nbsp;is&nbsp;the&nbsp;C&nbsp;program&nbsp;that&nbsp;runs&nbsp;on&nbsp;<BR>
the&nbsp;host&nbsp;machine.&nbsp;&nbsp;It&nbsp;connects&nbsp;you&nbsp;into&nbsp;the&nbsp;game&nbsp;and&nbsp;processes&nbsp;LPC&nbsp;code.&nbsp;<BR>
Note&nbsp;that&nbsp;this&nbsp;is&nbsp;one&nbsp;theory&nbsp;of&nbsp;mud&nbsp;programming,&nbsp;and&nbsp;not&nbsp;necessarily&nbsp;<BR>
better&nbsp;than&nbsp;others.&nbsp;&nbsp;It&nbsp;could&nbsp;be&nbsp;that&nbsp;the&nbsp;entire&nbsp;game&nbsp;is&nbsp;written&nbsp;in&nbsp;C.&nbsp;<BR>
Such&nbsp;a&nbsp;game&nbsp;would&nbsp;be&nbsp;much&nbsp;faster,&nbsp;but&nbsp;it&nbsp;would&nbsp;be&nbsp;less&nbsp;flexible&nbsp;in&nbsp;<BR>
that&nbsp;wizards&nbsp;could&nbsp;not&nbsp;add&nbsp;things&nbsp;to&nbsp;the&nbsp;game&nbsp;while&nbsp;it&nbsp;was&nbsp;running.&nbsp;This&nbsp;<BR>
is&nbsp;the&nbsp;theory&nbsp;behind&nbsp;DikuMUDs.&nbsp;&nbsp;Instead,&nbsp;LPMUDs&nbsp;run&nbsp;on&nbsp;the&nbsp;theory&nbsp;that&nbsp;<BR>
the&nbsp;driver&nbsp;should&nbsp;in&nbsp;no&nbsp;define&nbsp;the&nbsp;nature&nbsp;of&nbsp;the&nbsp;game,&nbsp;that&nbsp;the&nbsp;nature&nbsp;<BR>
of&nbsp;the&nbsp;game&nbsp;is&nbsp;to&nbsp;be&nbsp;decided&nbsp;by&nbsp;the&nbsp;individuals&nbsp;involved,&nbsp;and&nbsp;that&nbsp;<BR>
you&nbsp;should&nbsp;be&nbsp;able&nbsp;to&nbsp;add&nbsp;to&nbsp;the&nbsp;game&nbsp;*as&nbsp;it&nbsp;is&nbsp;being&nbsp;played*.&nbsp;&nbsp;This&nbsp;<BR>
is&nbsp;why&nbsp;LPMUDs&nbsp;make&nbsp;use&nbsp;of&nbsp;the&nbsp;LPC&nbsp;programming&nbsp;language.&nbsp;&nbsp;It&nbsp;allows&nbsp;<BR>
you&nbsp;to&nbsp;define&nbsp;the&nbsp;nature&nbsp;of&nbsp;the&nbsp;game&nbsp;in&nbsp;LPC&nbsp;for&nbsp;the&nbsp;driver&nbsp;to&nbsp;read&nbsp;and&nbsp;<BR>
execute&nbsp;as&nbsp;needed.&nbsp;&nbsp;It&nbsp;is&nbsp;also&nbsp;a&nbsp;much&nbsp;simpler&nbsp;language&nbsp;to&nbsp;understand&nbsp;<BR>
than&nbsp;C,&nbsp;thus&nbsp;making&nbsp;the&nbsp;process&nbsp;of&nbsp;world&nbsp;creation&nbsp;open&nbsp;to&nbsp;a&nbsp;greater&nbsp;<BR>
number&nbsp;of&nbsp;people.&nbsp;<BR>
&nbsp;<BR>
Once&nbsp;you&nbsp;have&nbsp;written&nbsp;a&nbsp;file&nbsp;in&nbsp;LPC&nbsp;(assuming&nbsp;it&nbsp;is&nbsp;corrent&nbsp;LPC&nbsp;),&nbsp;it&nbsp;justs&nbsp;<BR>
sits&nbsp;there&nbsp;on&nbsp;the&nbsp;host&nbsp;machine's&nbsp;hard&nbsp;drive&nbsp;until&nbsp;something&nbsp;in&nbsp;the&nbsp;game&nbsp;<BR>
makes&nbsp;reference&nbsp;to&nbsp;it.&nbsp;&nbsp;When&nbsp;something&nbsp;in&nbsp;the&nbsp;game&nbsp;finally&nbsp;does&nbsp;make&nbsp;<BR>
reference&nbsp;to&nbsp;the&nbsp;object,&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;file&nbsp;is&nbsp;loaded&nbsp;into&nbsp;memory&nbsp;and&nbsp;<BR>
a&nbsp;special&nbsp;*function*&nbsp;of&nbsp;that&nbsp;object&nbsp;is&nbsp;called&nbsp;in&nbsp;order&nbsp;to&nbsp;initialize&nbsp;<BR>
the&nbsp;values&nbsp;of&nbsp;the&nbsp;variables&nbsp;in&nbsp;the&nbsp;object.&nbsp;&nbsp;Now,&nbsp;do&nbsp;not&nbsp;be&nbsp;concerned&nbsp;<BR>
if&nbsp;that&nbsp;last&nbsp;sentence&nbsp;went&nbsp;right&nbsp;over&nbsp;your&nbsp;head,&nbsp;since&nbsp;someone&nbsp;brand&nbsp;<BR>
new&nbsp;to&nbsp;programming&nbsp;would&nbsp;not&nbsp;know&nbsp;what&nbsp;the&nbsp;hell&nbsp;a&nbsp;function&nbsp;or&nbsp;a&nbsp;variable&nbsp;<BR>
is.&nbsp;&nbsp;The&nbsp;important&nbsp;thing&nbsp;to&nbsp;understand&nbsp;right&nbsp;now&nbsp;is&nbsp;that&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;<BR>
object&nbsp;file&nbsp;is&nbsp;taken&nbsp;by&nbsp;the&nbsp;driver&nbsp;from&nbsp;the&nbsp;machine's&nbsp;hard&nbsp;drive&nbsp;and&nbsp;<BR>
stored&nbsp;into&nbsp;memory&nbsp;(since&nbsp;it&nbsp;is&nbsp;a&nbsp;copy,&nbsp;multiple&nbsp;versions&nbsp;of&nbsp;that&nbsp;<BR>
object&nbsp;may&nbsp;exist).&nbsp;&nbsp;You&nbsp;will&nbsp;later&nbsp;understand&nbsp;what&nbsp;a&nbsp;function&nbsp;is,&nbsp;what&nbsp;<BR>
a&nbsp;variable&nbsp;is,&nbsp;and&nbsp;exactly&nbsp;how&nbsp;it&nbsp;is&nbsp;something&nbsp;in&nbsp;the&nbsp;game&nbsp;made&nbsp;reference&nbsp;<BR>
to&nbsp;your&nbsp;object.&nbsp;<BR>
&nbsp;<BR>
2.3&nbsp;Loading&nbsp;an&nbsp;object&nbsp;into&nbsp;memory&nbsp;<BR>
Although&nbsp;there&nbsp;is&nbsp;no&nbsp;particular&nbsp;place&nbsp;in&nbsp;an&nbsp;object&nbsp;code&nbsp;that&nbsp;must&nbsp;exist&nbsp;<BR>
in&nbsp;order&nbsp;for&nbsp;the&nbsp;driver&nbsp;to&nbsp;begin&nbsp;executing&nbsp;it,&nbsp;there&nbsp;is&nbsp;a&nbsp;place&nbsp;for&nbsp;which&nbsp;<BR>
the&nbsp;driver&nbsp;will&nbsp;search&nbsp;in&nbsp;order&nbsp;to&nbsp;initialize&nbsp;the&nbsp;object.&nbsp;&nbsp;On&nbsp;compat&nbsp;&nbsp;<BR>
drivers,&nbsp;it&nbsp;is&nbsp;the&nbsp;function&nbsp;called&nbsp;reset().&nbsp;&nbsp;On&nbsp;native&nbsp;muds&nbsp;it&nbsp;is&nbsp;the&nbsp;<BR>
function&nbsp;called&nbsp;create().&nbsp;<BR>
&nbsp;<BR>
LPC&nbsp;objects&nbsp;are&nbsp;made&nbsp;up&nbsp;of&nbsp;variables&nbsp;(values&nbsp;which&nbsp;can&nbsp;change)&nbsp;and&nbsp;<BR>
functions&nbsp;which&nbsp;are&nbsp;used&nbsp;to&nbsp;manipulate&nbsp;those&nbsp;variables.&nbsp;&nbsp;Functions&nbsp;<BR>
manipulate&nbsp;variables&nbsp;through&nbsp;the&nbsp;use&nbsp;of&nbsp;LPC&nbsp;grammatical&nbsp;structures,&nbsp;<BR>
which&nbsp;include&nbsp;calling&nbsp;other&nbsp;functions,&nbsp;using&nbsp;externally&nbsp;defined&nbsp;<BR>
functions&nbsp;(efuns),&nbsp;and&nbsp;basic&nbsp;LPC&nbsp;expressions&nbsp;and&nbsp;flow&nbsp;control&nbsp;&nbsp;<BR>
mechanisms.&nbsp;<BR>
&nbsp;<BR>
Does&nbsp;that&nbsp;sound&nbsp;convoluted?&nbsp;&nbsp;First&nbsp;lets&nbsp;start&nbsp;with&nbsp;a&nbsp;variable.&nbsp;&nbsp;A&nbsp;<BR>
variable&nbsp;might&nbsp;be&nbsp;something&nbsp;like:&nbsp;level.&nbsp;&nbsp;It&nbsp;can&nbsp;&quot;vary&quot;&nbsp;from&nbsp;sitation&nbsp;<BR>
to&nbsp;situation&nbsp;in&nbsp;value,&nbsp;and&nbsp;different&nbsp;things&nbsp;use&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;player's&nbsp;<BR>
level&nbsp;to&nbsp;make&nbsp;different&nbsp;things&nbsp;happen.&nbsp;&nbsp;For&nbsp;instance,&nbsp;if&nbsp;you&nbsp;are&nbsp;a&nbsp;<BR>
level&nbsp;19&nbsp;player,&nbsp;the&nbsp;value&nbsp;of&nbsp;the&nbsp;variable&nbsp;level&nbsp;will&nbsp;be&nbsp;19.&nbsp;&nbsp;Now&nbsp;<BR>
if&nbsp;your&nbsp;mud&nbsp;is&nbsp;on&nbsp;the&nbsp;old&nbsp;LPMud&nbsp;2.4.5&nbsp;system&nbsp;where&nbsp;levels&nbsp;1-19&nbsp;are&nbsp;<BR>
players&nbsp;and&nbsp;20+&nbsp;are&nbsp;wizards,&nbsp;things&nbsp;can&nbsp;ask&nbsp;for&nbsp;your&nbsp;level&nbsp;value&nbsp;to&nbsp;<BR>
see&nbsp;if&nbsp;you&nbsp;can&nbsp;perform&nbsp;wizard&nbsp;type&nbsp;actions.&nbsp;&nbsp;Basically,&nbsp;each&nbsp;object&nbsp;<BR>
in&nbsp;LPC&nbsp;is&nbsp;a&nbsp;pile&nbsp;of&nbsp;variables&nbsp;with&nbsp;values&nbsp;which&nbsp;change&nbsp;over&nbsp;time.&nbsp;<BR>
Things&nbsp;happen&nbsp;to&nbsp;these&nbsp;objects&nbsp;based&nbsp;on&nbsp;what&nbsp;values&nbsp;its&nbsp;variables&nbsp;<BR>
hold.&nbsp;&nbsp;Often,&nbsp;then&nbsp;things&nbsp;that&nbsp;happen&nbsp;cause&nbsp;the&nbsp;variables&nbsp;to&nbsp;change.&nbsp;<BR>
&nbsp;<BR>
So,&nbsp;whenever&nbsp;an&nbsp;object&nbsp;in&nbsp;LPC&nbsp;is&nbsp;referenced&nbsp;by&nbsp;another&nbsp;object&nbsp;currently&nbsp;<BR>
in&nbsp;memory,&nbsp;the&nbsp;driver&nbsp;searches&nbsp;to&nbsp;see&nbsp;what&nbsp;places&nbsp;for&nbsp;values&nbsp;the&nbsp;<BR>
object&nbsp;has&nbsp;(but&nbsp;they&nbsp;have&nbsp;no&nbsp;values&nbsp;yet).&nbsp;&nbsp;Once&nbsp;that&nbsp;is&nbsp;done,&nbsp;the&nbsp;driver&nbsp;<BR>
calls&nbsp;a&nbsp;function&nbsp;in&nbsp;the&nbsp;object&nbsp;called&nbsp;reset()&nbsp;or&nbsp;create()&nbsp;(depending&nbsp;<BR>
on&nbsp;your&nbsp;driver)&nbsp;which&nbsp;will&nbsp;set&nbsp;up&nbsp;the&nbsp;starting&nbsp;values&nbsp;for&nbsp;the&nbsp;object's&nbsp;<BR>
variables.&nbsp;&nbsp;It&nbsp;is&nbsp;thus&nbsp;through&nbsp;*calls*&nbsp;to&nbsp;*functions*&nbsp;that&nbsp;variable&nbsp;<BR>
values&nbsp;get&nbsp;manipulated.&nbsp;<BR>
&nbsp;<BR>
But&nbsp;create()&nbsp;or&nbsp;reset()&nbsp;is&nbsp;NOT&nbsp;the&nbsp;starting&nbsp;place&nbsp;of&nbsp;LPC&nbsp;code,&nbsp;although&nbsp;<BR>
it&nbsp;is&nbsp;where&nbsp;most&nbsp;LPC&nbsp;code&nbsp;execution&nbsp;does&nbsp;begin.&nbsp;&nbsp;The&nbsp;fact&nbsp;is,&nbsp;those&nbsp;<BR>
functions&nbsp;need&nbsp;not&nbsp;exist.&nbsp;&nbsp;If&nbsp;your&nbsp;object&nbsp;does&nbsp;just&nbsp;fine&nbsp;with&nbsp;its&nbsp;<BR>
starting&nbsp;values&nbsp;all&nbsp;being&nbsp;NULL&nbsp;pointers&nbsp;(meaning,&nbsp;for&nbsp;our&nbsp;purposes&nbsp;<BR>
here,&nbsp;0),&nbsp;then&nbsp;you&nbsp;do&nbsp;not&nbsp;need&nbsp;a&nbsp;create()&nbsp;or&nbsp;reset()&nbsp;function.&nbsp;&nbsp;Thus&nbsp;<BR>
the&nbsp;first&nbsp;bit&nbsp;of&nbsp;execution&nbsp;of&nbsp;the&nbsp;object's&nbsp;code&nbsp;may&nbsp;begin&nbsp;somewhere&nbsp;<BR>
completely&nbsp;different.&nbsp;<BR>
&nbsp;<BR>
Now&nbsp;we&nbsp;get&nbsp;to&nbsp;what&nbsp;this&nbsp;chapter&nbsp;is&nbsp;all&nbsp;about.&nbsp;&nbsp;The&nbsp;question:&nbsp;What&nbsp;<BR>
consists&nbsp;a&nbsp;complete&nbsp;LPC&nbsp;object?&nbsp;&nbsp;Well,&nbsp;an&nbsp;LPC&nbsp;object&nbsp;is&nbsp;simply&nbsp;<BR>
one&nbsp;or&nbsp;more&nbsp;functions&nbsp;grouped&nbsp;together&nbsp;manipulating&nbsp;0&nbsp;or&nbsp;more&nbsp;<BR>
variables.&nbsp;&nbsp;The&nbsp;order&nbsp;in&nbsp;which&nbsp;functions&nbsp;are&nbsp;placed&nbsp;in&nbsp;an&nbsp;object&nbsp;<BR>
relative&nbsp;to&nbsp;one&nbsp;another&nbsp;is&nbsp;irrelevant.&nbsp;&nbsp;In&nbsp;other&nbsp;words:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
void&nbsp;init()&nbsp;{&nbsp;add_action(&quot;smile&quot;,&nbsp;&quot;smile&quot;);&nbsp;}&nbsp;<BR>
&nbsp;<BR>
void&nbsp;create()&nbsp;{&nbsp;return;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
int&nbsp;smile(string&nbsp;str)&nbsp;{&nbsp;return&nbsp;0;&nbsp;}&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
is&nbsp;exactly&nbsp;the&nbsp;same&nbsp;as:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
void&nbsp;create()&nbsp;{&nbsp;return;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
int&nbsp;smile(string&nbsp;str)&nbsp;{&nbsp;return&nbsp;0;&nbsp;}&nbsp;<BR>
&nbsp;<BR>
void&nbsp;init()&nbsp;{&nbsp;add_action(&quot;smile&quot;,&nbsp;&quot;smile&quot;);&nbsp;}&nbsp;<BR>
_____&nbsp;<BR>
&nbsp;<BR>
Also&nbsp;important&nbsp;to&nbsp;note,&nbsp;the&nbsp;object&nbsp;containing&nbsp;only:&nbsp;<BR>
&nbsp;<BR>
-----&nbsp;<BR>
void&nbsp;nonsense()&nbsp;{}&nbsp;<BR>
-----&nbsp;<BR>
&nbsp;<BR>
is&nbsp;a&nbsp;valid,&nbsp;but&nbsp;trivial&nbsp;object,&nbsp;although&nbsp;it&nbsp;probably&nbsp;would&nbsp;not&nbsp;interact&nbsp;<BR>
properly&nbsp;with&nbsp;other&nbsp;objects&nbsp;on&nbsp;your&nbsp;mud&nbsp;since&nbsp;such&nbsp;an&nbsp;object&nbsp;has&nbsp;no&nbsp;<BR>
weight,&nbsp;is&nbsp;invisible,&nbsp;etc..&nbsp;<BR>
&nbsp;<BR>
2.4&nbsp;Chapter&nbsp;summary&nbsp;<BR>
LPC&nbsp;code&nbsp;has&nbsp;no&nbsp;beginning&nbsp;point&nbsp;or&nbsp;ending&nbsp;point,&nbsp;since&nbsp;LPC&nbsp;code&nbsp;is&nbsp;used&nbsp;<BR>
to&nbsp;create&nbsp;objects&nbsp;to&nbsp;be&nbsp;used&nbsp;by&nbsp;the&nbsp;driver&nbsp;program&nbsp;rather&nbsp;than&nbsp;create&nbsp;<BR>
individual&nbsp;programs.&nbsp;&nbsp;LPC&nbsp;objects&nbsp;consist&nbsp;of&nbsp;one&nbsp;or&nbsp;more&nbsp;functions&nbsp;whose&nbsp;<BR>
order&nbsp;in&nbsp;the&nbsp;code&nbsp;is&nbsp;irrelevant,&nbsp;as&nbsp;well&nbsp;as&nbsp;of&nbsp;zero&nbsp;or&nbsp;more&nbsp;variables&nbsp;whose&nbsp;<BR>
values&nbsp;are&nbsp;manipulated&nbsp;inside&nbsp;those&nbsp;functions.&nbsp;&nbsp;LPC&nbsp;objects&nbsp;simply&nbsp;sit&nbsp;<BR>
on&nbsp;the&nbsp;host&nbsp;machine's&nbsp;hard&nbsp;driver&nbsp;until&nbsp;referenced&nbsp;by&nbsp;another&nbsp;object&nbsp;in&nbsp;<BR>
the&nbsp;game&nbsp;(in&nbsp;other&nbsp;words,&nbsp;they&nbsp;do&nbsp;not&nbsp;really&nbsp;exist).&nbsp;&nbsp;Once&nbsp;the&nbsp;object&nbsp;<BR>
is&nbsp;referenced,&nbsp;it&nbsp;is&nbsp;loaded&nbsp;into&nbsp;the&nbsp;machine's&nbsp;memory&nbsp;with&nbsp;empty&nbsp;<BR>
values&nbsp;for&nbsp;the&nbsp;variables.&nbsp;&nbsp;The&nbsp;function&nbsp;reset()&nbsp;in&nbsp;compat&nbsp;muds&nbsp;or&nbsp;<BR>
create()&nbsp;in&nbsp;native&nbsp;muds&nbsp;is&nbsp;called&nbsp;in&nbsp;that&nbsp;object&nbsp;if&nbsp;it&nbsp;exists&nbsp;to&nbsp;allow&nbsp;<BR>
the&nbsp;variables&nbsp;to&nbsp;take&nbsp;on&nbsp;initial&nbsp;values.&nbsp;&nbsp;Other&nbsp;functions&nbsp;in&nbsp;the&nbsp;object&nbsp;<BR>
are&nbsp;used&nbsp;by&nbsp;the&nbsp;driver&nbsp;and&nbsp;other&nbsp;objects&nbsp;in&nbsp;the&nbsp;game&nbsp;to&nbsp;allow&nbsp;interaction&nbsp;<BR>
among&nbsp;objects&nbsp;and&nbsp;the&nbsp;manipulation&nbsp;of&nbsp;the&nbsp;LPC&nbsp;variables.&nbsp;<BR>
&nbsp;<BR>
A&nbsp;note&nbsp;on&nbsp;reset()&nbsp;and&nbsp;create():&nbsp;<BR>
create()&nbsp;is&nbsp;only&nbsp;used&nbsp;by&nbsp;muds&nbsp;in&nbsp;native&nbsp;mode&nbsp;(see&nbsp;the&nbsp;textbook&nbsp;Introduction&nbsp;<BR>
for&nbsp;more&nbsp;information&nbsp;on&nbsp;native&nbsp;mode&nbsp;vs.&nbsp;compat&nbsp;mode).&nbsp;&nbsp;It&nbsp;is&nbsp;only&nbsp;used&nbsp;<BR>
to&nbsp;initialize&nbsp;newly&nbsp;referenced&nbsp;objects.&nbsp;<BR>
&nbsp;<BR>
reset()&nbsp;is&nbsp;used&nbsp;by&nbsp;both&nbsp;muds&nbsp;in&nbsp;compat&nbsp;mode&nbsp;and&nbsp;native&nbsp;mode.&nbsp;&nbsp;In&nbsp;compat&nbsp;<BR>
mode,&nbsp;reset()&nbsp;performs&nbsp;two&nbsp;functions.&nbsp;&nbsp;First,&nbsp;it&nbsp;is&nbsp;used&nbsp;to&nbsp;initialize&nbsp;<BR>
newly&nbsp;referenced&nbsp;objects.&nbsp;&nbsp;In&nbsp;addition,&nbsp;however,&nbsp;compat&nbsp;mode&nbsp;muds&nbsp;use&nbsp;<BR>
reset()&nbsp;to&nbsp;&quot;reset&quot;&nbsp;the&nbsp;object.&nbsp;&nbsp;In&nbsp;other&nbsp;words,&nbsp;return&nbsp;it&nbsp;to&nbsp;its&nbsp;initial&nbsp;<BR>
state&nbsp;of&nbsp;affairs.&nbsp;&nbsp;This&nbsp;allows&nbsp;monsters&nbsp;to&nbsp;regenerate&nbsp;in&nbsp;a&nbsp;room&nbsp;and&nbsp;doors&nbsp;<BR>
to&nbsp;start&nbsp;back&nbsp;in&nbsp;the&nbsp;shut&nbsp;position,&nbsp;etc..&nbsp;&nbsp;Native&nbsp;mode&nbsp;muds&nbsp;use&nbsp;reset()&nbsp;<BR>
to&nbsp;perform&nbsp;the&nbsp;second&nbsp;function&nbsp;(as&nbsp;its&nbsp;name&nbsp;implies).&nbsp;<BR>
&nbsp;<BR>
So&nbsp;there&nbsp;are&nbsp;two&nbsp;important&nbsp;things&nbsp;which&nbsp;happen&nbsp;in&nbsp;LP&nbsp;style&nbsp;muds&nbsp;which&nbsp;<BR>
cause&nbsp;the&nbsp;driver&nbsp;to&nbsp;make&nbsp;calls&nbsp;to&nbsp;functions&nbsp;in&nbsp;objects.&nbsp;&nbsp;The&nbsp;first&nbsp;is&nbsp;<BR>
the&nbsp;creation&nbsp;of&nbsp;the&nbsp;object.&nbsp;&nbsp;At&nbsp;this&nbsp;time,&nbsp;the&nbsp;driver&nbsp;calls&nbsp;a&nbsp;function&nbsp;<BR>
to&nbsp;initalize&nbsp;the&nbsp;values&nbsp;in&nbsp;the&nbsp;object.&nbsp;&nbsp;For&nbsp;compat&nbsp;mode&nbsp;muds,&nbsp;this&nbsp;<BR>
is&nbsp;performed&nbsp;by&nbsp;the&nbsp;function&nbsp;named&nbsp;reset()&nbsp;(with&nbsp;an&nbsp;argument&nbsp;of&nbsp;0,&nbsp;<BR>
more&nbsp;on&nbsp;this&nbsp;later&nbsp;though).&nbsp;&nbsp;For&nbsp;muds&nbsp;running&nbsp;in&nbsp;native&nbsp;mode,&nbsp;this&nbsp;is&nbsp;<BR>
performed&nbsp;by&nbsp;the&nbsp;function&nbsp;create().&nbsp;<BR>
&nbsp;<BR>
The&nbsp;second&nbsp;is&nbsp;the&nbsp;returning&nbsp;of&nbsp;the&nbsp;room&nbsp;to&nbsp;some&nbsp;base&nbsp;state&nbsp;of&nbsp;affairs.&nbsp;<BR>
This&nbsp;base&nbsp;set&nbsp;of&nbsp;affairs&nbsp;may&nbsp;or&nbsp;may&nbsp;not&nbsp;be&nbsp;different&nbsp;from&nbsp;the&nbsp;initial&nbsp;<BR>
state&nbsp;of&nbsp;affairs,&nbsp;and&nbsp;certainly&nbsp;you&nbsp;would&nbsp;not&nbsp;want&nbsp;to&nbsp;take&nbsp;up&nbsp;time&nbsp;<BR>
doing&nbsp;redundant&nbsp;things&nbsp;(like&nbsp;resetting&nbsp;variables&nbsp;that&nbsp;never&nbsp;change).&nbsp;<BR>
Compat&nbsp;mode&nbsp;muds&nbsp;nevertheless&nbsp;use&nbsp;the&nbsp;same&nbsp;function&nbsp;that&nbsp;was&nbsp;used&nbsp;to&nbsp;<BR>
create&nbsp;the&nbsp;object&nbsp;to&nbsp;reset&nbsp;it,&nbsp;that&nbsp;being&nbsp;reset().&nbsp;&nbsp;Native&nbsp;mode&nbsp;muds,&nbsp;<BR>
who&nbsp;use&nbsp;create()&nbsp;to&nbsp;create&nbsp;the&nbsp;room,&nbsp;instead&nbsp;use&nbsp;reset()&nbsp;to&nbsp;reset&nbsp;it.&nbsp;<BR>
All&nbsp;is&nbsp;not&nbsp;lost&nbsp;in&nbsp;compat&nbsp;mode&nbsp;though,&nbsp;as&nbsp;there&nbsp;is&nbsp;a&nbsp;way&nbsp;to&nbsp;tell&nbsp;the&nbsp;<BR>
difference&nbsp;between&nbsp;creation&nbsp;and&nbsp;resetting.&nbsp;&nbsp;For&nbsp;reset&nbsp;purposes,&nbsp;the&nbsp;<BR>
driver&nbsp;passes&nbsp;either&nbsp;1&nbsp;or&nbsp;the&nbsp;reset&nbsp;number&nbsp;as&nbsp;an&nbsp;argument&nbsp;to&nbsp;reset()&nbsp;<BR>
in&nbsp;compat&nbsp;mode.&nbsp;&nbsp;Now&nbsp;this&nbsp;is&nbsp;meaningless&nbsp;to&nbsp;you&nbsp;now,&nbsp;but&nbsp;just&nbsp;keep&nbsp;in&nbsp;<BR>
mind&nbsp;that&nbsp;you&nbsp;can&nbsp;in&nbsp;fact&nbsp;tell&nbsp;the&nbsp;difference&nbsp;in&nbsp;compat&nbsp;mode.&nbsp;&nbsp;Also&nbsp;<BR>
keep&nbsp;in&nbsp;mind&nbsp;that&nbsp;the&nbsp;argment&nbsp;in&nbsp;the&nbsp;creation&nbsp;use&nbsp;of&nbsp;reset&nbsp;is&nbsp;0&nbsp;and&nbsp;<BR>
the&nbsp;argument&nbsp;in&nbsp;the&nbsp;reset&nbsp;use&nbsp;is&nbsp;a&nbsp;nonzero&nbsp;number.&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
小樓一夜聽秋雨&nbsp;<BR>
--&nbsp;<BR>
佇倚危樓風細細&nbsp;望極春愁&nbsp;黯黯生天際&nbsp;&nbsp;草色煙光殘照裡&nbsp;無言誰會憑欄意[0&nbsp;<BR>
擬把疏狂圖一醉&nbsp;對酒當歌&nbsp;強樂還無味&nbsp;&nbsp;衣帶漸寬終不悔&nbsp;為伊消得人憔悴&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;166.111.5.25]&nbsp;<BR>
<A HREF="00000002.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000004.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>