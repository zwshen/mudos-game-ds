<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;Ranma&nbsp;(亂馬~~~~~~~無聊中),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;Lpc&nbsp;intermediate&nbsp;(7)--Debugging&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Mon&nbsp;Oct&nbsp;20&nbsp;09:23:23&nbsp;1997)&nbsp;<BR>
&nbsp;<BR>
Intermediate&nbsp;LPC&nbsp;<BR>
Descartes&nbsp;of&nbsp;Borg&nbsp;<BR>
November&nbsp;1993&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Chapter&nbsp;7:&nbsp;Debugging&nbsp;<BR>
&nbsp;<BR>
7.1&nbsp;Types&nbsp;of&nbsp;Errors&nbsp;<BR>
By&nbsp;now,&nbsp;you&nbsp;have&nbsp;likely&nbsp;run&nbsp;into&nbsp;errors&nbsp;here,&nbsp;there,&nbsp;and&nbsp;everywhere.&nbsp;&nbsp;In&nbsp;<BR>
general,&nbsp;there&nbsp;are&nbsp;three&nbsp;sorts&nbsp;of&nbsp;errors&nbsp;you&nbsp;might&nbsp;see:&nbsp;compile&nbsp;time&nbsp;<BR>
errors,&nbsp;run&nbsp;time&nbsp;errors,&nbsp;and&nbsp;malfunctioning&nbsp;code.&nbsp;&nbsp;On&nbsp;most&nbsp;muds&nbsp;you&nbsp;<BR>
will&nbsp;find&nbsp;a&nbsp;personal&nbsp;file&nbsp;where&nbsp;your&nbsp;compile&nbsp;time&nbsp;errors&nbsp;are&nbsp;logged.&nbsp;&nbsp;For&nbsp;<BR>
the&nbsp;most&nbsp;part,&nbsp;this&nbsp;file&nbsp;can&nbsp;be&nbsp;found&nbsp;either&nbsp;in&nbsp;your&nbsp;home&nbsp;directory&nbsp;as&nbsp;the&nbsp;<BR>
file&nbsp;named&nbsp;&quot;log&quot;&nbsp;or&nbsp;&quot;.log&quot;,&nbsp;or&nbsp;somewhere&nbsp;in&nbsp;the&nbsp;directory&nbsp;&quot;/log&quot;&nbsp;as&nbsp;a&nbsp;file&nbsp;<BR>
with&nbsp;your&nbsp;name..&nbsp;&nbsp;In&nbsp;addition,&nbsp;muds&nbsp;tend&nbsp;to&nbsp;keep&nbsp;a&nbsp;log&nbsp;of&nbsp;run&nbsp;time&nbsp;errors&nbsp;<BR>
which&nbsp;occur&nbsp;while&nbsp;the&nbsp;mud&nbsp;is&nbsp;up.&nbsp;&nbsp;Again,&nbsp;this&nbsp;is&nbsp;generally&nbsp;found&nbsp;in&nbsp;<BR>
&quot;/log&quot;.&nbsp;&nbsp;On&nbsp;MudOS&nbsp;muds&nbsp;it&nbsp;is&nbsp;called&nbsp;&quot;debug.log&quot;.&nbsp;&nbsp;On&nbsp;other&nbsp;muds&nbsp;it&nbsp;may&nbsp;<BR>
be&nbsp;called&nbsp;something&nbsp;different&nbsp;like&nbsp;&quot;lpmud.log&quot;.&nbsp;&nbsp;Ask&nbsp;your&nbsp;administrators&nbsp;<BR>
where&nbsp;compile&nbsp;time&nbsp;and&nbsp;run&nbsp;time&nbsp;errors&nbsp;are&nbsp;each&nbsp;logged&nbsp;if&nbsp;you&nbsp;do&nbsp;not&nbsp;<BR>
already&nbsp;know.&nbsp;<BR>
&nbsp;<BR>
Compile&nbsp;time&nbsp;errors&nbsp;are&nbsp;errors&nbsp;which&nbsp;occur&nbsp;when&nbsp;the&nbsp;driver&nbsp;tries&nbsp;to&nbsp;load&nbsp;<BR>
an&nbsp;object&nbsp;into&nbsp;memory.&nbsp;&nbsp;If,&nbsp;when&nbsp;the&nbsp;driver&nbsp;is&nbsp;trying&nbsp;to&nbsp;load&nbsp;an&nbsp;object&nbsp;<BR>
into&nbsp;memory,&nbsp;it&nbsp;encounters&nbsp;things&nbsp;which&nbsp;it&nbsp;simply&nbsp;does&nbsp;not&nbsp;understand&nbsp;<BR>
with&nbsp;respect&nbsp;to&nbsp;what&nbsp;you&nbsp;wrote,&nbsp;it&nbsp;will&nbsp;fail&nbsp;to&nbsp;load&nbsp;it&nbsp;into&nbsp;memory&nbsp;and&nbsp;log&nbsp;<BR>
why&nbsp;it&nbsp;could&nbsp;not&nbsp;load&nbsp;the&nbsp;object&nbsp;into&nbsp;your&nbsp;personal&nbsp;error&nbsp;log.&nbsp;&nbsp;The&nbsp;most&nbsp;<BR>
common&nbsp;compile&nbsp;time&nbsp;errors&nbsp;are&nbsp;typos,&nbsp;missing&nbsp;or&nbsp;extra&nbsp;(),&nbsp;{}.&nbsp;[],&nbsp;or&nbsp;&quot;&quot;,&nbsp;<BR>
and&nbsp;failure&nbsp;to&nbsp;declare&nbsp;properly&nbsp;functions&nbsp;and&nbsp;variables&nbsp;used&nbsp;by&nbsp;the&nbsp;<BR>
object.&nbsp;<BR>
&nbsp;<BR>
Run&nbsp;time&nbsp;errors&nbsp;occur&nbsp;when&nbsp;something&nbsp;wrong&nbsp;happens&nbsp;to&nbsp;an&nbsp;object&nbsp;in&nbsp;<BR>
memory&nbsp;while&nbsp;it&nbsp;is&nbsp;executing&nbsp;a&nbsp;statement.&nbsp;&nbsp;For&nbsp;example,&nbsp;the&nbsp;driver&nbsp;<BR>
cannot&nbsp;tell&nbsp;whether&nbsp;the&nbsp;statement&nbsp;&quot;x/y&quot;&nbsp;will&nbsp;be&nbsp;valid&nbsp;in&nbsp;all&nbsp;circumstances.&nbsp;&nbsp;<BR>
In&nbsp;fact,&nbsp;it&nbsp;is&nbsp;a&nbsp;valid&nbsp;LPC&nbsp;expression.&nbsp;&nbsp;Yet,&nbsp;if&nbsp;the&nbsp;value&nbsp;of&nbsp;y&nbsp;is&nbsp;0,&nbsp;then&nbsp;a&nbsp;<BR>
run&nbsp;time&nbsp;error&nbsp;will&nbsp;occur&nbsp;since&nbsp;you&nbsp;cannot&nbsp;divide&nbsp;by&nbsp;0.&nbsp;&nbsp;When&nbsp;the&nbsp;driver&nbsp;<BR>
runs&nbsp;across&nbsp;an&nbsp;error&nbsp;during&nbsp;the&nbsp;execution&nbsp;of&nbsp;a&nbsp;function,&nbsp;it&nbsp;aborts&nbsp;<BR>
execution&nbsp;of&nbsp;the&nbsp;function&nbsp;and&nbsp;logs&nbsp;an&nbsp;error&nbsp;to&nbsp;the&nbsp;game's&nbsp;run&nbsp;time&nbsp;error&nbsp;<BR>
log.&nbsp;&nbsp;It&nbsp;will&nbsp;also&nbsp;show&nbsp;the&nbsp;error&nbsp;to&nbsp;this_player(),&nbsp;if&nbsp;defined,&nbsp;if&nbsp;the&nbsp;player&nbsp;<BR>
is&nbsp;a&nbsp;creator,&nbsp;or&nbsp;it&nbsp;will&nbsp;show&nbsp;&quot;What?&quot;&nbsp;to&nbsp;players.&nbsp;&nbsp;Most&nbsp;common&nbsp;causes&nbsp;<BR>
for&nbsp;run&nbsp;time&nbsp;errors&nbsp;are&nbsp;bad&nbsp;values&nbsp;and&nbsp;trying&nbsp;to&nbsp;perform&nbsp;operations&nbsp;with&nbsp;<BR>
data&nbsp;types&nbsp;for&nbsp;which&nbsp;those&nbsp;operations&nbsp;are&nbsp;not&nbsp;defined.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;most&nbsp;insideous&nbsp;type&nbsp;of&nbsp;error,&nbsp;however,&nbsp;is&nbsp;plain&nbsp;malfunctioning&nbsp;<BR>
code.&nbsp;&nbsp;These&nbsp;errors&nbsp;do&nbsp;not&nbsp;log,&nbsp;since&nbsp;the&nbsp;driver&nbsp;never&nbsp;really&nbsp;realizes&nbsp;that&nbsp;<BR>
anything&nbsp;is&nbsp;wrong.&nbsp;&nbsp;In&nbsp;short,&nbsp;this&nbsp;error&nbsp;happens&nbsp;when&nbsp;you&nbsp;think&nbsp;the&nbsp;code&nbsp;<BR>
says&nbsp;one&nbsp;thing,&nbsp;but&nbsp;in&nbsp;fact&nbsp;it&nbsp;says&nbsp;another&nbsp;thing.&nbsp;&nbsp;People&nbsp;too&nbsp;often&nbsp;<BR>
encounter&nbsp;this&nbsp;bug&nbsp;and&nbsp;automatically&nbsp;insist&nbsp;that&nbsp;it&nbsp;must&nbsp;be&nbsp;a&nbsp;mudlib&nbsp;or&nbsp;<BR>
driver&nbsp;bug.&nbsp;&nbsp;Everyone&nbsp;makes&nbsp;all&nbsp;types&nbsp;of&nbsp;errors&nbsp;though,&nbsp;and&nbsp;more&nbsp;often&nbsp;<BR>
than&nbsp;not&nbsp;when&nbsp;code&nbsp;is&nbsp;not&nbsp;functioning&nbsp;the&nbsp;way&nbsp;you&nbsp;should,&nbsp;it&nbsp;will&nbsp;be&nbsp;<BR>
because&nbsp;you&nbsp;misread&nbsp;it.&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
7.2&nbsp;Debugging&nbsp;Compile&nbsp;Time&nbsp;Errors&nbsp;<BR>
Compile&nbsp;time&nbsp;errors&nbsp;are&nbsp;certainly&nbsp;the&nbsp;most&nbsp;common&nbsp;and&nbsp;simplest&nbsp;bugs&nbsp;to&nbsp;<BR>
debug.&nbsp;&nbsp;New&nbsp;coders&nbsp;often&nbsp;get&nbsp;frustrated&nbsp;by&nbsp;them&nbsp;due&nbsp;to&nbsp;the&nbsp;obscure&nbsp;<BR>
nature&nbsp;of&nbsp;some&nbsp;error&nbsp;messages.&nbsp;&nbsp;Nevertheless,&nbsp;once&nbsp;a&nbsp;person&nbsp;becomes&nbsp;<BR>
used&nbsp;to&nbsp;the&nbsp;error&nbsp;messages&nbsp;generated&nbsp;by&nbsp;their&nbsp;driver,&nbsp;debugging&nbsp;compile&nbsp;<BR>
time&nbsp;errors&nbsp;becomes&nbsp;utterly&nbsp;routine.&nbsp;<BR>
&nbsp;<BR>
In&nbsp;your&nbsp;error&nbsp;log,&nbsp;the&nbsp;driver&nbsp;will&nbsp;tell&nbsp;you&nbsp;the&nbsp;type&nbsp;of&nbsp;error&nbsp;and&nbsp;on&nbsp;which&nbsp;<BR>
line&nbsp;it&nbsp;finally&nbsp;noticed&nbsp;there&nbsp;was&nbsp;an&nbsp;error.&nbsp;&nbsp;Note&nbsp;that&nbsp;this&nbsp;is&nbsp;not&nbsp;on&nbsp;which&nbsp;<BR>
line&nbsp;the&nbsp;actual&nbsp;error&nbsp;necessarily&nbsp;exists.&nbsp;&nbsp;The&nbsp;most&nbsp;common&nbsp;compile&nbsp;time&nbsp;<BR>
error,&nbsp;besides&nbsp;the&nbsp;typo,&nbsp;is&nbsp;the&nbsp;missing&nbsp;or&nbsp;superfluous&nbsp;parentheses,&nbsp;<BR>
brackets,&nbsp;braces,&nbsp;or&nbsp;quotes.&nbsp;&nbsp;Yet&nbsp;this&nbsp;error&nbsp;is&nbsp;the&nbsp;one&nbsp;that&nbsp;most&nbsp;baffles&nbsp;<BR>
new&nbsp;coders,&nbsp;since&nbsp;the&nbsp;driver&nbsp;will&nbsp;not&nbsp;notice&nbsp;the&nbsp;missing&nbsp;or&nbsp;extra&nbsp;piece&nbsp;<BR>
until&nbsp;well&nbsp;after&nbsp;the&nbsp;original.&nbsp;&nbsp;Take&nbsp;for&nbsp;example&nbsp;the&nbsp;following&nbsp;code:&nbsp;<BR>
&nbsp;<BR>
1&nbsp;int&nbsp;test(string&nbsp;str)&nbsp;{&nbsp;<BR>
2&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x;&nbsp;<BR>
3&nbsp;&nbsp;&nbsp;&nbsp;for(x&nbsp;=0;&nbsp;x&lt;10;&nbsp;x++)&nbsp;<BR>
4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write(x+&quot;\n&quot;);&nbsp;<BR>
5&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<BR>
6&nbsp;&nbsp;&nbsp;&nbsp;write(&quot;Done.\n&quot;);&nbsp;<BR>
7&nbsp;}&nbsp;<BR>
&nbsp;<BR>
Depending&nbsp;on&nbsp;what&nbsp;you&nbsp;intended,&nbsp;the&nbsp;actual&nbsp;error&nbsp;here&nbsp;is&nbsp;either&nbsp;at&nbsp;line&nbsp;3&nbsp;<BR>
(meaning&nbsp;you&nbsp;are&nbsp;missing&nbsp;a&nbsp;{)&nbsp;or&nbsp;at&nbsp;line&nbsp;5&nbsp;(meaing&nbsp;you&nbsp;have&nbsp;an&nbsp;extra&nbsp;}).&nbsp;&nbsp;<BR>
Nevertheless,&nbsp;the&nbsp;driver&nbsp;will&nbsp;report&nbsp;that&nbsp;it&nbsp;found&nbsp;an&nbsp;error&nbsp;when&nbsp;it&nbsp;gets&nbsp;to&nbsp;<BR>
line&nbsp;6.&nbsp;&nbsp;The&nbsp;actual&nbsp;driver&nbsp;message&nbsp;may&nbsp;vary&nbsp;from&nbsp;driver&nbsp;to&nbsp;driver,&nbsp;but&nbsp;no&nbsp;<BR>
matter&nbsp;which&nbsp;driver,&nbsp;you&nbsp;will&nbsp;see&nbsp;an&nbsp;error&nbsp;on&nbsp;line&nbsp;6,&nbsp;since&nbsp;the&nbsp;}&nbsp;in&nbsp;line&nbsp;5&nbsp;<BR>
is&nbsp;interpreted&nbsp;as&nbsp;ending&nbsp;the&nbsp;function&nbsp;test().&nbsp;&nbsp;At&nbsp;line&nbsp;6,&nbsp;the&nbsp;driver&nbsp;sees&nbsp;that&nbsp;<BR>
you&nbsp;have&nbsp;a&nbsp;write()&nbsp;sitting&nbsp;outside&nbsp;any&nbsp;function&nbsp;definition,&nbsp;and&nbsp;thus&nbsp;<BR>
reports&nbsp;an&nbsp;error.&nbsp;&nbsp;Generally,&nbsp;the&nbsp;driver&nbsp;will&nbsp;also&nbsp;go&nbsp;on&nbsp;to&nbsp;report&nbsp;that&nbsp;it&nbsp;<BR>
found&nbsp;an&nbsp;error&nbsp;at&nbsp;line&nbsp;7&nbsp;in&nbsp;the&nbsp;form&nbsp;of&nbsp;an&nbsp;extra&nbsp;}.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;secret&nbsp;to&nbsp;debugging&nbsp;these&nbsp;is&nbsp;coding&nbsp;style.&nbsp;&nbsp;Having&nbsp;closing&nbsp;}&nbsp;match&nbsp;<BR>
up&nbsp;vertically&nbsp;with&nbsp;the&nbsp;clauses&nbsp;they&nbsp;close&nbsp;out&nbsp;helps&nbsp;you&nbsp;see&nbsp;where&nbsp;you&nbsp;are&nbsp;<BR>
missing&nbsp;them&nbsp;when&nbsp;you&nbsp;are&nbsp;debugging&nbsp;code.&nbsp;&nbsp;Similarly,&nbsp;when&nbsp;using&nbsp;<BR>
multiple&nbsp;sets&nbsp;of&nbsp;parentheses,&nbsp;space&nbsp;out&nbsp;different&nbsp;groups&nbsp;like&nbsp;this:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;(x=sizeof(who=users())&nbsp;&gt;&nbsp;(&nbsp;(y+z)/(a-b)&nbsp;+&nbsp;(-(random(7)))&nbsp;)&nbsp;)&nbsp;&nbsp;<BR>
As&nbsp;you&nbsp;can&nbsp;see,&nbsp;the&nbsp;parentheses&nbsp;for&nbsp;the&nbsp;for()&nbsp;statement,&nbsp;are&nbsp;spaced&nbsp;out&nbsp;<BR>
from&nbsp;the&nbsp;rest&nbsp;of&nbsp;the&nbsp;statement.&nbsp;&nbsp;In&nbsp;addition,&nbsp;individual&nbsp;sub-groups&nbsp;are&nbsp;<BR>
spaced&nbsp;so&nbsp;they&nbsp;can&nbsp;easily&nbsp;be&nbsp;sorted&nbsp;out&nbsp;in&nbsp;the&nbsp;event&nbsp;of&nbsp;an&nbsp;error.&nbsp;<BR>
&nbsp;<BR>
Once&nbsp;you&nbsp;have&nbsp;a&nbsp;coding&nbsp;style&nbsp;which&nbsp;aids&nbsp;in&nbsp;picking&nbsp;these&nbsp;out,&nbsp;you&nbsp;learn&nbsp;<BR>
which&nbsp;error&nbsp;messages&nbsp;tend&nbsp;to&nbsp;indicate&nbsp;this&nbsp;sort&nbsp;of&nbsp;error.&nbsp;&nbsp;When&nbsp;<BR>
debugging&nbsp;this&nbsp;sort&nbsp;of&nbsp;error,&nbsp;you&nbsp;then&nbsp;view&nbsp;a&nbsp;section&nbsp;of&nbsp;code&nbsp;before&nbsp;and&nbsp;<BR>
after&nbsp;the&nbsp;line&nbsp;in&nbsp;question.&nbsp;&nbsp;In&nbsp;most&nbsp;all&nbsp;cases,&nbsp;you&nbsp;will&nbsp;catch&nbsp;the&nbsp;bug&nbsp;right&nbsp;<BR>
off.&nbsp;<BR>
&nbsp;<BR>
Another&nbsp;common&nbsp;compile&nbsp;time&nbsp;error&nbsp;is&nbsp;where&nbsp;the&nbsp;driver&nbsp;reports&nbsp;an&nbsp;<BR>
unknown&nbsp;identifier.&nbsp;&nbsp;Generally,&nbsp;typos&nbsp;and&nbsp;failure&nbsp;to&nbsp;declare&nbsp;variables&nbsp;<BR>
causes&nbsp;this&nbsp;sort&nbsp;of&nbsp;error.&nbsp;&nbsp;Fortunately,&nbsp;the&nbsp;error&nbsp;log&nbsp;will&nbsp;almost&nbsp;always&nbsp;<BR>
tell&nbsp;you&nbsp;exactly&nbsp;where&nbsp;the&nbsp;error&nbsp;is.&nbsp;&nbsp;So&nbsp;when&nbsp;debugging&nbsp;it,&nbsp;enter&nbsp;the&nbsp;<BR>
editor&nbsp;and&nbsp;find&nbsp;the&nbsp;line&nbsp;in&nbsp;question.&nbsp;&nbsp;If&nbsp;the&nbsp;problem&nbsp;is&nbsp;with&nbsp;a&nbsp;variable&nbsp;and&nbsp;<BR>
is&nbsp;not&nbsp;a&nbsp;typo,&nbsp;make&nbsp;sure&nbsp;you&nbsp;declared&nbsp;it&nbsp;properly.&nbsp;&nbsp;On&nbsp;the&nbsp;other&nbsp;hand,&nbsp;if&nbsp;<BR>
it&nbsp;is&nbsp;a&nbsp;typo,&nbsp;simply&nbsp;fix&nbsp;it!&nbsp;<BR>
&nbsp;<BR>
One&nbsp;thing&nbsp;to&nbsp;beware&nbsp;of,&nbsp;however,&nbsp;is&nbsp;that&nbsp;this&nbsp;error&nbsp;will&nbsp;sometimes&nbsp;be&nbsp;<BR>
reported&nbsp;in&nbsp;conjunction&nbsp;with&nbsp;a&nbsp;missing&nbsp;parentheses,&nbsp;brackets,&nbsp;or&nbsp;braces&nbsp;<BR>
type&nbsp;error.&nbsp;&nbsp;In&nbsp;these&nbsp;situations,&nbsp;your&nbsp;problem&nbsp;with&nbsp;an&nbsp;unknown&nbsp;identifier&nbsp;<BR>
is&nbsp;often&nbsp;bogus.&nbsp;&nbsp;The&nbsp;driver&nbsp;misreads&nbsp;the&nbsp;way&nbsp;the&nbsp;{}&nbsp;or&nbsp;whatever&nbsp;are&nbsp;<BR>
setup,&nbsp;and&nbsp;thus&nbsp;gets&nbsp;variable&nbsp;declarations&nbsp;confused.&nbsp;&nbsp;Therefore&nbsp;make&nbsp;<BR>
sure&nbsp;all&nbsp;other&nbsp;compile&nbsp;time&nbsp;errors&nbsp;are&nbsp;corrected&nbsp;before&nbsp;bothering&nbsp;with&nbsp;<BR>
these&nbsp;types&nbsp;of&nbsp;errors.&nbsp;<BR>
&nbsp;<BR>
In&nbsp;the&nbsp;same&nbsp;class&nbsp;with&nbsp;the&nbsp;above&nbsp;error,&nbsp;is&nbsp;the&nbsp;general&nbsp;syntax&nbsp;error.&nbsp;&nbsp;The&nbsp;<BR>
driver&nbsp;generates&nbsp;this&nbsp;error&nbsp;when&nbsp;it&nbsp;simply&nbsp;fails&nbsp;to&nbsp;understand&nbsp;what&nbsp;you&nbsp;<BR>
said.&nbsp;&nbsp;Again,&nbsp;this&nbsp;is&nbsp;often&nbsp;caused&nbsp;by&nbsp;typos,&nbsp;but&nbsp;can&nbsp;also&nbsp;be&nbsp;caused&nbsp;by&nbsp;not&nbsp;<BR>
properly&nbsp;understanding&nbsp;the&nbsp;syntax&nbsp;of&nbsp;a&nbsp;certain&nbsp;feature&nbsp;like&nbsp;writing&nbsp;a&nbsp;for()&nbsp;<BR>
statement:&nbsp;for(x=0,&nbsp;x&lt;10,&nbsp;x++).&nbsp;&nbsp;If&nbsp;you&nbsp;get&nbsp;an&nbsp;error&nbsp;like&nbsp;this&nbsp;which&nbsp;is&nbsp;<BR>
not&nbsp;a&nbsp;syntax&nbsp;error,&nbsp;try&nbsp;reviewing&nbsp;the&nbsp;syntax&nbsp;of&nbsp;the&nbsp;statement&nbsp;in&nbsp;which&nbsp;the&nbsp;<BR>
error&nbsp;is&nbsp;occurring.&nbsp;<BR>
&nbsp;<BR>
7.3&nbsp;Debugging&nbsp;Run&nbsp;Time&nbsp;Errors&nbsp;<BR>
Run&nbsp;time&nbsp;errors&nbsp;are&nbsp;much&nbsp;more&nbsp;complex&nbsp;than&nbsp;their&nbsp;compile&nbsp;time&nbsp;<BR>
counterparts.&nbsp;&nbsp;Fortunately&nbsp;these&nbsp;errors&nbsp;do&nbsp;get&nbsp;logged,&nbsp;though&nbsp;many&nbsp;<BR>
creators&nbsp;do&nbsp;not&nbsp;realise&nbsp;or&nbsp;they&nbsp;do&nbsp;not&nbsp;know&nbsp;where&nbsp;to&nbsp;look.&nbsp;&nbsp;The&nbsp;error&nbsp;log&nbsp;<BR>
for&nbsp;run&nbsp;time&nbsp;errors&nbsp;are&nbsp;also&nbsp;generally&nbsp;much&nbsp;more&nbsp;detailed&nbsp;than&nbsp;compile&nbsp;<BR>
time&nbsp;errors,&nbsp;meaning&nbsp;that&nbsp;you&nbsp;can&nbsp;trace&nbsp;the&nbsp;history&nbsp;of&nbsp;the&nbsp;execution&nbsp;train&nbsp;<BR>
from&nbsp;where&nbsp;it&nbsp;started&nbsp;to&nbsp;where&nbsp;it&nbsp;went&nbsp;wrong.&nbsp;&nbsp;You&nbsp;therefore&nbsp;can&nbsp;setup&nbsp;<BR>
debugging&nbsp;traps&nbsp;using&nbsp;precompiler&nbsp;statements&nbsp;much&nbsp;easier&nbsp;using&nbsp;these&nbsp;<BR>
logs.&nbsp;&nbsp;Run&nbsp;time&nbsp;errors,&nbsp;however,&nbsp;tend&nbsp;to&nbsp;result&nbsp;from&nbsp;using&nbsp;more&nbsp;<BR>
complex&nbsp;codign&nbsp;techniques&nbsp;than&nbsp;beginners&nbsp;tend&nbsp;to&nbsp;use,&nbsp;which&nbsp;means&nbsp;you&nbsp;<BR>
are&nbsp;left&nbsp;with&nbsp;errors&nbsp;which&nbsp;are&nbsp;generally&nbsp;more&nbsp;complicated&nbsp;than&nbsp;simple&nbsp;<BR>
compile&nbsp;time&nbsp;errors.&nbsp;<BR>
&nbsp;<BR>
Run&nbsp;time&nbsp;errors&nbsp;almost&nbsp;always&nbsp;result&nbsp;from&nbsp;misusing&nbsp;LPC&nbsp;data&nbsp;types.&nbsp;&nbsp;<BR>
Most&nbsp;commonly,&nbsp;trying&nbsp;to&nbsp;do&nbsp;call&nbsp;others&nbsp;using&nbsp;object&nbsp;variables&nbsp;which&nbsp;are&nbsp;<BR>
NULL,&nbsp;indexing&nbsp;on&nbsp;mapping,&nbsp;array,&nbsp;or&nbsp;string&nbsp;variables&nbsp;which&nbsp;are&nbsp;<BR>
NULL,&nbsp;or&nbsp;passing&nbsp;bad&nbsp;arguments&nbsp;to&nbsp;functions.&nbsp;&nbsp;We&nbsp;will&nbsp;look&nbsp;at&nbsp;a&nbsp;real&nbsp;<BR>
run&nbsp;time&nbsp;error&nbsp;log&nbsp;from&nbsp;Nightmare:&nbsp;<BR>
&nbsp;<BR>
Bad&nbsp;argument&nbsp;1&nbsp;to&nbsp;explode()&nbsp;<BR>
program:&nbsp;bin/system/_grep.c,&nbsp;object:&nbsp;bin/system/_grep&nbsp;<BR>
line&nbsp;32&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_hook'&nbsp;in&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std/living.c'&nbsp;('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
std/user#4002')line&nbsp;83&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_grep'&nbsp;in&nbsp;'&nbsp;&nbsp;bin/system/_grep.c'&nbsp;('&nbsp;&nbsp;&nbsp;&nbsp;<BR>
bin/system/_grep')line&nbsp;32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
Bad&nbsp;argument&nbsp;2&nbsp;to&nbsp;message()&nbsp;<BR>
program:&nbsp;adm/obj/simul_efun.c,&nbsp;object:&nbsp;adm/obj/simul_efun&nbsp;<BR>
line&nbsp;34&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_hook'&nbsp;in&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std/living.c'&nbsp;('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
std/user#4957')line&nbsp;83&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_look'&nbsp;in&nbsp;'&nbsp;&nbsp;bin/mortal/_look.c'&nbsp;('&nbsp;&nbsp;&nbsp;&nbsp;<BR>
bin/mortal/_look')line&nbsp;23&nbsp;<BR>
'&nbsp;examine_object'&nbsp;in&nbsp;'&nbsp;&nbsp;bin/mortal/_look.c'&nbsp;('&nbsp;&nbsp;&nbsp;&nbsp;<BR>
bin/mortal/_look')line&nbsp;78&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write'&nbsp;in&nbsp;'adm/obj/simul_efun.c'&nbsp;('&nbsp;&nbsp;<BR>
adm/obj/simul_efun')line&nbsp;34&nbsp;<BR>
Bad&nbsp;argument&nbsp;1&nbsp;to&nbsp;call_other()&nbsp;<BR>
program:&nbsp;bin/system/_clone.c,&nbsp;object:&nbsp;bin/system/_clone&nbsp;<BR>
line&nbsp;25&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_hook'&nbsp;in&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std/living.c'&nbsp;('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
std/user#3734')line&nbsp;83&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_clone'&nbsp;in&nbsp;'&nbsp;bin/system/_clone.c'&nbsp;('&nbsp;&nbsp;&nbsp;<BR>
bin/system/_clone')line&nbsp;25&nbsp;<BR>
Illegal&nbsp;index&nbsp;<BR>
program:&nbsp;std/monster.c,&nbsp;object:&nbsp;<BR>
wizards/zaknaifen/spy#7205&nbsp;line&nbsp;76&nbsp;<BR>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;heart_beat'&nbsp;in&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std/monster.c'&nbsp;<BR>
('wizards/zaknaifen/spy#7205')line&nbsp;<BR>
76&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;<BR>
All&nbsp;of&nbsp;the&nbsp;errors,&nbsp;except&nbsp;the&nbsp;last&nbsp;one,&nbsp;involve&nbsp;passing&nbsp;a&nbsp;bad&nbsp;argument&nbsp;to&nbsp;a&nbsp;<BR>
function.&nbsp;&nbsp;The&nbsp;first&nbsp;bug,&nbsp;involves&nbsp;passing&nbsp;a&nbsp;bad&nbsp;first&nbsp;arument&nbsp;to&nbsp;the&nbsp;efun&nbsp;<BR>
explode().&nbsp;&nbsp;This&nbsp;efun&nbsp;expects&nbsp;a&nbsp;string&nbsp;as&nbsp;its&nbsp;first&nbsp;argment.&nbsp;&nbsp;In&nbsp;debugging&nbsp;<BR>
these&nbsp;kinds&nbsp;of&nbsp;errors,&nbsp;we&nbsp;would&nbsp;therefore&nbsp;go&nbsp;to&nbsp;line&nbsp;32&nbsp;in&nbsp;<BR>
/bin/system/_grep.c&nbsp;and&nbsp;check&nbsp;to&nbsp;see&nbsp;what&nbsp;the&nbsp;data&nbsp;type&nbsp;of&nbsp;the&nbsp;first&nbsp;<BR>
argument&nbsp;being&nbsp;passed&nbsp;in&nbsp;fact&nbsp;is.&nbsp;&nbsp;In&nbsp;this&nbsp;particular&nbsp;case,&nbsp;the&nbsp;value&nbsp;being&nbsp;<BR>
passed&nbsp;should&nbsp;be&nbsp;a&nbsp;string.&nbsp;<BR>
&nbsp;<BR>
If&nbsp;for&nbsp;some&nbsp;reason&nbsp;I&nbsp;has&nbsp;actually&nbsp;passed&nbsp;something&nbsp;else,&nbsp;I&nbsp;would&nbsp;be&nbsp;done&nbsp;<BR>
debugging&nbsp;at&nbsp;that&nbsp;point&nbsp;and&nbsp;fix&nbsp;it&nbsp;simply&nbsp;by&nbsp;making&nbsp;sure&nbsp;that&nbsp;I&nbsp;was&nbsp;<BR>
passing&nbsp;a&nbsp;string.&nbsp;&nbsp;This&nbsp;situation&nbsp;is&nbsp;more&nbsp;complex.&nbsp;&nbsp;I&nbsp;now&nbsp;need&nbsp;to&nbsp;trace&nbsp;<BR>
the&nbsp;actual&nbsp;values&nbsp;contained&nbsp;by&nbsp;the&nbsp;variable&nbsp;being&nbsp;passed&nbsp;to&nbsp;explode,&nbsp;so&nbsp;<BR>
that&nbsp;I&nbsp;can&nbsp;see&nbsp;what&nbsp;it&nbsp;is&nbsp;the&nbsp;explode()&nbsp;efun&nbsp;sees&nbsp;that&nbsp;it&nbsp;is&nbsp;being&nbsp;passed.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;line&nbsp;is&nbsp;question&nbsp;is&nbsp;this:&nbsp;<BR>
&nbsp;borg[files[i]]&nbsp;=&nbsp;regexp(explode(read_file(files[i]),&nbsp;&quot;\n&quot;),&nbsp;exp);&nbsp;<BR>
where&nbsp;files&nbsp;is&nbsp;an&nbsp;array&nbsp;for&nbsp;strings,&nbsp;i&nbsp;is&nbsp;an&nbsp;integer,&nbsp;and&nbsp;borg&nbsp;is&nbsp;a&nbsp;mapping.&nbsp;&nbsp;<BR>
So&nbsp;clearly&nbsp;we&nbsp;need&nbsp;to&nbsp;find&nbsp;out&nbsp;what&nbsp;the&nbsp;value&nbsp;of&nbsp;read_file(files[i])&nbsp;is.&nbsp;&nbsp;<BR>
Well,&nbsp;this&nbsp;efun&nbsp;returns&nbsp;a&nbsp;string&nbsp;unless&nbsp;the&nbsp;file&nbsp;in&nbsp;question&nbsp;does&nbsp;not&nbsp;exist,&nbsp;<BR>
the&nbsp;object&nbsp;in&nbsp;question&nbsp;does&nbsp;not&nbsp;have&nbsp;read&nbsp;access&nbsp;to&nbsp;the&nbsp;file&nbsp;in&nbsp;question,&nbsp;or&nbsp;<BR>
the&nbsp;file&nbsp;in&nbsp;question&nbsp;is&nbsp;an&nbsp;empty&nbsp;file,&nbsp;in&nbsp;which&nbsp;cases&nbsp;the&nbsp;function&nbsp;will&nbsp;<BR>
return&nbsp;NULL.&nbsp;&nbsp;Clearly,&nbsp;our&nbsp;problem&nbsp;is&nbsp;that&nbsp;one&nbsp;of&nbsp;these&nbsp;events&nbsp;must&nbsp;<BR>
have&nbsp;happened.&nbsp;&nbsp;In&nbsp;order&nbsp;to&nbsp;see&nbsp;which,&nbsp;we&nbsp;need&nbsp;to&nbsp;look&nbsp;at&nbsp;files[i].&nbsp;<BR>
&nbsp;<BR>
Examining&nbsp;the&nbsp;code,&nbsp;the&nbsp;files&nbsp;array&nbsp;gets&nbsp;its&nbsp;value&nbsp;through&nbsp;the&nbsp;get_dir()&nbsp;<BR>
efun.&nbsp;&nbsp;This&nbsp;returns&nbsp;all&nbsp;the&nbsp;files&nbsp;in&nbsp;a&nbsp;directory&nbsp;if&nbsp;the&nbsp;object&nbsp;has&nbsp;read&nbsp;access&nbsp;<BR>
to&nbsp;the&nbsp;directory.&nbsp;&nbsp;Therefore&nbsp;the&nbsp;problem&nbsp;is&nbsp;neither&nbsp;lack&nbsp;of&nbsp;access&nbsp;or&nbsp;non-&nbsp;<BR>
existent&nbsp;files.&nbsp;&nbsp;The&nbsp;file&nbsp;which&nbsp;caused&nbsp;this&nbsp;error&nbsp;then&nbsp;must&nbsp;have&nbsp;been&nbsp;an&nbsp;<BR>
empty&nbsp;file.&nbsp;&nbsp;And,&nbsp;in&nbsp;fact,&nbsp;that&nbsp;is&nbsp;exactly&nbsp;what&nbsp;caused&nbsp;this&nbsp;error.&nbsp;&nbsp;To&nbsp;<BR>
debug&nbsp;that,&nbsp;we&nbsp;would&nbsp;pass&nbsp;files&nbsp;through&nbsp;the&nbsp;filter_array()&nbsp;efun&nbsp;and&nbsp;make&nbsp;<BR>
sure&nbsp;that&nbsp;only&nbsp;files&nbsp;with&nbsp;a&nbsp;file&nbsp;size&nbsp;greater&nbsp;than&nbsp;0&nbsp;were&nbsp;allowed&nbsp;into&nbsp;the&nbsp;<BR>
array.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;key&nbsp;to&nbsp;debugging&nbsp;a&nbsp;run&nbsp;time&nbsp;error&nbsp;is&nbsp;therefore&nbsp;knowing&nbsp;exactly&nbsp;what&nbsp;<BR>
the&nbsp;values&nbsp;of&nbsp;all&nbsp;variables&nbsp;in&nbsp;question&nbsp;are&nbsp;at&nbsp;the&nbsp;exact&nbsp;moment&nbsp;where&nbsp;the&nbsp;<BR>
bug&nbsp;created.&nbsp;&nbsp;When&nbsp;reading&nbsp;your&nbsp;run&nbsp;time&nbsp;log,&nbsp;be&nbsp;careful&nbsp;to&nbsp;separate&nbsp;the&nbsp;<BR>
object&nbsp;from&nbsp;the&nbsp;file&nbsp;in&nbsp;which&nbsp;the&nbsp;bug&nbsp;occurred.&nbsp;&nbsp;For&nbsp;example,&nbsp;the&nbsp;<BR>
indexing&nbsp;error&nbsp;above&nbsp;came&nbsp;about&nbsp;in&nbsp;the&nbsp;object&nbsp;/wizards/zaknaifen/spy,&nbsp;<BR>
but&nbsp;the&nbsp;error&nbsp;occured&nbsp;while&nbsp;running&nbsp;a&nbsp;function&nbsp;in&nbsp;/std/monster.c,&nbsp;which&nbsp;<BR>
the&nbsp;object&nbsp;inherited.&nbsp;<BR>
&nbsp;<BR>
7.4&nbsp;Malfunctioning&nbsp;Code&nbsp;<BR>
The&nbsp;nastiest&nbsp;problem&nbsp;to&nbsp;deal&nbsp;with&nbsp;is&nbsp;when&nbsp;your&nbsp;code&nbsp;does&nbsp;not&nbsp;behave&nbsp;the&nbsp;<BR>
way&nbsp;you&nbsp;intended&nbsp;it&nbsp;to&nbsp;behave.&nbsp;&nbsp;The&nbsp;object&nbsp;loads&nbsp;fine,&nbsp;and&nbsp;it&nbsp;produces&nbsp;no&nbsp;<BR>
run&nbsp;time&nbsp;errors,&nbsp;but&nbsp;things&nbsp;simply&nbsp;do&nbsp;not&nbsp;happen&nbsp;the&nbsp;way&nbsp;they&nbsp;should.&nbsp;&nbsp;<BR>
Since&nbsp;the&nbsp;driver&nbsp;does&nbsp;not&nbsp;see&nbsp;a&nbsp;problem&nbsp;with&nbsp;this&nbsp;type&nbsp;of&nbsp;code,&nbsp;no&nbsp;logs&nbsp;<BR>
are&nbsp;produced.&nbsp;&nbsp;You&nbsp;therefore&nbsp;need&nbsp;to&nbsp;go&nbsp;through&nbsp;the&nbsp;code&nbsp;line&nbsp;by&nbsp;line&nbsp;<BR>
and&nbsp;figure&nbsp;out&nbsp;what&nbsp;is&nbsp;happening.&nbsp;<BR>
&nbsp;<BR>
Step&nbsp;1:&nbsp;Locate&nbsp;the&nbsp;last&nbsp;line&nbsp;of&nbsp;code&nbsp;you&nbsp;knew&nbsp;successfully&nbsp;executed&nbsp;<BR>
Step&nbsp;2:&nbsp;Locate&nbsp;the&nbsp;first&nbsp;line&nbsp;of&nbsp;code&nbsp;where&nbsp;you&nbsp;know&nbsp;things&nbsp;are&nbsp;going&nbsp;<BR>
wrong&nbsp;<BR>
Step&nbsp;3:&nbsp;Examine&nbsp;the&nbsp;flow&nbsp;of&nbsp;the&nbsp;code&nbsp;from&nbsp;the&nbsp;known&nbsp;successful&nbsp;point&nbsp;to&nbsp;<BR>
the&nbsp;first&nbsp;known&nbsp;unsuccessful&nbsp;point.&nbsp;<BR>
&nbsp;<BR>
More&nbsp;often&nbsp;than&nbsp;not,&nbsp;these&nbsp;problems&nbsp;occurr&nbsp;when&nbsp;you&nbsp;are&nbsp;using&nbsp;if()&nbsp;<BR>
statements&nbsp;and&nbsp;not&nbsp;accounting&nbsp;for&nbsp;all&nbsp;possibilities.&nbsp;&nbsp;For&nbsp;example:&nbsp;<BR>
&nbsp;<BR>
int&nbsp;cmd(string&nbsp;tmp)&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;if(stringp(tmp))&nbsp;return&nbsp;do_a()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(intp(tmp))&nbsp;return&nbsp;do_b()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;1;&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
In&nbsp;this&nbsp;code,&nbsp;we&nbsp;find&nbsp;that&nbsp;it&nbsp;compiles&nbsp;and&nbsp;runs&nbsp;fine.&nbsp;&nbsp;Problem&nbsp;is&nbsp;nothing&nbsp;<BR>
happens&nbsp;when&nbsp;it&nbsp;is&nbsp;executed.&nbsp;&nbsp;We&nbsp;know&nbsp;for&nbsp;sure&nbsp;that&nbsp;the&nbsp;cmd()&nbsp;function&nbsp;<BR>
is&nbsp;getting&nbsp;executed,&nbsp;so&nbsp;we&nbsp;can&nbsp;start&nbsp;there.&nbsp;&nbsp;We&nbsp;also&nbsp;know&nbsp;that&nbsp;a&nbsp;value&nbsp;of&nbsp;<BR>
1&nbsp;is&nbsp;in&nbsp;fact&nbsp;being&nbsp;returned,&nbsp;since&nbsp;we&nbsp;do&nbsp;not&nbsp;see&nbsp;&quot;What?&quot;&nbsp;when&nbsp;we&nbsp;enter&nbsp;<BR>
the&nbsp;command.&nbsp;&nbsp;Immediately,&nbsp;we&nbsp;can&nbsp;see&nbsp;that&nbsp;for&nbsp;some&nbsp;reason&nbsp;the&nbsp;<BR>
variable&nbsp;tmp&nbsp;has&nbsp;a&nbsp;value&nbsp;other&nbsp;than&nbsp;string&nbsp;or&nbsp;int.&nbsp;&nbsp;As&nbsp;it&nbsp;turns&nbsp;out,&nbsp;we&nbsp;<BR>
issued&nbsp;the&nbsp;command&nbsp;without&nbsp;parameters,&nbsp;so&nbsp;tmp&nbsp;was&nbsp;NULL&nbsp;and&nbsp;failed&nbsp;<BR>
all&nbsp;tests.&nbsp;<BR>
&nbsp;<BR>
The&nbsp;above&nbsp;example&nbsp;is&nbsp;rather&nbsp;simplistic,&nbsp;bordering&nbsp;on&nbsp;silly.&nbsp;&nbsp;<BR>
Nevertheless,&nbsp;it&nbsp;gives&nbsp;you&nbsp;an&nbsp;idea&nbsp;of&nbsp;how&nbsp;to&nbsp;examine&nbsp;the&nbsp;flow&nbsp;of&nbsp;the&nbsp;<BR>
code&nbsp;when&nbsp;debugging&nbsp;malfunctioning&nbsp;code.&nbsp;&nbsp;Other&nbsp;tools&nbsp;are&nbsp;available&nbsp;as&nbsp;<BR>
well&nbsp;to&nbsp;help&nbsp;in&nbsp;debugging&nbsp;code.&nbsp;&nbsp;The&nbsp;most&nbsp;important&nbsp;tool&nbsp;is&nbsp;the&nbsp;use&nbsp;of&nbsp;<BR>
the&nbsp;precompiler&nbsp;to&nbsp;debug&nbsp;code.&nbsp;&nbsp;With&nbsp;the&nbsp;code&nbsp;above,&nbsp;we&nbsp;have&nbsp;a&nbsp;clause&nbsp;<BR>
checking&nbsp;for&nbsp;integers&nbsp;being&nbsp;passed&nbsp;to&nbsp;cmd().&nbsp;&nbsp;When&nbsp;we&nbsp;type&nbsp;&quot;cmd&nbsp;10&quot;,&nbsp;<BR>
we&nbsp;are&nbsp;expecting&nbsp;do_b()&nbsp;to&nbsp;execute.&nbsp;&nbsp;We&nbsp;need&nbsp;to&nbsp;see&nbsp;what&nbsp;the&nbsp;value&nbsp;of&nbsp;<BR>
tmp&nbsp;is&nbsp;before&nbsp;we&nbsp;get&nbsp;into&nbsp;the&nbsp;loop:&nbsp;<BR>
&nbsp;<BR>
#define&nbsp;DEBUG&nbsp;<BR>
int&nbsp;cmd(string&nbsp;tmp)&nbsp;{&nbsp;<BR>
#ifdef&nbsp;DEBUG&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;write(tmp);&nbsp;<BR>
#endif&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;if(stringp(tmp))&nbsp;return&nbsp;do_a();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(intp(tmp))&nbsp;return&nbsp;do_b();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;1;&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
We&nbsp;find&nbsp;out&nbsp;immediately&nbsp;upon&nbsp;issuing&nbsp;the&nbsp;command,&nbsp;that&nbsp;tmp&nbsp;has&nbsp;a&nbsp;<BR>
value&nbsp;of&nbsp;&quot;10&quot;.&nbsp;&nbsp;Looking&nbsp;back&nbsp;at&nbsp;the&nbsp;code,&nbsp;we&nbsp;slap&nbsp;ourselves&nbsp;silly,&nbsp;<BR>
forgetting&nbsp;that&nbsp;we&nbsp;have&nbsp;to&nbsp;change&nbsp;command&nbsp;arguments&nbsp;to&nbsp;integers&nbsp;using&nbsp;<BR>
sscanf()&nbsp;before&nbsp;evaluating&nbsp;them&nbsp;as&nbsp;integers.&nbsp;<BR>
&nbsp;<BR>
7.5&nbsp;Summary&nbsp;<BR>
The&nbsp;key&nbsp;to&nbsp;debugging&nbsp;any&nbsp;LPC&nbsp;problem&nbsp;is&nbsp;always&nbsp;being&nbsp;aware&nbsp;of&nbsp;what&nbsp;<BR>
the&nbsp;values&nbsp;of&nbsp;your&nbsp;variables&nbsp;are&nbsp;at&nbsp;any&nbsp;given&nbsp;step&nbsp;in&nbsp;your&nbsp;code.&nbsp;&nbsp;LPC&nbsp;<BR>
execution&nbsp;reduces&nbsp;on&nbsp;the&nbsp;simplest&nbsp;level&nbsp;to&nbsp;changes&nbsp;in&nbsp;variable&nbsp;values,&nbsp;so&nbsp;<BR>
bad&nbsp;values&nbsp;are&nbsp;what&nbsp;causes&nbsp;bad&nbsp;things&nbsp;to&nbsp;happen&nbsp;once&nbsp;code&nbsp;has&nbsp;been&nbsp;<BR>
loaded&nbsp;into&nbsp;memory.&nbsp;&nbsp;If&nbsp;you&nbsp;get&nbsp;errors&nbsp;about&nbsp;bad&nbsp;arguments&nbsp;to&nbsp;<BR>
functions,&nbsp;more&nbsp;likely&nbsp;than&nbsp;not&nbsp;you&nbsp;are&nbsp;passing&nbsp;a&nbsp;NULL&nbsp;value&nbsp;to&nbsp;a&nbsp;<BR>
function&nbsp;for&nbsp;that&nbsp;argument.&nbsp;&nbsp;This&nbsp;happens&nbsp;most&nbsp;often&nbsp;with&nbsp;objects,&nbsp;since&nbsp;<BR>
people&nbsp;will&nbsp;do&nbsp;one&nbsp;of&nbsp;the&nbsp;following:&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;1)&nbsp;use&nbsp;a&nbsp;value&nbsp;that&nbsp;was&nbsp;set&nbsp;to&nbsp;an&nbsp;object&nbsp;that&nbsp;has&nbsp;since&nbsp;destructed&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;2)&nbsp;use&nbsp;the&nbsp;return&nbsp;value&nbsp;of&nbsp;this_player()&nbsp;when&nbsp;there&nbsp;is&nbsp;no&nbsp;this_player()&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;3)&nbsp;use&nbsp;the&nbsp;return&nbsp;value&nbsp;of&nbsp;this_object()&nbsp;just&nbsp;after&nbsp;this_object()&nbsp;was&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;destructed&nbsp;<BR>
&nbsp;<BR>
In&nbsp;addition,&nbsp;people&nbsp;will&nbsp;often&nbsp;run&nbsp;into&nbsp;errors&nbsp;involving&nbsp;illegal&nbsp;indexing&nbsp;or&nbsp;<BR>
indexing&nbsp;on&nbsp;illegal&nbsp;types.&nbsp;&nbsp;Most&nbsp;often,&nbsp;this&nbsp;is&nbsp;because&nbsp;the&nbsp;mapping&nbsp;or&nbsp;<BR>
array&nbsp;in&nbsp;question&nbsp;was&nbsp;not&nbsp;initialized,&nbsp;and&nbsp;therefore&nbsp;cannot&nbsp;be&nbsp;indexed.&nbsp;&nbsp;<BR>
The&nbsp;key&nbsp;is&nbsp;to&nbsp;know&nbsp;exactly&nbsp;what&nbsp;the&nbsp;full&nbsp;value&nbsp;of&nbsp;the&nbsp;array&nbsp;or&nbsp;mapping&nbsp;<BR>
should&nbsp;be&nbsp;at&nbsp;the&nbsp;point&nbsp;in&nbsp;question.&nbsp;&nbsp;In&nbsp;addition,&nbsp;watch&nbsp;for&nbsp;using&nbsp;index&nbsp;<BR>
numbers&nbsp;larger&nbsp;than&nbsp;the&nbsp;size&nbsp;of&nbsp;given&nbsp;arrays&nbsp;<BR>
&nbsp;<BR>
Finally,&nbsp;make&nbsp;use&nbsp;of&nbsp;the&nbsp;precompiler&nbsp;to&nbsp;temporarly&nbsp;throw&nbsp;out&nbsp;code,&nbsp;or&nbsp;<BR>
introduce&nbsp;code&nbsp;which&nbsp;will&nbsp;show&nbsp;you&nbsp;the&nbsp;values&nbsp;of&nbsp;variables.&nbsp;&nbsp;The&nbsp;<BR>
precompiler&nbsp;makes&nbsp;it&nbsp;easy&nbsp;to&nbsp;get&nbsp;rid&nbsp;of&nbsp;debugging&nbsp;code&nbsp;quickly&nbsp;once&nbsp;you&nbsp;<BR>
are&nbsp;done.&nbsp;&nbsp;You&nbsp;can&nbsp;simply&nbsp;remove&nbsp;the&nbsp;DEBUG&nbsp;define&nbsp;when&nbsp;you&nbsp;are&nbsp;<BR>
done.&nbsp;<BR>
&nbsp;<BR>
Copyright&nbsp;(c)&nbsp;George&nbsp;Reese&nbsp;1993&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
小樓一夜聽秋雨&nbsp;<BR>
--&nbsp;<BR>
佇倚危樓風細細&nbsp;望極春愁&nbsp;黯黯生天際&nbsp;&nbsp;草色煙光殘照裡&nbsp;無言誰會憑欄意[0&nbsp;<BR>
擬把疏狂圖一醉&nbsp;對酒當歌&nbsp;強樂還無味&nbsp;&nbsp;衣帶漸寬終不悔&nbsp;為伊消得人憔悴&nbsp;<BR>
&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;166.111.5.25]&nbsp;<BR>
<A HREF="00000017.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000019.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>