<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;windeye&nbsp;(用泥巴砌房子),&nbsp;信區:&nbsp;wizard&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;LPC入門&nbsp;（中）&nbsp;<BR>
日&nbsp;&nbsp;期:&nbsp;Fri&nbsp;May&nbsp;30&nbsp;23:05:06&nbsp;1997&nbsp;<BR>
&nbsp;<BR>
哎，越寫越長，沒辦法&nbsp;:((只好明天繼續寫“下”了&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;LPC裡面沒有“指針”的概念。在變量名前面加&nbsp;*&nbsp;的定義表示數組。如int&nbsp;*a&nbsp;<BR>
表示a&nbsp;是整數數組。一般來說我們定義數組時是未知其大小的。所以定義時不用像&nbsp;<BR>
C&nbsp;那樣給定大小。數組和MAPPING有些類似，所以將在下面和MAPPING一起講它們&nbsp;<BR>
的操作。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;object,&nbsp;是OOP概念了，在LPC裡面好像有CREATE()的都可以做object&nbsp;類型變量&nbsp;<BR>
了。object&nbsp;我們稱為“對像”，在MUD裡就是一件物品，一個房間或任何一個“具&nbsp;<BR>
體”的東西，都是OBJECT。“對像”，在OOP中是一些數據與基於這些數據的函數的&nbsp;<BR>
集合（好像文謅謅的？&nbsp;:PP）嗯，object&nbsp;中的數據一般不能直接操作（至少在LPC&nbsp;<BR>
裡面不能的&nbsp;:PP），所以對object的操作只有賦值（對object類型的賦直&nbsp;）和執行&nbsp;<BR>
object的函數(&nbsp;private函數不能被外部調用&nbsp;)。&nbsp;<BR>
函數調用格式：&nbsp;<BR>
eg.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;ob;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ob-&gt;test(1,2);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;基本格式：&nbsp;object類型變量名-&gt;函數名(函數參數列);&nbsp;<BR>
其中若該object&nbsp;中未定義該函數名的函數則返回&nbsp;0&nbsp;值（呵呵，不會有出錯信息的哦，&nbsp;<BR>
所以千萬別寫錯名字了）。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;寫了這麼多終於寫到LPC&nbsp;最有特色的兩個類型了，mapping和數組。&nbsp;<BR>
mapping和數組在“外觀”上有些類似，所以在一起寫了。前面提到過：mapping是&nbsp;<BR>
散列表，具體如何這裡不詳述了，只希望大家一定要記住mapping的格式！！(&nbsp;實際&nbsp;<BR>
上這格式只在給變量賦初值時用到&nbsp;)mapping&nbsp;格式如下：&nbsp;<BR>
eg.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapping&nbsp;a&nbsp;=&nbsp;([&nbsp;&quot;ab&quot;&nbsp;:&nbsp;1&nbsp;,&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;cd&quot;:&nbsp;2&nbsp;,&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;])&nbsp;<BR>
標準格式：&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapping&nbsp;變量名&nbsp;=&nbsp;([&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key1&nbsp;:&nbsp;value1&nbsp;,&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key2&nbsp;:&nbsp;value2&nbsp;,&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;..........&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;..........&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]);&nbsp;<BR>
其中key可以是除了int以外的任何值！！&nbsp;(好像char也不行吧&nbsp;:P&nbsp;)，包括任何數組&nbsp;<BR>
甚至mapping也可以做key&nbsp;,而value則可以是任意所有值。mapping的應用在於：&nbsp;<BR>
可以用key來index得到相應的value值。如上面eg的，我們有：a[&quot;cd&quot;]&nbsp;==&nbsp;2,....&nbsp;<BR>
因為要用key來index的關係，在mapping中key值不能相等，若相等則覆蓋掉原來該&nbsp;<BR>
key對應的value。寫的有些亂了，SORRY&nbsp;:P&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;那麼一個mapping怎麼改變它的值呢？有兩個方法(下面設mapping&nbsp;map&nbsp;)。&nbsp;<BR>
1.&nbsp;map[key]&nbsp;=&nbsp;value;&nbsp;<BR>
2.&nbsp;map&nbsp;+=&nbsp;([key&nbsp;:&nbsp;value&nbsp;]);&nbsp;<BR>
請大家留意第二種賦值方法，它跟我們將要提到的數組的方法一樣的&nbsp;。&nbsp;<BR>
在mapping中“刪除”一個key&nbsp;（其相應value當然也沒了）方法是：&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map_delete(map,key);&nbsp;<BR>
lpc裡面的系統函數(efun)的命名一般按參數順序來取名（&nbsp;map_delete的參數就是&nbsp;<BR>
map在前，被delete的key在後的&nbsp;），希望大家注意。&nbsp;<BR>
另外mapping的efun還有values,keys,undefinedp&nbsp;<BR>
大家可以直接在MUD裡&nbsp;help&nbsp;efunname&nbsp;來看幫助，也可以參閱&nbsp;/doc/lpc/types/mapping&nbsp;<BR>
這一文件&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
明天寫數組，希望大家可以把數組和MAPPING對比一下，它門很像&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
<A HREF="00000001.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000003.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>