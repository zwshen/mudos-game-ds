<HTML>
<HEAD>
<TITLE>BBS水木清華站︰精華區</TITLE>
</HEAD>
<BODY>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
<A Name="top"></a>
發信人:&nbsp;wwj&nbsp;(星~~畢設中),&nbsp;信區:&nbsp;Mud_Builder&nbsp;<BR>
標&nbsp;&nbsp;題:&nbsp;第三節&nbsp;&nbsp;&nbsp;&nbsp;COM&nbsp;extension語法&nbsp;<BR>
發信站:&nbsp;BBS&nbsp;水木清華站&nbsp;(Sat&nbsp;May&nbsp;16&nbsp;19:07:00&nbsp;1998)&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;為了支持COM對像，pre11&nbsp;with&nbsp;COM&nbsp;extension對class類型做了擴展。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;首先增加的是對class的成員函數的支持，有了這個特性之後，class類型&nbsp;<BR>
就和C++中的單個類比較相似了。下面給出一個帶成員函數的class例子。&nbsp;<BR>
&nbsp;<BR>
class&nbsp;ab&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;add();&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
int&nbsp;ab::add()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ab的成員函數&nbsp;add()&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;a++;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ab的成員變量&nbsp;a++&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
class&nbsp;ab&nbsp;b;&nbsp;<BR>
&nbsp;<BR>
useab()&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;b=new(class&nbsp;ab);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b-&gt;a=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;b-&gt;a&nbsp;is&nbsp;0&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b-&gt;add();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;then&nbsp;b-&gt;a&nbsp;is&nbsp;1&nbsp;<BR>
}&nbsp;<BR>
&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;由於成員函數的出現，有必要支持在成員函數中訪問本class，因此增加了&nbsp;<BR>
一個this關鍵字，用它來指示當前的class變量。如int&nbsp;ab::add()就可以寫成&nbsp;<BR>
int&nbsp;ab::add()&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this-&gt;a++;&nbsp;<BR>
}&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;當然this主要的作用是將class自己傳給別的函數。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;增加了class成員函數的支持後，新增加了一個語法來定義COM對像。格式如下:&nbsp;<BR>
&nbsp;<BR>
class&nbsp;class_name&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;member&nbsp;and&nbsp;member&nbsp;function&nbsp;...&nbsp;<BR>
}&nbsp;=&nbsp;&quot;&nbsp;com_class_id&nbsp;&quot;;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;com_class_id是你要引用的com對像的CLSID或者ProgID，比如Microsoft&nbsp;<BR>
IE的HTML&nbsp;Viewer控件的CLSID是&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{EAB22AC3-30C1-11CF-A7EB-0000C05BAE0B}&nbsp;<BR>
ProgID是&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Microsoft&nbsp;Web&nbsp;Browser&nbsp;Control&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;class_name是你所使用的Interface的名字，如HTML&nbsp;Viewer控件的一個&nbsp;<BR>
接口是&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IWebBrowser&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;的member和member&nbsp;function都應該是這個接口的屬性和方法。通過&nbsp;<BR>
VC中帶的OLE/COM&nbsp;Viewer可以看到Microsoft&nbsp;Web&nbsp;Browser&nbsp;Control的IWebBrowser&nbsp;<BR>
的定義是這樣的（部分）。。。&nbsp;<BR>
&nbsp;<BR>
[&nbsp;<BR>
&nbsp;&nbsp;uuid(EAB22AC1-30C1-11CF-A7EB-0000C05BAE0B),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;這就是那個CLSID&nbsp;<BR>
&nbsp;&nbsp;helpstring(&quot;Web&nbsp;Browser&nbsp;interface&quot;),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;hidden,&nbsp;<BR>
&nbsp;&nbsp;dual&nbsp;<BR>
]&nbsp;<BR>
&nbsp;<BR>
dispinterface&nbsp;IWebBrowser&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;methods:&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;[id(0xfffffdda),&nbsp;helpstring(&quot;Refresh&nbsp;the&nbsp;currently&nbsp;viewed&nbsp;page.&quot;)]&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Refresh();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;一個方法&nbsp;&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;[id(0x00000068),&nbsp;helpstring(&quot;Navigates&nbsp;to&nbsp;a&nbsp;URL&nbsp;or&nbsp;file.&quot;)]&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Navigate(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;另一個方法&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[in]&nbsp;BSTR&nbsp;URL,&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[in]&nbsp;VARIANT*&nbsp;Flags,&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[in]&nbsp;VARIANT*&nbsp;TargetFrameName,&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[in]&nbsp;VARIANT*&nbsp;PostData,&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[in]&nbsp;VARIANT*&nbsp;Headers);&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;[id(0x000000ce),&nbsp;propget,&nbsp;helpstring(&quot;The&nbsp;horizontal&nbsp;position&nbsp;(pixels)&nbsp;of&nbsp;the&nbsp;frame&nbsp;window&nbsp;relative&nbsp;to&nbsp;the&nbsp;screen/container.&quot;)]&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;Left();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;雖然寫在methods裡，但由於progget屬性，實際上還是認為是屬性，&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;這是讀屬性值的方法&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;[id(0x000000ce),&nbsp;propput,&nbsp;helpstring(&quot;The&nbsp;horizontal&nbsp;position&nbsp;(pixels)&nbsp;of&nbsp;the&nbsp;frame&nbsp;window&nbsp;relative&nbsp;to&nbsp;the&nbsp;screen/container.&quot;)]&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Left([in]&nbsp;long&nbsp;rhs);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;雖然寫在methods裡，但由於progput屬性，實際上還是認為是屬性，&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;這是寫屬性值的方法&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;等等。。。&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;變成LPC中可引用的class就該定義成：&nbsp;<BR>
&nbsp;<BR>
class&nbsp;IWebBrowser&nbsp;{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Refresh();&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;Left;&nbsp;<BR>
}&nbsp;=&nbsp;&quot;{EAB22AC1-30C1-11CF-A7EB-0000C05BAE0B}&quot;;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;這個字符串可以另寫為&nbsp;Microsoft&nbsp;Web&nbsp;Browser&nbsp;Control&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;考察上面這個定義，與標準的C++對像定義沒什麼大的差別。成員Refresh&nbsp;<BR>
方法基本上於MIDL的定義沒什麼變化，Left屬性的類型變成了int，Navigate&nbsp;<BR>
方法沒加進來，這是因為在LPC與COM間類型轉換時不是所有類型的參數都可以用&nbsp;<BR>
的。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目前的pre11&nbsp;with&nbsp;COM&nbsp;extension支持以下類型轉換：&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;與&nbsp;COM中&nbsp;int,long&nbsp;互相轉換。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;string&nbsp;&nbsp;與&nbsp;COM中&nbsp;BSTR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;互相轉換。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;float&nbsp;&nbsp;&nbsp;與&nbsp;COM中&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;互相轉換。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;與&nbsp;COM中&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;互相轉換。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;array&nbsp;&nbsp;&nbsp;轉成&nbsp;&nbsp;&nbsp;COM中&nbsp;IDispatch&nbsp;*&nbsp;。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;class&nbsp;&nbsp;&nbsp;轉成&nbsp;&nbsp;&nbsp;COM中&nbsp;IDispatch&nbsp;*&nbsp;。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;object&nbsp;&nbsp;轉成&nbsp;&nbsp;&nbsp;COM中&nbsp;IDispatch&nbsp;*&nbsp;。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LPC中&nbsp;mapping&nbsp;轉成&nbsp;&nbsp;&nbsp;COM中&nbsp;IDispatch&nbsp;*&nbsp;。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這裡&quot;互相轉換&quot;的意思是支持該類型作為參數可以傳遞，也可以作為返回值，如&nbsp;<BR>
屬性的類型。&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;轉成&quot;就意味著單向的，只能作為參數。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;對於無法轉化的方法或屬性，不要寫在class的定義中。&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用COM定義的class和普通的class相同，給出使用上面IWebBrowser的例子：&nbsp;<BR>
&nbsp;<BR>
int&nbsp;UseIt()&nbsp;<BR>
{&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;IWebBrowser&nbsp;web;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;web=new&nbsp;(class&nbsp;IWebBrowser);&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;web.Left=10;&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;web.Refresh();&nbsp;<BR>
}&nbsp;<BR>
&nbsp;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這裡使用IWebBrowser的目的是說明如何使用COM對像，事實上IWebBrowser&nbsp;<BR>
不能在Mudos上使用(Mudos是一個telnet服務器，用不著一個瀏覽器)。&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
&nbsp;<BR>
--&nbsp;<BR>
※&nbsp;來源:•BBS&nbsp;水木清華站&nbsp;bbs.net.tsinghua.edu.cn•[FROM:&nbsp;166.111.10.143]&nbsp;<BR>
<A HREF="00000002.htm">上一篇</A>
<A HREF='javascript:history.go(-1)'>返回上一頁</A>
<A HREF="index.htm">回到目錄</A>
<A HREF="#top">回到頁首</A>
<A HREF="00000004.htm">下一篇</A>
</H1></CENTER>
<CENTER><H1>BBS水木清華站︰精華區</H1></CENTER>
</BODY></HTML>