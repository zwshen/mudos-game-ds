關於系統時間的分配:
    上一篇說過, 如果把所有系統分配給所有人物是不智之舉, 因為每個人物之間
的所需要等待系統的處理不一樣, 因此我們並不能讓每個人均分之　對一個程式來
說, 要做到請求系統撥出時間處理是十分困難的　 (因為我們現在是要模擬一個OS
而不是要寫一個OS) 所以對我們來說, 對每個人物設定一個參數來決定須不須要處
理則是我們便通的方法之一!!
    模擬的參數設定為人物的狀態, 舉個實例來說, 戰鬥所花費的時間一定比其他
動作花的時間多, 所以遊戲處理的最小單位是戰鬥的處理　我們把戰鬥的處理當成
一個輪回, 然後檢查人物是否處於戰鬥中, 如果不是的話, 則跳過不處理　如此,
我們再每一個時間單位檢查一次所有的人物, 然後我們再設定人物做一個動作所需
要的時間也記錄起來, 如果上一個動作尚未完成者這裡也跳過不執行　最後則是算
出一個遊戲小時是由多少單位時間組成的　
 
    這樣說也許不明白, 我們用實例說明:
 
    game_loop
                      每個小時──┐
                        ︱        ︱
                      每個單位─┐︱
                        ︱      ︱︱
                      戰鬥單位┐︱︱
                        ︱︱└┘︱︱
                        ︱└──┘︱
                        └────┘
 
    我們以每個戰鬥為一個單位,檢查所有的人物　 除非有在戰鬥中才予以處理,
否則跳過處理下一個　然後每幾個戰鬥單位再執行每個人物的命令, 如此, 我們就
可以對我們遊戲中的人物作有效的處理而不浪費系統時間　
    時間單位是可以改變的, 我們可以用這些計數器來設定遊戲的節奏　
