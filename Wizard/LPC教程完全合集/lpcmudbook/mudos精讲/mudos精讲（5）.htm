
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>网虫乐园--泥潭风云</TITLE>
<META content="MSHTML 5.00.2919.6307" name=GENERATOR>
<META content=TLT name=Author>
<META content=text/html;charset=gb2312 http-equiv=content-type>
<style>
<!--      
A:link {text-decoration: none;color:blue}       
.105V         {font-size: 10.5pt; font-family: 宋体;}
TD          {font-size: 9pt; font-family: 宋体;}
.90V         {font-size: 9pt; font-family: 宋体;}
.90VE         {font-size: 9pt; font-family: arial;}
A:hover      {text-decoration: none;color:red;}
A:visited  {text-decoration: none;}
A:active     {text-decoration: none;color:#ff0000}
-->
</style>


<script>
<!--
lstart=50
loop=true
speed=350 
pr_step=5 

function makeObj(obj,nest){
nest=(!nest) ? '':'document.'+nest+'.'
this.css=(document.layers) ? eval(nest+'document.'+obj):eval(obj+'.style')
    this.scrollHeight=document.layers?this.css.document.height:eval(obj+'.offsetHeight')
    this.up=goUp
this.obj = obj + "Object"
eval(this.obj + "=this")
return this
}
function goUp(speed){
    if(parseInt(this.css.top)>-this.scrollHeight){
        this.css.top=parseInt(this.css.top)-pr_step
        setTimeout(this.obj+".up("+speed+")",speed)
    }else if(loop) {
        this.css.top=lstart
        eval(this.obj+".up("+speed+")")
    }
}
function slideInit(){
    oSlide=makeObj('divNews','divCont')
    oSlide.css.top=lstart
    oSlide.up(speed)
}
onload=slideInit
//-->
</script></head>

<body aLink="#660033" bgColor="#ffffff" leftMargin="0" text=darkgreen link="#000066" vLink="#000066"
topMargin="0" >
<div align="center"><center>
   <table border="1" width="776" borderColor=#ffffff borderColorLight=#ab9c36  align="center" bgColor=#f0f3dc cellPadding=0 cellSpacing=0 >
      <tr>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/home.gif width=15 height=15><a href=http://202.114.98.14/>网虫乐园首页</a></td> 
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/soft.gif height=15 width=15 border=0><a href="http://202.114.98.12/softroom/">软件大观园</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/mud.gif height=15 width=15 border=0><a href="http://202.114.98.14/mud/">泥潭风云</font></a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/freeweb.gif height=15 width=15 border=0><a href="http://202.114.98.14/freeweb/">个人主页空间</a></td>  
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/bbs.gif height=15 width=15 border=0><a href=http://202.114.98.14/bbs/>网虫社区</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/webresource.gif height=15 width=15 border=0><a href="http://202.114.98.14/webresource/">Web资源角</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/show.gif height=15 width=15 border=0><a href="#" onclick="window.open('http://202.114.98.14/show/','','menubar=no,toolbar=no,location=no,directories=no,status=no,resizable=1,scrollbars=1,width=800,height=600,top=0,left=0');">秀网珍藏</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/links1.gif height=15 width=15 border=0><a href=http://202.114.98.14/links/>友情链接</a></td>
      </tr>
    </table></center>

<table bgcolor=white width=770 border=1 borderColor=#ffffff borderColorLight=#ab9c36   cellpadding=0 cellspacing=0>
   <tr><td><table bgcolor=white width=770 border=0 cellpadding=0 cellspacing=0>
   <tr><td width=180 height=60><img src=http://202.114.98.14/images/netbugs1.gif width=180 height=60></td>
   <td align=center width=468 valign=center  bgcolor=white><script src="http://202.114.98.14/ad1.js" width=468 height=60 border=0></script></td>
   <td width=112 bgcolor=white><div id="divCont"
style="position:absolute; width:110; height:60; top:25; left:660; clip:rect(0,110,60,0)"><div
id="divNews" style="position:absolute; top:0; left:0">

<p>欢迎光临网虫乐园！<a href=http://202.114.98.14/>首页</a>有网站各子站最新变动介绍和
教育网酷站连接。<p><a href=http://202.114.98.12/softroom/>软件大观园</a>每日更新；收藏3G软件，均为最新版本。
<p><a href=http://202.114.98.14/mud>泥潭风云</a>是教育网内最大的mud站点；<a href=http://202.114.98.14/webresource>Web资源角</a>有三千多动画和背景为你网页增添色彩。
<p><a href=http://202.114.98.14/freeweb/>10M免费个人主页空间</a>，ftp维护；申请三日内批准。<p><a href=http://202.114.98.14/show>秀网珍藏</a>图片近2G，栏目众多，包罗万象，每日都有大量图片增加。
<p>对我们网站的建设的建议欢迎<a href=mailto:softroom@wuhee.edu.cn>来信</a>或写在<a href=http://202.114.98.14/bbs>社区</a>内。</p>
</div></div>
</td>
   </tr>
   </table>
</td></tr></table>

<center>
   <table border="1" width="770" borderColor=#ffffff borderColorLight=#ab9c36  align="center" bgColor=#f0f3dc cellPadding=0 cellSpacing=0 >
      <tr>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/index.htm">首页</A></td> 
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/newcomer/">泥巴入门</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/player/">泥巴进阶</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/source/">泥巴资源</A></td>  
        <td align="center" width="96"><P align=center><A 
        href="http://202.114.98.14/mud/pmud/">图形泥巴</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/mudlife/">泥巴人生</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/wiz/">巫师乐园</FONT></A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/download/">软件下载</A>            <SCRIPT>
   document.write("<a href=http://webpub.au.tsinghua.edu.cn/count/count.dll?Type=Basic&id=2138&ReferID=2138 target=_blank>");
   document.write("<img src=http://webpub.au.tsinghua.edu.cn/count/count.dll?Type=Img2&add=1&id=2138&refer="+escape(top.document.referrer)+" border=0 alt=酷站今日访问 width=12 height=12>");
   </SCRIPT></td>

      </tr>
    </table></center>
    



<table border="0" width="100%" style="color: rgb(255,255,0)" cellspacing="0"
cellpadding="0">
  <tr>
    <td width="7%" rowspan="4"><p align="center">　</p>
    <p align="center">　</p>
    <small><p align="center"></small>　</td>
    <td width="70%" align="center"><font color="#000000">MUDOS<br>
    ―――――――――――――――――――――<br>
    <font size="2">综合地介绍MUD运行平台（MUDOS）<br>
    ―――――――――――――――――――――――――</font></font></td>
    <td width="6%" rowspan="4"></td>
  </tr>
  <tr>
    <td width="70%" align="center"><font color="#000000">mudos精讲（5）</td>
  </tr>
  <tr>
    <td width="70%" align="center"><p align="left"><font color="#000000"><br>
    each(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    each() - 分次传回一个映射变数 (mapping) 的各个<br>
    (key, value) 的内容.<br>
    函数语法:<br>
    mixed *each( mapping m, int reset );<br>
    函数用法:<br>
    each() 函式把一个映射变数里的每对 (key, value) 一次<br>
    一次地传回. each() 传回来的次序与 keys() 和 values()<br>
    两个函式传回来的次序一样. 当 each() 读到映射变数的尾<br>
    端时, 会传回一个空的向量 (null vector, 即 (0,0)). 而<br>
    在传回空向量之後, 下一个 each() 传回的内容又会从头开<br>
    始.<br>
    <br>
    当不同的物件使用 each() 读取相同的映射变数时, 一定都会<br>
    从头开始. 虽然 MudOS 有单执行绪 (single thread) 的性质<br>
    , 但是也不致於让 each() 执行时出现问题. ( 实际上一个物<br>
    件无法於使用 each() 读取映射函数读到一半时, 跳开目前读<br>
    (key, value) 的位置)<br>
    <br>
    如果指定第二个参数为 1, 则 each() 会重新从头开始读取.<br>
    <br>
    □例:<br>
    <br>
    mixed *pair;<br>
    <br>
    while ((pair = each(x)) != ({})) {<br>
    write(&quot;key = &quot; + pair[0] + &quot;\n&quot;);<br>
    write(&quot;value = &quot; + pair[1] + &quot;\n&quot;);<br>
    }<br>
    参考函数:<br>
    keys(3), values(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.7. (Writen 5/23/97)<br>
    <br>
    ed(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    ed() - 编辑一个档案.<br>
    函数语法:<br>
    void ed( string file, string exit_fn, int restricted );<br>
    void ed( string file, string write_fn, string exit_fn,<br>
    int restricted );<br>
    <br>
    无传回值 ed( 字串 file, 字串 exit_fn, 整数 restricted );<br>
    无传回值 ed( 字串 file, 字串 write_fn, 字串 exit_fn,<br>
    整数 restricted );<br>
    函数用法:<br>
    这个函式只有在定义了 __OLD_ED__ 之後有效.<br>
    <br>
    这个函式很有趣. 它会启动一个文书编辑程式来编辑一个指定<br>
    的档案. 这个程式与 UNIX 的 ed 程式几乎相容. 当你进入这<br>
    个程式後, 可以输入 h 了解用法.<br>
    <br>
    write_fn 函式可以让 mudlib 控制档案的写入权限和档案修<br>
    改纪录. 当编辑程式写入一个档案时, MUD 驱动程式 (driver)<br>
    会呼叫 write_fn 两次. 第一次呼叫时, 是在写入档案之前,<br>
    而 flag 旗标为 0. 如果被呼叫的函式传回「真」值 (true,<br>
    即为非零值) , 编辑程式就会继续写入档案. 第二次呼叫时,<br>
    是在写入档案完成之後, 此时的 flag 旗标为非零值. 被呼叫<br>
    的函式必须符合以下的格式:<br>
    <br>
    int write_fn(string fname, int flag)<br>
    <br>
    离开编辑程式时, MUD 驱动程式 (driver) 会呼叫 exit_fn<br>
    函式. 这个被呼叫的函式可以让 mudlib 清除. 这个函式要<br>
    符合以下的格式:<br>
    <br>
    void exit_fn()<br>
    <br>
    而可以省略的 restricted 旗标则限制编辑程式的功能.<br>
    像是: 插入一个档案, 以不同的名字储存档案. 这些功能<br>
    在 restricted 旗标为「真」值时, 就无法使用.<br>
    参考函数:<br>
    regexp(3), valid_read(4), valid_write(4),<br>
    get_save_file_name(4)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.7. (Writen 5/23/97)<br>
    <br>
    ed_cmd(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    ed_cmd() - 对一个正在执行的 ed 工作 (session)<br>
    送出一个命令.<br>
    函数语法:<br>
    string ed_cmd( string cmd )<br>
    <br>
    字串 ed_cmd( 字串 cmd )<br>
    函数用法:<br>
    这个函式只有在 __OLD_ED__ 不予定义 (define) 时有效.<br>
    <br>
    命令 cmd 会被送到一个正在执行的 ed 工作 (session) ,<br>
    并传回命令执行後输出的结果.<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    ed_start(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    ed_start() - 开始执行一个 ed 工作.<br>
    函数语法:<br>
    string ed_start( string file | void,<br>
    int restricted | void )<br>
    <br>
    字串 ed_start( 字串 file 或 无参数,<br>
    整数 restricted 或 无参数 )<br>
    函数用法:<br>
    这个函式只有 __OLD_ED__ 不予定义 (define) 时有效.<br>
    <br>
    这个函式开始执行内部的文书编辑程式, 可以指定或不指定<br>
    要予以编辑的档案 file. 函式会传回执行完 ed 的编辑结<br>
    果. 当 ed 程式仍在执行时, 可以使用 ed_cmd() 执行 ed<br>
    的命令.<br>
    <br>
    如果 restricted 的值为 1 , 所有更改档案的命令都会被<br>
    视为无效.<br>
    <br>
    一个物件同一时间内只能执行一个 ed 工作.<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    enable_commands(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    enable_commands() - 允许物件使用玩家 (player) 的命令.<br>
    函数语法:<br>
    void enable_commands( void );<br>
    <br>
    无传回值 enable_commands( 无参数 );<br>
    函数用法:<br>
    enable_commands() 把 this_object() 标记为活著 (living)<br>
    的物件, 并允许它使用 add_action() 所加入的命令 (要使用<br>
    command() 函式) . 呼叫 enable_commands() 时, MUD 驱动<br>
    程式 (driver) 会寻找内部的 catch_tell() 函式. 如果找到<br>
    了此函式, 每一次有讯息传给此一个物件时 (例如 say() )<br>
    , 驱动程式就会呼叫 catch_tell() 一次.<br>
    <br>
    已知的问题:<br>
    请勿在 create() 函式以外的地方呼叫 enable_commands()<br>
    否则会出现奇怪的问题.<br>
    参考函数:<br>
    this_object(3), living(3), add_action(3), command(3),<br>
    catch_tell(4), say(3), create(4)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    enable_wizard(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    enable_wizard() - 将巫师的特权给予一个物件.<br>
    函数语法:<br>
    void enable_wizard( void );<br>
    <br>
    无传回值 enable_wizard( 无参数 );<br>
    函数用法:<br>
    任何呼叫 enable_wizard() 的可互动 (interactive) 物件,<br>
    会让 wizardp() 对此物件传回真值 (true). 而<br>
    enable_wizard() 可以让这个物件有以下三项特权:<br>
    <br>
    1. 如果编译 MUD 驱动程式当时定义 RESTRICTED_ED 选项,<br>
    则可以使用 ed 的受限制模式 (restricted modes).<br>
    <br>
    2. 可以收到详细的执行错误讯息.<br>
    <br>
    3. 可以使用 trace(3) 和 traceprefix(3) 函式.<br>
    参考函数:<br>
    disable_wizard(3), wizardp(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    environment(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    environment() - 传回一个物件所身处的环境.<br>
    函数语法:<br>
    object environment( object ob );<br>
    <br>
    物件 environment( 物件 ob );<br>
    函数用法:<br>
    传回含有物件 ob 的环境物件. 如果没有指定参数 (argument)<br>
    , ob 预设为 this_object().<br>
    参考函数:<br>
    this_object(3)<br>
    手册翻译:<br>
    pock @ FF 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    error(3) LP MudOSv21c7 error(3)<br>
    <br>
    函数名称:<br>
    error - 产生一个执行时段 (run_time) 错误.<br>
    函数语法:<br>
    void error( string err );<br>
    <br>
    无传回值 error( 字串 err );<br>
    函数用法:<br>
    呼叫 error() 时, 会产生一个执行时段错误 err. 并中止<br>
    目前正在执行的执行绪脉络 (thread). 而发生错误的程式<br>
    会被追踪错误的出处, 并纪录在除错纪录 (debug log) 的<br>
    档案中.<br>
    参考函数:<br>
    catch(3), throw(3), error_handler(4)<br>
    <br>
    手册翻译: Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    errorp(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    errorp() - 判断一个指定的变数是否为错误码 (error code).<br>
    函数语法:<br>
    int errorp( mixed arg );<br>
    <br>
    整数 errorp( 混合 arg );<br>
    函数用法:<br>
    如果参数 arg 是一个整数值的错误码, errorp() 传回 1 .<br>
    <br>
    您可能会修改超越函式 (emulated functions, efun), 而能<br>
    传回一个标准的错误码. 所以程式可以写成像下面的样子:<br>
    <br>
    if (errorp(result = efun_call()))<br>
    printf(&quot;error = %d\n&quot;, result);<br>
    <br>
    在以後的计划中, 我们会加入一个新的函式 perror(result)<br>
    用来传回整数值的错误代码与一个错误讯息的字串.<br>
    参考函数:<br>
    nullp(3), undefinedp(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    eval_cost(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    eval_cost() - 传回执行耗费时间 (evaluation cost) 还<br>
    剩多少.<br>
    函数语法:<br>
    void eval_cost()<br>
    <br>
    无传回值 eval_cost()<br>
    函数用法:<br>
    eval_cost() 在驱动程式 (driver) 判断此时是否陷入一个<br>
    无穷回圈之前, 传回是否可以执行的指示数字.<br>
    参考函数:<br>
    catch(3), error(3), throw(3), error_handler(4),<br>
    set_eval_limit(3), reset_eval_cost()<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    evaluate(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    evaluate() - 执行一个函式指标 (function pointer)<br>
    函数语法:<br>
    mixed evaluate(mixed f, ...)<br>
    <br>
    混合 evaluate( 混合 f, ... )<br>
    函数用法:<br>
    如果 f 是一个函式, 就会以第二个参数以後 (即上面 ...<br>
    的地方) 为 f 使用的参数呼叫 f. 而 f 如果有传回值,<br>
    evaluate( f, ... ) 就相当于直接呼叫 f 的结果.<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    exec(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    exec() - 将一个可互动的 (interactive) 玩家 (player)<br>
    物件切换连结 (connection) 到另外一个物件上.<br>
    函数语法:<br>
    int exec( object to, object from );<br>
    <br>
    整数 exec( 物件 to, 物件 from );<br>
    函数用法:<br>
    这个函式允许指定的物件把可互动的连结 (link) 迁移到另<br>
    外一个物件上. 也就是说, 成功地执行 exec( to, from )<br>
    之後, interactive( to ) 会传回 1, 而 interactive( from )<br>
    会传回 0. 而控制 from 的玩家会转移控制权到 to 的身上.<br>
    <br>
    请注意这个函式的权力非常大, 不当地使用会危及 MUD 的<br>
    系统安全. 正确地限制使用此函式的方法是另外写一个同名的<br>
    模拟超越函式 (simulated emulated function, simul_efun)<br>
    , 并使用 valid_override(4) 来限制此一模拟超越函式的使<br>
    用. (意即 efun::exec() )<br>
    <br>
    exec() 函式在成功地转换之後传回 1, 转换失败则传回 0.<br>
    参考函数:<br>
    interactive(3), valid_override(4)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    exp(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    exp() - 以一个浮点数为指数, 自然对数 e 为底数<br>
    计算其值.<br>
    函数语法:<br>
    float exp( float f );<br>
    <br>
    浮点数 exp( 浮点数 f );<br>
    函数用法:<br>
    exp() 传回 e^f 的值.<br>
    参考函数:<br>
    log(3), pow(3), sqrt(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    explode(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    explode() - 打断一个字串.<br>
    函数语法:<br>
    string *explode( string str, string del );<br>
    <br>
    字串 *explode( 字串 str, 字串 del );<br>
    函数用法:<br>
    explode() 传回一个字串的阵列 (array), 此阵列是<br>
    字串 str 以 del 分界打断的片段.<br>
    □例:<br>
    explode( str, &quot; &quot; );<br>
    <br>
    这样会传回一个 str 中所有英文单字的字串阵列 (假设<br>
    str 是英文句子, 每一个单字由空白字元隔开).<br>
    参考函数:<br>
    sscanf(3), extract(3), replace_string(3), strsrch(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    export_uid(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    export_uid() - 设定一个物件的使用者识别名称 (user id,<br>
    uid).<br>
    函数用法:<br>
    int export_uid( object ob );<br>
    <br>
    整数 export_uid( 物件 ob );<br>
    函数用法:<br>
    设定 ob 的使用者识别名称 (uid) 为 this_object() 的<br>
    有效使用者识别名称 (effective user id, effective uid).<br>
    这个函式只有在 ob 的有效使用者识别名称为 0 时有效.<br>
    参考函数:<br>
    this_object(3), seteuid(3), getuid(3), geteuid(3),<br>
    previous_object(3), valid_seteuid(4)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Feb.12. (Writen 5/23/97)<br>
    <br>
    </td>
  </tr>
  <tr>
    <td width="70%" align="center"><font size="2"><a href="mudos4.asp">上一篇</a> 
    &nbsp;&nbsp;&nbsp;&nbsp; <a href="mudos6.asp">下一篇</a></font></td>
  </tr>
</table>

   <TABLE border=0 cellPadding=0 cellSpacing=0 width=730>
  <TBODY>
  <TR>
    <TD bgColor=#000033 colSpan=3 height=2>
    </TD>
  </TR>
  </TBODY>
</TABLE>
<P>
<CENTER><FONT color=#919191 face=ARIAL,HELVETICA size=-1>对我们网站的建议和合作请与<A 
href="mailto:softroom@wuhee.edu.cn">mailto:softroom@wuhee.edu.cn</A>联系.<BR><BR>Copyright 
(C) 2000 网虫乐园工作室.<script src="http://202.114.98.14/count.js" width=468 height=60 border=0></script></FONT>
<P></P></CENTER></CENTER></CENTER></DIV></BODY></HTML>
