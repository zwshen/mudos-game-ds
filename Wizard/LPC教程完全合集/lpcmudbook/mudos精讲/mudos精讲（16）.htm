
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>网虫乐园--泥潭风云</TITLE>
<META content="MSHTML 5.00.2919.6307" name=GENERATOR>
<META content=TLT name=Author>
<META content=text/html;charset=gb2312 http-equiv=content-type>
<style>
<!--      
A:link {text-decoration: none;color:blue}       
.105V         {font-size: 10.5pt; font-family: 宋体;}
TD          {font-size: 9pt; font-family: 宋体;}
.90V         {font-size: 9pt; font-family: 宋体;}
.90VE         {font-size: 9pt; font-family: arial;}
A:hover      {text-decoration: none;color:red;}
A:visited  {text-decoration: none;}
A:active     {text-decoration: none;color:#ff0000}
-->
</style>


<script>
<!--
lstart=50
loop=true
speed=350 
pr_step=5 

function makeObj(obj,nest){
nest=(!nest) ? '':'document.'+nest+'.'
this.css=(document.layers) ? eval(nest+'document.'+obj):eval(obj+'.style')
    this.scrollHeight=document.layers?this.css.document.height:eval(obj+'.offsetHeight')
    this.up=goUp
this.obj = obj + "Object"
eval(this.obj + "=this")
return this
}
function goUp(speed){
    if(parseInt(this.css.top)>-this.scrollHeight){
        this.css.top=parseInt(this.css.top)-pr_step
        setTimeout(this.obj+".up("+speed+")",speed)
    }else if(loop) {
        this.css.top=lstart
        eval(this.obj+".up("+speed+")")
    }
}
function slideInit(){
    oSlide=makeObj('divNews','divCont')
    oSlide.css.top=lstart
    oSlide.up(speed)
}
onload=slideInit
//-->
</script></head>

<body aLink="#660033" bgColor="#ffffff" leftMargin="0" text=darkgreen link="#000066" vLink="#000066"
topMargin="0" >
<div align="center"><center>
   <table border="1" width="776" borderColor=#ffffff borderColorLight=#ab9c36  align="center" bgColor=#f0f3dc cellPadding=0 cellSpacing=0 >
      <tr>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/home.gif width=15 height=15><a href=http://202.114.98.14/>网虫乐园首页</a></td> 
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/soft.gif height=15 width=15 border=0><a href="http://202.114.98.12/softroom/">软件大观园</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/mud.gif height=15 width=15 border=0><a href="http://202.114.98.14/mud/">泥潭风云</font></a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/freeweb.gif height=15 width=15 border=0><a href="http://202.114.98.14/freeweb/">个人主页空间</a></td>  
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/bbs.gif height=15 width=15 border=0><a href=http://202.114.98.14/bbs/>网虫社区</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/webresource.gif height=15 width=15 border=0><a href="http://202.114.98.14/webresource/">Web资源角</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/show.gif height=15 width=15 border=0><a href="#" onclick="window.open('http://202.114.98.14/show/','','menubar=no,toolbar=no,location=no,directories=no,status=no,resizable=1,scrollbars=1,width=800,height=600,top=0,left=0');">秀网珍藏</a></td>
        <td align="center" width="97"><P align=center><img src=http://202.114.98.14/images/links1.gif height=15 width=15 border=0><a href=http://202.114.98.14/links/>友情链接</a></td>
      </tr>
    </table></center>

<table bgcolor=white width=770 border=1 borderColor=#ffffff borderColorLight=#ab9c36   cellpadding=0 cellspacing=0>
   <tr><td><table bgcolor=white width=770 border=0 cellpadding=0 cellspacing=0>
   <tr><td width=180 height=60><img src=http://202.114.98.14/images/netbugs1.gif width=180 height=60></td>
   <td align=center width=468 valign=center  bgcolor=white><script src="http://202.114.98.14/ad1.js" width=468 height=60 border=0></script></td>
   <td width=112 bgcolor=white><div id="divCont"
style="position:absolute; width:110; height:60; top:25; left:660; clip:rect(0,110,60,0)"><div
id="divNews" style="position:absolute; top:0; left:0">

<p>欢迎光临网虫乐园！<a href=http://202.114.98.14/>首页</a>有网站各子站最新变动介绍和
教育网酷站连接。<p><a href=http://202.114.98.12/softroom/>软件大观园</a>每日更新；收藏3G软件，均为最新版本。
<p><a href=http://202.114.98.14/mud>泥潭风云</a>是教育网内最大的mud站点；<a href=http://202.114.98.14/webresource>Web资源角</a>有三千多动画和背景为你网页增添色彩。
<p><a href=http://202.114.98.14/freeweb/>10M免费个人主页空间</a>，ftp维护；申请三日内批准。<p><a href=http://202.114.98.14/show>秀网珍藏</a>图片近2G，栏目众多，包罗万象，每日都有大量图片增加。
<p>对我们网站的建设的建议欢迎<a href=mailto:softroom@wuhee.edu.cn>来信</a>或写在<a href=http://202.114.98.14/bbs>社区</a>内。</p>
</div></div>
</td>
   </tr>
   </table>
</td></tr></table>

<center>
   <table border="1" width="770" borderColor=#ffffff borderColorLight=#ab9c36  align="center" bgColor=#f0f3dc cellPadding=0 cellSpacing=0 >
      <tr>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/index.htm">首页</A></td> 
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/newcomer/">泥巴入门</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/player/">泥巴进阶</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/source/">泥巴资源</A></td>  
        <td align="center" width="96"><P align=center><A 
        href="http://202.114.98.14/mud/pmud/">图形泥巴</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/mudlife/">泥巴人生</A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/wiz/">巫师乐园</FONT></A></td>
        <td align="center" width="96"><P align=center><A href="http://202.114.98.14/mud/download/">软件下载</A>            <SCRIPT>
   document.write("<a href=http://webpub.au.tsinghua.edu.cn/count/count.dll?Type=Basic&id=2138&ReferID=2138 target=_blank>");
   document.write("<img src=http://webpub.au.tsinghua.edu.cn/count/count.dll?Type=Img2&add=1&id=2138&refer="+escape(top.document.referrer)+" border=0 alt=酷站今日访问 width=12 height=12>");
   </SCRIPT></td>

      </tr>
    </table></center>
    



<table border="0" width="100%" style="color: rgb(255,255,0)" cellspacing="0"
cellpadding="0">
  <tr>
    <td width="7%" rowspan="4"><p align="center">　</p>
    <p align="center">　</p>
    <small><p align="center"></small>　</td>
    <td width="69%" align="center"><font color="#000000">MUDOS<br>
    ―――――――――――――――――――――<br>
    <font size="2">综合地介绍MUD运行平台（MUDOS）<br>
    ―――――――――――――――――――――――――</font></font><font
    size="2" color="#FFFFFF"></font></td>
    <td width="7%" rowspan="4"><font size="2" color="#FFFFFF"></font></td>
  </tr>
  <tr>
    <td width="69%" align="center"><font color="#000000">mudos精讲（16）</td>
  </tr>
  <tr>
    <td width="69%" align="center"><p align="left"><font color="#000000"><br>
    rusage(3) MudOS v21c2 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    rusage() - 报告以系统呼叫 (system call) getrusage() 收集的<br>
    资讯.<br>
    函数语法:<br>
    mapping rusage( void );<br>
    <br>
    映射 rusage( 无参数 );<br>
    函数用法:<br>
    这个超越函式 (efun) 透过 getrusage() 的系统呼叫收集资讯.<br>
    请参阅 getrusage() 线上手册的说明以查询收集的资讯种类.<br>
    有的系统没有 getrusage(), 但是有 times() 的系统呼叫. 在<br>
    这种系统里只有 utime 和 stime 两项资料. 报告的时间单位<br>
    是微秒 (millisecond).<br>
    <br>
    以下是 rusage() 的□例:<br>
    <br>
    void<br>
    create()<br>
    {<br>
    mapping info;<br>
    <br>
    info = rusage();<br>
    write(&quot;使用者时间 = &quot; + info[&quot;utime&quot;] + &quot;微秒\n&quot;);<br>
    write(&quot;系统时间 = &quot; + info[&quot;stime&quot;] + &quot;微秒\n&quot;);<br>
    }<br>
    <br>
    可以使用的项目有:<br>
    <br>
    utime, stime, maxrss, ixrss, idrss, isrss, minflt,<br>
    majflt, nswap, inblock, oublock, msgsnd, msgrcv,<br>
    nsignals, nvcsw, nivcsw.<br>
    参考函数:<br>
    time_expression(3), function_profile(3), time(3), uptime(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    read_buffer(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    read_buffer() - 以缓冲区资料 (buffer) 的型态传回档案的内容,<br>
    或是以字串型态 (string) 传回缓冲区一部份的资<br>
    料.<br>
    函数语法:<br>
    string | buffer read_buffer( string | buffer src,<br>
    int start, int len );<br>
    <br>
    字串 或 缓冲区 read_buffer( 字串 或 缓冲区 src,<br>
    整数 start, 整数 len );<br>
    函数用法:<br>
    如果 src 是一个字串 (档案名称) , 就会从 start 指定的第几<br>
    位元组 (byte) 开始, 读取 len 指定长度的档案内容. 读取的内<br>
    容以缓冲区的资料型态传回. 如果不指定 start 和 len , 则会读<br>
    取整个档案的内容.<br>
    <br>
    如果 src 是一个缓冲区, 就从 start 指定的第几位元开始读取<br>
    len 长度的内容. 然後以字串的型态传回.<br>
    <br>
    请注意, 你可以从一个档案读进缓冲区的资料, 受到编译时段组态<br>
    档案 (runtime config file) 中定义的 maximum byte transfer<br>
    (最大位元组传输量) 控制.<br>
    参考函数:<br>
    write_buffer(3), allocate_buffer(3), bufferp(3),<br>
    read_bytes(3), write_bytes(3)<br>
    作者:<br>
    Truilkan<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.24. (Writen 5/23/97)<br>
    <br>
    read_bytes(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    read_bytes() - 从一个档案或是一个字串读取一连串连续的位元组<br>
    (byte).<br>
    函数语法:<br>
    string read_bytes( string path, int start, int length );<br>
    <br>
    字串 read_bytes( 字串 path, 整数 start, 整数 length );<br>
    函数用法:<br>
    这个函式读取 path 指定的档案内容, 从 start 指定的第几位元组<br>
    开始读取到 length 指定长度的资料. 传回的位元组为字串的型态.<br>
    注意, start + length 的大小绝对不可以超过档案的末端, 否则<br>
    read_bytes() 读取的动作会失败. 如果不指定第二及第三个参数,<br>
    则会读取整个档案.<br>
    参考函数:<br>
    read_file(3), write_bytes(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.24. (Writen 5/23/97)<br>
    <br>
    read_file(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    read_file() - 把一个档案的内容读进一个字串变数里.<br>
    函数语法:<br>
    string read_file( string file, int start_line,<br>
    int number_of_lines );<br>
    <br>
    字串 read_file( 字串 file, 整数 start_line,<br>
    整数 number_of_lines );<br>
    函数用法:<br>
    从一个档案中读入几行文字到一个字串中. 第二个和第三个参数<br>
    可以选择. 如果只指定 file 的参数, 整个档案都会被读进一个<br>
    字串中.<br>
    start_line 是指定你要从档案的第几行开始读取. 如果你指定<br>
    的行数超过档案的尾端或是指定的数字为负数, 则会传回 0.<br>
    参考函数:<br>
    write_file(3), read_buffer(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.24. (Writen 5/23/97)<br>
    <br>
    receive(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    receive() - 对目前的物件显示一段讯息.<br>
    函数语法:<br>
    int receive( string message );<br>
    <br>
    整数 receive( 字串 message );<br>
    函数用法:<br>
    这个超越函式 (efun) 是作为 mud 驱动程式 (driver) 的<br>
    add_message() 函式的介面. 这个函式设计的目的是对目前<br>
    物件显示讯息. 如果目前的物件是「可互动的」则传回 1.<br>
    不是则传回 0. receive() 应被 catch_tell(4) 或是<br>
    receive_message(4) 呼叫.<br>
    参考函数:<br>
    catch_tell(4), receive_message(4), message(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.24. (Writen 5/23/97)<br>
    <br>
    reclaim_objects(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    reclaim_objects - 清除残留在记忆体中的物件.<br>
    函数语法:<br>
    int reclaim_objects( void );<br>
    <br>
    整数 reclaim_objects( 无参数 );<br>
    函数用法:<br>
    这个函式重复检查每一个载入的物件, 并尽力把残留在记忆体<br>
    中的物件清除掉. 这样可以清出一些记忆体, 清理的数量多寡<br>
    要看 mud 本身的程式是如何写的. 如果一个物件被其他物件<br>
    里面的全域变数 (global variable)指标 (pointer) 指向到<br>
    , 就会残留在记忆体中, 然後再被摧毁掉. 这个超越函式<br>
    (efun) 会传回变数遇到的被摧毁的物件数目.<br>
    参考函数:<br>
    destruct(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.24. (Writen 5/23/97)<br>
    <br>
    refs(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    refs - 传回一个资料结构的参考数字.<br>
    函数语法:<br>
    int refs( mixed data );<br>
    <br>
    整数 refs( 混合 data );<br>
    函数用法:<br>
    refs() 会传回 data 的参考数字. 这个函式可以在传回 data<br>
    以前, 判断是否要复制一份资料结构.<br>
    参考函数:<br>
    children(3), inherit_list(3), deep_inherit_list(3),<br>
    objects(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.24. (Writen 5/23/97)<br>
    <br>
    reload_object(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    reload_object - 把一个物件还原成刚刚载入的状态.<br>
    函数语法:<br>
    void reload_object( object ob );<br>
    <br>
    无传回值 reload_object( 物件 ob );<br>
    函数用法:<br>
    对 ob 呼叫 reload_object() 时, 所有由驱动程式管理的物件<br>
    特性 (心跳 heart_beat, 外部呼叫 call_outs, 光线 light,<br>
    阴影 shadow 等) 和内部变数都会重新初始化 (re-initialized),<br>
    然後呼叫 create(). 这个函式的效果相当於先摧毁再载入物件,<br>
    用不著存取磁碟.<br>
    参考函数:<br>
    export_uid(3), new(3), clone_object(3), destruct(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.26. (Writen 5/23/97)<br>
    <br>
    remove_action(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    remove_action - 从区域函式 (local function) 中解除一个<br>
    命令动词 (command verb)<br>
    函数语法:<br>
    int remove_action( string fun, string cmd );<br>
    <br>
    整数 remove_action( 字串 fun, 字串 cmd );<br>
    函数用法:<br>
    remove_action(3) 从一个物件的区域函式中解除一个命令动词.<br>
    基本上, remove_action() 是相对於 add_action(3) 和<br>
    add_verb(3) 的函式. 当您不需要一个动词时, 就可以用<br>
    remove_action() 解除.<br>
    传回值:<br>
    remove_action() 的传回值:<br>
    <br>
    1 解除动词成功.<br>
    <br>
    0 解除失败.<br>
    参考函数:<br>
    add_action(3), query_verb(3), init(4)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.27. (Writen 5/23/97)<br>
    <br>
    remove_call_out(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    remove_call_out() - 取消一个延迟中的外部呼叫 (call_out).<br>
    函数语法:<br>
    int remove_call_out( string fun );<br>
    <br>
    整数 remove_call_out( 字串 fun );<br>
    函数用法:<br>
    取消目前这个物件延迟呼叫的外部呼叫函式 fun. 传回值就是<br>
    外部呼叫还剩下多少延迟时间. 如果函式 fun 已经没有延迟<br>
    的外部呼叫, 就传回 -1.<br>
    参考函数:<br>
    call_out(3), call_out_info(3).<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.27. (Writen 5/23/97)<br>
    <br>
    rename(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    rename() - 更改一个档案的名称.<br>
    函数语法:<br>
    int rename( string src, string dst );<br>
    <br>
    整数 rename( 字串 src, 字串 dst );<br>
    函数用法:<br>
    把叫做 src 的档案改名叫做 dst.<br>
    传回值:<br>
    改名成功就传回 0. 失败则传回非零值.<br>
    参考函数:<br>
    rm(3), rmdir(3), cp(3), link(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.27. (Writen 5/23/97)<br>
    <br>
    replace_program(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    replace_program() - 把 this_object() (目前这个物件)<br>
    的程式置换掉.<br>
    函数语法:<br>
    void replace_program( string str );<br>
    <br>
    无传回值 replace_program( 字串 str );<br>
    函数用法:<br>
    replace_program() 会把 this_object() 替换成这个物件<br>
    继承的物件. 字串 str 是要进行置换的档案名称. 物件进<br>
    行置换之後, 目前的物件就相当於继承物件的复制品. 只是<br>
    保留目前物件的档案名称和全域变数 (global variable)<br>
    不变. 在目前的物件程式执行完毕以前, 不会进行置换的动作.<br>
    参考函数:<br>
    clone_object(3), new(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.27. (Writen 5/23/97)<br>
    <br>
    replace_string(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    replace_string() - 替换一个字串中符合条件的字.<br>
    函数语法:<br>
    string replace_string( str, pattern, replace );<br>
    string replace_string( str, pattern, replace, max );<br>
    string replace_string( str, pattern, replace, first, last );<br>
    <br>
    string str, pattern replace;<br>
    int max, first, last;<br>
    <br>
    字串 replace_string( str, pattern, replace );<br>
    字串 replace_string( str, pattern, replace, max );<br>
    字串 replace_string( str, pattern, replace, first, last );<br>
    <br>
    字串 str, pattern replace;<br>
    整数 max, first, last;<br>
    函数用法:<br>
    replace_string() 将 str 中所有符合条件的字 pattern 替换成<br>
    指定的字 replace. 如果 pattern 没有内容 (为零) , 就传回原<br>
    来的 str . 如果传回的字串超过定义的最大字串长度, 则传回一<br>
    个 undefindp() 传回 1, stringp() 传回 0 的值.<br>
    <br>
    replace_string() 可以指定 replace 为空的字串, 以用来除去<br>
    字串中特定的字. 举例来说: replace_string(&quot; 1 2 3 &quot;, &quot; &quot;, 
    &quot;&quot;)<br>
    会传回 &quot;123&quot;. replace_string() 执行的速度比用 explode() 和<br>
    implode() 快.<br>
    <br>
    第四和第五个参数可有可无 (这是为了相容於以前的版本). 这两个<br>
    附加的参数有以下的功用:<br>
    <br>
    第四个参数 first:<br>
    <br>
    指定同一个字串最多替换几次 (从 1 开始算). 如果这里指定为 0,<br>
    就当作是全部都换. 所以 replace_string(&quot;xyxx&quot;, &quot;x&quot;, 
    &quot;z&quot;, 2)<br>
    会传回 &quot;zyzx&quot;.<br>
    <br>
    第五个参数 last:<br>
    <br>
    第五个参数限制符合条件的□围:<br>
    first &lt; 1: 从头开始全部替换.<br>
    last == 0 或 last &gt; 最高符合数(max_matches): 全部替换到最後.<br>
    first &gt; last: 完全不改变.<br>
    举例: replace_string(&quot;xyxxy&quot;, &quot;x&quot;, &quot;z&quot;, 2, 3) 传回 
    &quot;xyzzy&quot;.<br>
    参考函数:<br>
    sscanf(3), explode(3), strsrch(3)<br>
    作者:<br>
    Zak@TMI-2 撰写限制条件的部份.<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    reset_eval_cost(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    reset_eval_cost() - 重新设定剩下的执行耗费时间数字.<br>
    函数语法:<br>
    void reset_eval_cost();<br>
    函数用法:<br>
    reset_eval_cost() 把剩下的执行耗费时间数字设定成最高<br>
    执行耗费时间数.<br>
    参考函数:<br>
    catch(3), error(3), throw(3), error_handler(4),<br>
    eval_cost(3), set_eval_limit(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    resolve(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    resolve() - 转换一个网际网路地址 (internat address) 为<br>
    网域名称 (domain name), 反之亦然..<br>
    函数语法:<br>
    int resolve( string address, string callback_func );<br>
    <br>
    整数 resolve( 字串 address, 字串 callback_func );<br>
    函数用法:<br>
    resolve() 会转换像 &quot;140.128.136.11&quot; 形式的 address 成为<br>
    &quot;bbs.csmc.edu.tw&quot; 这种形式的网域名字. 或是把<br>
    &quot;bbs.csmc.edu.tw&quot; 这种形式的 address 转换成<br>
    &quot;140.128.136.11&quot; 形式的地址. 转换成功後, 会呼叫目前物件<br>
    的 callback_func. callback_func 的格式为:<br>
    <br>
    void callback(string address, string resolved, int key);<br>
    <br>
    无传回值 callback( 字串 address, 字串 resolved, 整数 key );<br>
    <br>
    key 是 resolve() 的传回值. address 是转换後的地址或网域.<br>
    如果转换失败, 则会传回 0.<br>
    参考函数:<br>
    query_host_name(3), socket_address(3), query_ip_name(3),<br>
    query_ip_number(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    restore_object(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    restore_object() - 从一个档案读回一个物件的变数值.<br>
    函数语法:<br>
    int restore_object( string name, int flag );<br>
    <br>
    整数 restore_object( 字串 name, 整数 flag );<br>
    函数用法:<br>
    从叫作 name 的档案读回目前物件的变数值. 如果 flag 是 1,<br>
    则非静态变数 (non-static) 不会在读回之前被清除为零.<br>
    (普通状况下, 非静态变数都是零).<br>
    <br>
    如果读回的过程出错, 则所有的变数都不会更动, 并传回错误.<br>
    参考函数:<br>
    save_object(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2 (Writen 5/23/97)<br>
    <br>
    restore_variable(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    restore_variable() - 从一个字串读回变数值.<br>
    函数语法:<br>
    mixed restore_variable( string value );<br>
    <br>
    混合 restore_variable( 字串 value );<br>
    函数用法:<br>
    从一个字串读回变数值. 字串的格式与 save_object() 和<br>
    restore_object() 所使用的相同.<br>
    参考函数:<br>
    restore_object(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    rm(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    rm() - 删除一个档案.<br>
    函数语法:<br>
    int rm( string file );<br>
    <br>
    整数 rm( 字串 file );<br>
    函数用法:<br>
    删除 file 这个档案. 如果失败就传回 0, 成功则传回 1.<br>
    参考函数:<br>
    mkdir(3), rmdir(3), link(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    rmdir(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    rmdir() - 删除一个目录.<br>
    函数语法:<br>
    int rmdir( string dir );<br>
    <br>
    整数 rmdir( 字串 dir );<br>
    函数用法:<br>
    删除 dir 这个目录.<br>
    传回值:<br>
    成功就传回非零值 (nonzero), 失败则传回 0.<br>
    参考函数:<br>
    rm(3), mkdir(3), link(3)<br>
    手册翻译:<br>
    Phoebus@ZH 97.Jun.2. (Writen 5/23/97)<br>
    <br>
    random(3) LP MudOSv21c7 (7 Jul 1996)<br>
    <br>
    函数名称:<br>
    random() - 传回一个「假性」乱数 (pseudo-random number).<br>
    函数语法:<br>
    int random( int n );<br>
    <br>
    整数 random( 整数 n );<br>
    函数用法:<br>
    传回一个□围从 0 到 n - 1 的假性乱数.<br>
    手册翻译:<br>
    Phoebus@ZH 97.May.2. (Writen 5/23/97)<br>
    译按:<br>
    真正的乱数必须先给予一个种子数 (seed number),<br>
    再藉由查乱数表取得一组乱数, 而这些乱数值均介於<br>
    0 与 1 之间.<br>
    <br>
    </td>
  </tr>
  <tr>
    <td width="69%" align="center"><font size="2"><a href="mudos15.asp">上一篇</a> 
    &nbsp;&nbsp;&nbsp;&nbsp; <a href="mudos17.asp">下一篇</a></font></td>
  </tr>
</table>

   <TABLE border=0 cellPadding=0 cellSpacing=0 width=730>
  <TBODY>
  <TR>
    <TD bgColor=#000033 colSpan=3 height=2>
    </TD>
  </TR>
  </TBODY>
</TABLE>
<P>
<CENTER><FONT color=#919191 face=ARIAL,HELVETICA size=-1>对我们网站的建议和合作请与<A 
href="mailto:softroom@wuhee.edu.cn">mailto:softroom@wuhee.edu.cn</A>联系.<BR><BR>Copyright 
(C) 2000 网虫乐园工作室.<script src="http://202.114.98.14/count.js" width=468 height=60 border=0></script></FONT>
<P></P></CENTER></CENTER></CENTER></DIV></BODY></HTML>
