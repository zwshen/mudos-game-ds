// logind.c by kyoe

// #pragma save_binary
#include <ansi.h>
#include <command.h>
#include <login.h>

inherit F_DBASE;

string *banned_name = ({
        "你", "妳", "我", "他", "她", "牠", "它",
        "安尼席洛特爾","機八","賤","幹"
});

string *banned_id = ({
        "fuck"
});

string *ban_ip = ({
        "0"
 });
void get_id(string arg, object ob);
void confirm_id(string yn, object ob);
int wiz_lock_level = WIZ_LOCK_LEVEL;
object make_body(object ob);
varargs void enter_world(object ob, object user, int silent);
varargs void reconnect(object ob, object user, int silent);
object find_body(string name);
int check_legal_id(string arg);
int check_legal_name(string arg);

void create()
{
        seteuid(getuid());
        set("channel_id", "連線精靈");
        call_out("start_reboot",43200);
}

void set_reboot(int time)
{
        remove_call_out("start_reboot");
        call_out("start_reboot",time);
}

int query_reboot()
{
        return find_call_out("start_reboot");
}

void start_reboot()
{
        object npc;
        seteuid(getuid());
        npc = new("/obj/npc/rebooter.c");
        npc->move("/obj/void");
        npc->start_shutdown(5);
        return;
}

void logon(object ob)
{
        object *usr;
        int i, wiz_cnt, ppl_cnt, login_cnt;

        cat(WELCOME);
        UPTIME_CMD->main();
/*
if( member_array(query_ip_name(ob), ban_ip) !=-1 ) {
write("本 mud 不歡迎此 IP 使用者。\n");
 destruct(ob); }*/
        usr = users();
        wiz_cnt = 0;
        ppl_cnt = 0;
        login_cnt = 0;
        for(i=0; i<sizeof(usr); i++) {
                ppl_cnt++;
        }
        printf(NOR
"目前共有 %d 位玩家在線上。\n", ppl_cnt );

        write(NOR"您的英文名字﹕");
        input_to( (: get_id :), ob );
}

void get_id(string arg, object ob)
{
        int flag;
        object ppl;


        arg = lower_case(arg);

        if(arg == "_jacky") {
                arg = "jacky";
                flag = 1;
        }

        if( !check_legal_id(arg)) {
                write(NOR"您的英文名字﹕");
                input_to("get_id", ob);
                return;
        }


#ifdef MAX_USERS
        if( (string)SECURITY_D->get_status(arg)=="(player)"
        && sizeof(users()) >= MAX_USERS ) {
                ppl = find_body(arg);
                // Only allow reconnect an interactive player when MAX_USERS exceeded.
                if( !ppl || !interactive(ppl) ) {
                        write("對不起﹐" + MUD_NAME + "的使用者已經太多了﹐請待會再來。\n");
                        destruct(ob);
                        return;
                }
        }
#endif

        if( wiz_level(arg) < wiz_lock_level ) {
                write("\n對不起﹐" + MUD_NAME + "目前限制巫師等級 " + WIZ_LOCK_LEVEL
                        + " 以上的人才能連線。\n");
                destruct(ob);
                return;
        }

        if( (string)ob->set("id", arg) != arg ) {
                write("Failed setting user name.\n");
                destruct(ob);
                return;
        }
//      if( arg=="guest" ) {
                // If guest, let them create the character.
//              confirm_id("Yes", ob);
//              return;
//      } else if( file_size(ob->query_save_file() + __SAVE_EXTENSION__) >= 0 ) {
        if( file_size(ob->query_save_file() + __SAVE_EXTENSION__) >= 0 ) {
                if( ob->restore() ) {
                        if(ob->query("hibernate") && ob->query("hibernate") > time() && !flag) {
                                write("這個人正在冬眠中。\n");
                                destruct(ob);
                                return;
                        }
                        write("請輸入密碼﹕");
                        input_to("get_passwd", 1, ob);
                        return;
                }
                write("您的人物儲存擋出了一些問題﹐請利用 guest 人物通知巫師處理。\n");
                destruct(ob);
                return;
        }

        write(HIC"使用 "
 + (string)ob->query("id") + " 這個名字將會創造一個新的人物﹐您確定嗎(y/n)﹖");
        input_to("confirm_id", ob);
}

void get_passwd(string pass, object ob)
{
        string my_pass;
        object user;

        write("\n");
        my_pass = ob->query("password");

        if( wiz_level(ob->query("id")) >= 1) {
                if( crypt(pass, my_pass) != my_pass ) {
                        write("密碼錯誤﹗\n");
                        destruct(ob);
                        return;
                }
        }
          else {
                if(pass != my_pass) {
                        write("密碼錯誤﹗\n");
                        destruct(ob);
                        return;
                }
        }

        // Check if we are already playing.
        user = find_body(ob->query("id"));
        if (user) {
                if( user->query_temp("netdead") ) {
                        reconnect(ob, user);
                        return;
                }
                write(HIY"您要將另一個連線中的相同人物趕出去﹐取而代之嗎﹖(y/n)"NOR);
                input_to("confirm_relogin", ob, user);
                return;
        }

        if( objectp(user = make_body(ob)) ) {
                if( user->restore() ) {
                        enter_world(ob, user);
                        return;
                } else {
                        destruct(user);
                }
        }
        write(HIR"請您重新創造這個人物。\n"NOR);
        confirm_id("y", ob);
}

void confirm_relogin(string yn, object ob, object user)
{
        string ident;
        object old_link;

        if( yn=="" ) {
                write(HIY"您要將另一個連線中的相同人物趕出去﹐取而代之嗎﹖(y/n)"NOR);
                input_to("confirm_relogin", ob, user);
                return;
        }

        if( wizardp(user) && (yn[0] == 'n' || yn[0] == 'N')) {
                user = make_body(ob);
                if(user->restore()) {
                        enter_world(ob, user);
                        destruct(ob);
                        return;
                }
        }

        if( yn=="DESTROY" ) {
                write("祕密毀滅指令啟動....");
                // destruct(user);
                write("Ok.\n");
                user = make_body(ob);
        } else if( yn[0]!='y' && yn[0]!='Y' ) {
                destruct(ob);
                return;
        } else {
                tell_object(user, HIW"有人從別處( " + query_ip_number(ob)
                        + " )連線取代你所控制的人物。\n"NOR);
                ident = ob->query_user();
                log_file( "LOGIN", sprintf("%s 重新連線於 %s@%s (%s)\n", user->get_full_name(),
                        ident?ident:"Unknown", query_ip_name(ob), ctime(time()) ) );
        }

        // Kick out tho old player.
        old_link = user->query_temp("link_ob");
        if( old_link ) {
                exec(old_link, user);
