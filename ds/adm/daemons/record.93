//紀錄精靈. by Luky 1999/8/10
// #pragma save_binary
#include <ansi.h>
inherit F_SAVE;

mapping record;
string past_money_rec;
string now_money_rec;
string future_money_rec;
string pk_rec;
string mk_rec;
string popularity_rec;
string mud_age_rec;
string temp_rec;
string *do_sort_record(string type,string *keys);
void resort_record();
int remove_temp_record();
void create()
{
        seteuid(getuid());
        if( !restore() )
        {
        	record = ([]);
        }
        else
        {
        	if( !mapp(record) ) record = ([]);
        }
        remove_temp_record();
	resort_record();
}
string query_save_file() { return DATA_DIR + "record"; }

int set_record(string id, mapping info)
{
	record[id]=info;
        save();
        return 1;
}

mapping query_record(string id)
{
	if(!undefinedp(record[id]) ) return record[id];
        else return ([]);

}

int remove_record(string id)
{
	if(undefinedp(record[id]) ) return 0;
	map_delete(record,id);
        save();
        return 1;
}
int add_temp_record(string arg)
{
	if(temp_rec=="本日無大事。\n" || temp_rec=="紀錄已清除!\n") temp_rec="\n";
        temp_rec+=arg;
        return 1;
}
int remove_temp_record()
{
	temp_rec="本日無大事。\n";
        save();
        return 1;
}
int remove_all_record()
{
	record=([]);
	past_money_rec="紀錄已清除!\n";
	now_money_rec="紀錄已清除!\n";
	future_money_rec="紀錄已清除!\n";
	pk_rec="紀錄已清除!\n";
	mk_rec="紀錄已清除!\n";
	popularity_rec="紀錄已清除!\n";
	mud_age_rec="紀錄已清除!\n";
	temp_rec="紀錄已清除!\n";
        save();
        return 1;
}

int do_record(object me)
{
	object money;
	int value;
	mapping player_info = ([
				"name": "無名氏",
				"past_money": 0,
				"now_money": 0,
				"future_money": 0,
				"MKS": 0,
				"PKS": 0,
				"popularity": 0,
				"mud_age": 0,
				]);
	player_info["name"]=me->query("name");
	money=present("past_money",me);
	if(money) value=money->value();
	else value=0;
	player_info["past_money"]=value+(int)me->query("bank/past");
	money=present("dollar",me);
	if(money) value=money->value();
	else value=0;
	player_info["now_money"]=value+(int)me->query("bank/now");
	player_info["future_money"]=(int)me->query("bank/future");
	player_info["MKS"]=(int)me->query("MKS");
	player_info["PKS"]=(int)me->query("PKS");
	player_info["popularity"]=(int)me->query("popularity");
	player_info["mud_age"]=(int)me->query("mud_age");
	return set_record(me->query("id"),player_info);
}

void resort_record()
{
	string *key,*old_key;
	int key_size,i,max_value;
	mapping record_temp;

	record_temp = record;
	old_key=keys(record_temp);
	key_size=sizeof(old_key);
	
	if(key_size<1)
	{
		past_money_rec="\n    目前沒有排行紀錄 \n\n";
		now_money_rec="\n    目前沒有排行紀錄 \n\n";
		future_money_rec="\n    目前沒有排行紀錄 \n\n";
		pk_rec="\n    目前沒有排行紀錄 \n\n";
		mk_rec="\n    目前沒有排行紀錄 \n\n";
		popularity_rec="\n    目前沒有排行紀錄 \n\n";
		mud_age_rec="\n    目前沒有排行紀錄 \n\n";
		return;
	}
	//
	// 屠殺怪物排行
	//
	key=do_sort_record("MKS",old_key);
	mk_rec="\n";
	mk_rec+=HIM"  夢幻七域擊殺生物排行榜\n"NOR"==============================================\n";
	for(i=0;i<key_size && i<9;i++)
	{
		mk_rec+=sprintf(" %6s %-18s  擊殺怪物: %-12d\n",
		"第"+chinese_number(i+1)+"名:",record_temp[key[i]]["name"]+"("+key[i]+")",record_temp[key[i]]["MKS"],);
	}
	mk_rec+="==============================================\n";
	//
	// 屠殺玩家排行
	//
	key=do_sort_record("PKS",old_key);
	pk_rec="\n";
	pk_rec+=HIR"  夢幻七域殺人狂通緝名單\n"NOR"==============================================\n";
	for(i=0;i<key_size && i<9;i++)
	{
		if(record_temp[key[i]]["PKS"]<1) continue;
		pk_rec+=sprintf(" %10s %-18s 受害人數 %d 人\n",
		"第"+chinese_number(i+1)+"號殺手:",record_temp[key[i]]["name"]+"("+key[i]+")",record_temp[key[i]]["PKS"],);
	}
	pk_rec+="==============================================\n";
	//
	// 古代財富排行
	//
	key=do_sort_record("past_money",old_key);
	past_money_rec="\n";
	past_money_rec+=HIY"  夢幻七域古代富翁排行榜\n"NOR"==============================================\n";
	for(i=0;i<key_size && i<9;i++)
	{
		past_money_rec+=sprintf(" %6s %-18s  總資產: %-12d\n",
		"第"+chinese_number(i+1)+"名:",record_temp[key[i]]["name"]+"("+key[i]+")",record_temp[key[i]]["past_money"],);
	}
	past_money_rec+="==============================================\n";
	//
	// 現代財富排行
	//
	key=do_sort_record("now_money",old_key);
	now_money_rec="\n";
	now_money_rec+=HIY"  夢幻七域現代富翁排行榜\n"NOR"==============================================\n";
	for(i=0;i<key_size && i<9;i++)
	{
		now_money_rec+=sprintf(" %6s %-18s  總資產: %-12d\n",
		"第"+chinese_number(i+1)+"名:",record_temp[key[i]]["name"]+"("+key[i]+")",record_temp[key[i]]["now_money"],);
	}
	now_money_rec+="==============================================\n";
	//
	// 知名度排行
	//
	key=do_sort_record("popularity",old_key);
	popularity_rec="\n";
	popularity_rec+=HIW"  夢幻七域英雄排行榜\n"NOR"==============================================\n";
	for(i=0;i<key_size && i<9;i++)
	{
		if(record_temp[key[i]]["popularity"]<1) continue;
		popularity_rec+=sprintf(" %6s %-18s  知名度: %-12d\n",
		"第"+chinese_number(i+1)+"勇士:",record_temp[key[i]]["name"]+"("+key[i]+")",record_temp[key[i]]["popularity"],);
	}
	popularity_rec+="==============================================\n";
	//
	// 遊戲年齡排行
	//
	key=do_sort_record("mud_age",old_key);
	mud_age_rec="\n";
	mud_age_rec+=HIC"  夢幻七域老鳥排行榜\n"NOR"==============================================\n";
	for(i=0;i<key_size && i<9;i++)
	{
		mud_age_rec+=sprintf(" %6s %-18s  墮落時間: %-8d 小時\n",
		"第"+chinese_number(i+1)+"名:",record_temp[key[i]]["name"]+"("+key[i]+")",record_temp[key[i]]["mud_age"]/3600,);
	}
	mud_age_rec+="==============================================\n";
}

string query_past_money_rec()
{
	return past_money_rec;
}
string query_now_money_rec()
{
	return now_money_rec;
}
string query_future_money_rec()
{
	return future_money_rec;
}
string query_pk_rec()
{
	return pk_rec;
}
string query_mk_rec()
{
	return mk_rec;
}
string query_popularity_rec()
{
	return popularity_rec;
}
string query_mud_age_rec()
{
	return mud_age_rec;
}
string query_temp_rec()
{
	return temp_rec;
}
string *do_sort_record(string type,string *keys)
{
	string *temp_keys,*result=({});
	int i=0,j,max_value,mark;
	temp_keys=keys;
	while(i<sizeof(keys) && i<10)
	{
		max_value=0;
		for(j=0;j<sizeof(temp_keys);j++) //找最大值
		{
			if(record[temp_keys[j]][type]>max_value)
			{
			 max_value=record[temp_keys[j]][type];
			 mark=j;
			}
		}
		result+=({temp_keys[mark]});
		temp_keys-=({temp_keys[mark]});
		i++;
	}
	return result;
}